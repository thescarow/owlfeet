const svg_group = `
<svg width="102" height="83" viewBox="0 0 102 83"  xmlns="http://www.w3.org/2000/svg">
<path d="M1 64V77.5C1 79.9853 3.03509 82 5.54545 82H69.1818C71.6923 82 73.7273 79.9853 73.7273 77.5V64C73.7273 54.059 65.5868 46 55.5455 46H19.1818C9.14027 46 1 54.059 1 64ZM82.745 78.9031C82.5841 80.4475 83.6873 82 85.2559 82H96.4545C98.9645 82 101 79.9853 101 77.5V64C101 54.059 92.8595 46 82.8182 46H78.4155C77.4332 46 76.8941 47.1687 77.4786 47.9503C80.8341 52.4368 82.8182 57.9889 82.8182 64V77.5C82.8182 77.9739 82.7932 78.4419 82.745 78.9031ZM55.5455 19C55.5455 28.9411 47.405 37 37.3636 37C27.3221 37 19.1818 28.9411 19.1818 19C19.1818 9.05887 27.3221 1 37.3636 1C47.405 1 55.5455 9.05887 55.5455 19ZM61.6859 36.7642C60.1368 36.514 59.6091 34.7018 60.4464 33.3878C63.1009 29.2226 64.6368 24.2889 64.6368 19C64.6368 13.7111 63.1009 8.77735 60.4464 4.6122C59.6091 3.29829 60.1368 1.48618 61.6859 1.23589C62.6464 1.08068 63.6323 1 64.6368 1C74.6786 1 82.8186 9.05887 82.8186 19C82.8186 28.9411 74.6786 37 64.6368 37C63.6323 37 62.6464 36.9195 61.6859 36.7642Z"  />
</svg>
`
const svg_chatPic = `
<svg width="100" height="100" viewBox="0 0 100 100"  xmlns="http://www.w3.org/2000/svg">
<path d="M85.3378 14.671C80.6984 10.0204 75.1873 6.33078 69.1201 3.81331C63.0528 1.29584 56.5487 0 49.9799 0C43.4112 0 36.907 1.29584 30.8398 3.81331C24.7726 6.33078 19.2615 10.0204 14.6221 14.671C-4.68592 33.9806 -4.87188 65.2823 14.0622 84.8229L14.4263 85.1929L14.4576 85.2242L14.6142 85.3827L14.9803 85.7488C19.1353 89.8269 23.9711 93.1474 29.2694 95.5602L29.7764 95.7873C30.1366 95.9458 30.5007 96.1025 30.8647 96.2532L31.452 96.4901L32.0392 96.7211C32.4581 96.8829 32.8802 97.0382 33.3057 97.187H33.3174C33.7689 97.3475 34.2256 97.5002 34.6876 97.645L35.3981 97.8662C36.0597 98.0685 36.7266 98.2558 37.3986 98.4281L38.072 98.5964C38.4321 98.6865 38.7923 98.7687 39.1544 98.847C39.5165 98.9253 39.8806 99.0036 40.2447 99.0741C40.7014 99.1641 41.1582 99.247 41.6149 99.3227C41.8439 99.3618 42.0729 99.399 42.3039 99.4343C42.5349 99.4695 42.7639 99.5028 42.9949 99.5341L43.5508 99.6085C43.727 99.632 43.9031 99.6535 44.0813 99.6731H44.1302L44.6744 99.7338L45.2224 99.7886L45.7822 99.8375C46.1561 99.8688 46.53 99.8943 46.9058 99.9178L47.5987 99.955H47.6653C47.8904 99.9648 48.1175 99.9746 48.3445 99.9804H48.3778H48.5324C48.6675 99.9804 48.8006 99.9804 48.9357 99.9902H49.0316C49.3448 99.9902 49.6599 100 49.975 100H49.9946C50.8102 100 51.6232 99.9798 52.4336 99.9393C52.8133 99.9217 53.1911 99.8982 53.5689 99.8728H53.6765C53.8723 99.8571 54.068 99.8434 54.2638 99.8258L54.8686 99.771C55.2718 99.7318 55.6744 99.6881 56.0763 99.6398C56.4776 99.5909 56.8769 99.5361 57.2762 99.4793C57.6755 99.4225 58.0748 99.3579 58.4702 99.2835C58.666 99.2502 58.8617 99.215 59.0575 99.1778C59.2532 99.1406 59.449 99.1034 59.6447 99.0662L60.2319 98.9468L60.8661 98.8098L61.3535 98.6982C61.4005 98.6884 61.4494 98.6786 61.4964 98.6649H61.518C61.6765 98.6297 61.8351 98.5905 61.9916 98.5514C62.1874 98.5044 62.3831 98.4555 62.5789 98.4046L63.1661 98.2499C63.5576 98.1442 63.9419 98.0346 64.319 97.9211C64.5148 97.8643 64.7105 97.8055 64.8925 97.7449C65.0746 97.6842 65.2742 97.6255 65.4641 97.5628C65.654 97.5002 65.8439 97.4395 66.0337 97.3671C66.4109 97.2365 66.7873 97.106 67.1632 96.9755L67.7249 96.7661C67.9207 96.6956 68.0968 96.6232 68.2828 96.5507C68.6547 96.4039 69.0227 96.2532 69.3927 96.0985C69.6687 95.983 69.9427 95.8636 70.2167 95.7423C70.4908 95.6209 70.7609 95.4976 71.033 95.3703L71.5243 95.1393C71.6789 95.0669 71.8316 94.9925 71.9843 94.9162C72.2779 94.7713 72.5709 94.6238 72.8632 94.4737C77.2798 92.1844 81.3322 89.252 84.8876 85.7723L84.9796 85.6979C85.1127 85.5883 85.2262 85.4748 85.3261 85.3749C85.4964 85.2046 85.6666 85.0323 85.833 84.8601L85.8565 84.8385L85.9211 84.77C95.0515 75.348 100.108 62.7115 99.9982 49.5913C99.8884 36.4712 94.6208 23.9211 85.3339 14.6534L85.3378 14.671ZM33.0571 21.2465C36.9758 17.3271 42.1321 14.8878 47.6476 14.3443C53.163 13.8008 58.6963 15.1867 63.3045 18.2659C67.9128 21.345 71.3109 25.9269 72.9198 31.2308C74.5288 36.5347 74.249 42.2325 72.1282 47.3532C70.0074 52.474 66.1768 56.7009 61.2891 59.3137C56.4014 61.9265 50.759 62.7636 45.3233 61.6823C39.8876 60.601 34.995 57.6683 31.4791 53.3837C27.9632 49.0992 26.0416 43.7281 26.0417 38.1855C26.0327 35.0383 26.6481 31.9207 27.8523 29.013C29.0566 26.1054 30.8256 23.4656 33.0571 21.2465ZM18.0319 84.586C18.1689 84.4255 18.3079 84.265 18.4469 84.1064L18.4801 84.0751C18.4801 84.0751 18.4801 84.0751 18.4899 84.0653C18.5389 84.0085 18.5898 83.9498 18.6407 83.895L18.948 83.5544C19.0517 83.4408 19.1555 83.3273 19.2612 83.2157L19.3121 83.1609L19.3277 83.1433C19.4315 83.0297 19.5352 82.9201 19.6409 82.8105C19.7994 82.6441 19.96 82.4777 20.1224 82.3152C20.2223 82.2134 20.3182 82.1195 20.4258 82.0137C20.5335 81.908 20.6079 81.8297 20.6999 81.7436L20.8134 81.632C20.9132 81.5361 21.0091 81.4363 21.1129 81.3482L21.154 81.309L21.1677 81.2953L21.2284 81.2385C21.338 81.1328 21.4476 81.031 21.5592 80.9312C21.6277 80.8666 21.6962 80.802 21.7667 80.7354L21.8097 80.6982C21.9135 80.6004 22.0211 80.5025 22.1268 80.4124L22.3676 80.201C22.4772 80.1031 22.5888 80.0053 22.7003 79.9152L22.9822 79.6744C23.0781 79.5922 23.178 79.51 23.2758 79.4297C23.3737 79.3495 23.4951 79.2496 23.6066 79.1615C23.6888 79.093 23.7711 79.0265 23.8552 78.9658L23.8905 78.9384L23.9394 78.8992C24.0333 78.8229 24.1351 78.7485 24.2252 78.6741L24.2467 78.6584C24.3224 78.5971 24.3987 78.5384 24.4757 78.4823L24.5149 78.4509L24.74 78.2806H24.7517L24.7752 78.263C24.9161 78.1554 25.0571 78.0496 25.2 77.9479C25.2372 77.9185 25.2763 77.8891 25.3155 77.8637C25.4623 77.754 25.6091 77.6483 25.7578 77.5446L26.0123 77.3664L26.0456 77.3449L26.3705 77.1198L26.4077 77.0924L26.4547 77.0611L26.5486 77.0004C26.7111 76.8888 26.8736 76.7811 27.038 76.6735C27.2024 76.5658 27.3531 76.4679 27.5136 76.3681C27.6213 76.2996 27.729 76.2311 27.8386 76.1723L27.8973 76.1351L28.3788 75.8395C28.5746 75.7182 28.786 75.5968 28.9915 75.4793L29.062 75.4382H29.0737C29.1892 75.3697 29.3066 75.3051 29.4241 75.2425L29.5004 75.2014L29.5689 75.1622C29.659 75.1113 29.749 75.0604 29.841 75.0115C29.978 74.9351 30.1151 74.8607 30.254 74.7883L30.4498 74.6885L30.4772 74.6748L30.575 74.6239L30.6377 74.5906C30.7865 74.5103 30.9391 74.4359 31.0879 74.3576L31.6184 74.0953L31.8904 73.9622H31.9081L31.957 73.9387L32.0275 73.9054C32.1841 73.8291 32.3426 73.7567 32.5012 73.6842L32.6069 73.6353C32.8026 73.5433 33.0101 73.4532 33.2137 73.3652L33.3448 73.3064L33.8302 73.0989H33.8459L34.4038 72.8718C34.4414 72.8542 34.48 72.8385 34.5193 72.8249H34.531L34.7737 72.7309L35.0282 72.633L35.2513 72.5469C35.4471 72.4764 35.6311 72.4059 35.8209 72.3394C35.864 72.3211 35.9071 72.3054 35.9501 72.2924C36.1165 72.2317 36.2848 72.173 36.4532 72.1182C36.5511 72.0829 36.6489 72.0497 36.7488 72.0183C36.9014 71.9655 37.0561 71.9146 37.2107 71.8676L37.4064 71.805L37.4554 71.7893L37.4887 71.7795C37.6844 71.7227 37.8606 71.664 38.0485 71.6092L49.6756 87.4441L61.9956 71.6249L62.2363 71.6973C62.3968 71.7443 62.5554 71.7952 62.7139 71.8441L62.9253 71.9107L63.3168 72.0379L63.4343 72.0771L63.9001 72.2376H63.9177L64.2192 72.3433L64.4619 72.4333C64.6205 72.4901 64.7771 72.5488 64.9356 72.6095C65.149 72.6898 65.3604 72.772 65.5718 72.8562L65.6657 72.8934L65.7616 72.9325L65.9574 73.0108L66.0141 73.0343L66.0455 73.048L66.0964 73.0676C66.204 73.1087 66.3136 73.1557 66.4193 73.2027C66.5857 73.2712 66.7462 73.3436 66.9106 73.416L66.9596 73.4376L67.0438 73.4748L67.1906 73.5394L67.3354 73.6059C67.3609 73.6177 67.3883 73.6275 67.4137 73.6412L67.721 73.7821L67.7817 73.8115C67.8345 73.835 67.8874 73.8585 67.9402 73.8859H67.95C68.1184 73.9661 68.2906 74.0464 68.457 74.1306L68.6371 74.2206L68.6821 74.2421C68.8211 74.3107 68.9601 74.3792 69.0971 74.4516L69.1715 74.4908H69.1852C69.2107 74.5023 69.2356 74.5153 69.2596 74.5299L69.3339 74.5691L69.3966 74.6004L69.8487 74.8392L70.0112 74.9273C70.1887 75.0226 70.3648 75.1204 70.5397 75.2209C70.5686 75.2351 70.5967 75.2508 70.6239 75.2679C70.8196 75.3795 71.0154 75.493 71.2111 75.6066C71.2483 75.6262 71.2835 75.6496 71.3207 75.6712L71.7768 75.9452C71.8864 76.0118 71.996 76.0784 72.1056 76.141L72.1467 76.1665L72.409 76.3309L72.4364 76.3485H72.4541L72.5774 76.4268L72.6615 76.4816C72.826 76.5854 72.9924 76.693 73.1548 76.8027C73.2018 76.8327 73.2488 76.864 73.2958 76.8966C73.4262 76.9841 73.5567 77.0741 73.6872 77.1668L73.7068 77.1805C73.8086 77.2496 73.9104 77.3201 74.0122 77.3919C74.0983 77.4506 74.1864 77.5113 74.2725 77.5759C74.3586 77.6405 74.478 77.7208 74.5798 77.7952C74.6816 77.8695 74.8382 77.9909 74.9713 78.077L75.0222 78.1162L75.2551 78.2904C75.4313 78.4216 75.6075 78.5567 75.7817 78.6937C75.9226 78.8014 76.0616 78.911 76.2006 79.0226L76.4296 79.2066L76.8309 79.5374C76.8857 79.5805 76.9405 79.6255 76.9933 79.6725C77.1108 79.7704 77.2282 79.8682 77.3437 79.972L77.375 79.9994H77.3848L77.3985 80.0111L77.5336 80.1266C77.6099 80.1912 77.6843 80.2597 77.7606 80.3224L77.8233 80.3792C77.9583 80.4947 78.0934 80.616 78.2265 80.7374C78.5501 81.0284 78.8679 81.3266 79.1798 81.632C79.2842 81.7325 79.3879 81.8343 79.491 81.9374C79.6182 82.0607 79.7435 82.186 79.8688 82.3133C80.2237 82.6708 80.5715 83.0363 80.9121 83.4095C80.9336 83.433 80.9551 83.4545 80.9747 83.478C81.0824 83.5955 81.19 83.7129 81.2957 83.8323L81.3075 83.8441L81.419 83.9713C81.5874 84.1671 81.7518 84.3511 81.9162 84.5429C64.0646 101.124 35.9403 101.139 18.0319 84.586Z" />
<path d="M61.8918 71.527L62.0034 71.5603L49.6834 87.3795L38.0544 71.5466C38.1464 71.5172 38.2403 71.4898 38.3343 71.4643L38.6161 71.3841C38.8314 71.3234 39.0448 71.2647 39.2601 71.2079L39.5674 71.1276L39.6085 71.1178L39.9472 71.0317L40.2858 70.9495L40.3856 70.926L40.6851 70.8555L40.9827 70.789L41.1177 70.7577H41.1588L41.4348 70.6989L41.7128 70.6422C41.8106 70.62 41.9085 70.6004 42.0064 70.5834C42.1493 70.5541 42.2941 70.5267 42.437 70.5012L42.6778 70.4562L43.1436 70.372L43.4921 70.3152L43.8405 70.2604L44.095 70.2232L44.3514 70.188H44.3984H44.4395H44.4884L44.8427 70.143H44.8701H44.9171H44.966C45.1069 70.1254 45.2459 70.1077 45.3869 70.094C45.5278 70.0803 45.6765 70.0608 45.8214 70.0471L46.0798 69.9805C46.252 69.9629 46.4243 69.9492 46.5965 69.9335L47.1309 69.8944L47.5557 69.867H47.6124H47.7025L48.1977 69.8415H48.3152H48.3445L48.7771 69.8258H49.0179H49.3311H49.793H50.0103C50.2334 69.8258 50.4585 69.8258 50.6817 69.8258H50.8637C50.942 69.8258 51.0183 69.8258 51.0966 69.8258C51.2611 69.8258 51.4255 69.8258 51.5899 69.8415H51.6545C51.7994 69.8415 51.9462 69.8513 52.091 69.8591H52.1047L52.5295 69.8846L52.737 69.8963C52.8642 69.8963 52.9895 69.912 53.1167 69.9237H53.1539C53.2772 69.9237 53.4025 69.9413 53.5258 69.9531H53.5434C53.7255 69.9668 53.9055 69.9844 54.0856 70.002H54.16L54.3557 70.0216L54.6278 70.051H54.7042L55.1368 70.0999H55.1818L55.2601 70.1097L55.4402 70.1332L55.8708 70.1919L56.1664 70.235L56.2407 70.2467L56.5911 70.3015L57.1784 70.3994C57.3741 70.4327 57.5522 70.466 57.7382 70.5032C57.9809 70.5502 58.2256 70.5971 58.4683 70.648C58.711 70.6989 58.9518 70.7518 59.1945 70.8066L59.8307 70.9573L60.0421 71.0102L60.1223 71.0298L60.4649 71.1198C60.7428 71.1922 61.0208 71.2686 61.2968 71.3469C61.5042 71.4154 61.698 71.4683 61.8918 71.527Z" fill="transparent"/>
<path d="M85.9309 84.7876L85.1068 83.754C79.2232 76.3953 71.1764 71.0712 62.1032 68.5338C58.1716 67.4133 54.1023 66.8493 50.0142 66.8582H49.8713C46.0379 66.8699 42.222 67.3766 38.5183 68.3655C37.747 68.5691 36.9823 68.7929 36.2242 69.0369C27.8215 71.7605 20.4029 76.8907 14.8883 83.7912L14.0681 84.8209L14.4381 85.1831L14.4694 85.2144L15.0077 85.739C19.1581 89.8129 23.9861 93.1329 29.2753 95.5504L29.7823 95.7775C30.1425 95.9361 30.5065 96.0927 30.8706 96.2434L31.4578 96.4803L32.0451 96.7113C32.4659 96.8718 32.8868 97.0284 33.3115 97.1772H33.3233C33.7774 97.3357 34.2315 97.4884 34.6935 97.6352L35.404 97.8564C36.0656 98.0561 36.7324 98.2434 37.4045 98.4183L38.0778 98.5866C38.438 98.6728 38.7988 98.7563 39.1603 98.8372C39.5218 98.9181 39.8852 98.9938 40.2506 99.0643C40.7073 99.1543 41.164 99.2372 41.6208 99.3129C41.8498 99.352 42.0788 99.3892 42.3098 99.4245C42.5408 99.4597 42.7698 99.493 43.0008 99.5243L43.5567 99.5987C43.7328 99.6222 43.909 99.6437 44.0871 99.6633H44.1361L44.6802 99.724L45.2283 99.7788L45.7881 99.8277C46.162 99.8591 46.5359 99.8845 46.9117 99.908L47.6046 99.9452H47.6712C47.8963 99.955 48.1233 99.9648 48.3504 99.9706H48.3837H48.5383C48.6734 99.9706 48.8065 99.9706 48.9415 99.9804H49.0374C49.3506 99.9804 49.6658 99.9902 49.9809 99.9902H50.0005C50.8161 99.9902 51.6291 99.97 52.4394 99.9295C52.8192 99.9139 53.197 99.8904 53.5747 99.863H53.6824C53.8781 99.8473 54.0739 99.8336 54.2696 99.816L54.8745 99.7612C55.2777 99.724 55.6809 99.679 56.0822 99.63C56.4835 99.5811 56.8828 99.5263 57.2821 99.4695C57.6814 99.4127 58.0807 99.3481 58.4761 99.2737C58.6719 99.2405 58.8676 99.2052 59.0633 99.168C59.2591 99.1308 59.4548 99.0936 59.6506 99.0564L60.2378 98.937L60.872 98.8L61.3594 98.6884C61.4064 98.6786 61.4553 98.6688 61.5023 98.6551H61.5238C61.6824 98.6199 61.8409 98.5808 61.9975 98.5416C62.1933 98.4946 62.389 98.4457 62.5847 98.3948L63.172 98.2401C63.5635 98.1383 63.9478 98.0287 64.3249 97.9113C64.5206 97.8545 64.7164 97.7958 64.8984 97.7351C65.0805 97.6744 65.2801 97.6157 65.47 97.553C65.6599 97.4904 65.8497 97.4297 66.0396 97.3573C66.4174 97.232 66.7952 97.0989 67.169 96.9658L67.7308 96.7563C67.9265 96.6858 68.1027 96.6134 68.2887 96.541C68.6606 96.3941 69.0286 96.2434 69.3985 96.0888C69.6745 95.9733 69.9486 95.8538 70.2226 95.7325C70.4966 95.6111 70.7668 95.4878 71.0388 95.3605L71.5302 95.1295C71.6848 95.0571 71.8375 94.9827 71.9902 94.9064C72.2838 94.7615 72.5767 94.614 72.869 94.464C77.3252 92.1631 81.4098 89.2047 84.9855 85.6881L85.8389 84.8503L85.8624 84.8287L85.9289 84.7622L85.9309 84.7876ZM18.0319 84.5919C18.1689 84.4314 18.3079 84.2708 18.4469 84.1123L18.4801 84.0751C18.4801 84.0751 18.4801 84.0751 18.4899 84.0653C18.5389 84.0085 18.5898 83.9498 18.6407 83.895L18.948 83.5544C19.0517 83.4408 19.1555 83.3273 19.2612 83.2157L19.312 83.1609L19.3277 83.1433C19.4314 83.0297 19.5352 82.9201 19.6409 82.8105C19.7994 82.6441 19.96 82.4777 20.1224 82.3152C20.2222 82.2134 20.3182 82.1195 20.4258 82.0137C20.5335 81.908 20.6079 81.8297 20.6999 81.7436L20.8134 81.632C20.9132 81.5361 21.0091 81.4363 21.1129 81.3482L21.154 81.309L21.1677 81.2953L21.2284 81.2385C21.338 81.1328 21.4476 81.031 21.5592 80.9312C21.6277 80.8666 21.6962 80.802 21.7667 80.7354L21.8097 80.6983C21.9135 80.6004 22.0211 80.5025 22.1268 80.4124L22.3676 80.201C22.4772 80.1031 22.5888 80.0053 22.7003 79.9152L22.9822 79.6744C23.0781 79.5922 23.178 79.51 23.2758 79.4297C23.3737 79.3495 23.4951 79.2496 23.6066 79.1615C23.6888 79.093 23.771 79.0265 23.8552 78.9658L23.8905 78.9384L23.9394 78.8992C24.0333 78.8229 24.1351 78.7485 24.2252 78.6741L24.2467 78.6584C24.3224 78.5971 24.3987 78.5384 24.4757 78.4823L24.5149 78.4509L24.74 78.2806H24.7517L24.7752 78.263C24.9161 78.1554 25.0571 78.0496 25.2 77.9479C25.2372 77.9185 25.2763 77.8891 25.3155 77.8637C25.4623 77.754 25.6091 77.6483 25.7578 77.5446L26.0123 77.3665L26.0456 77.3449L26.3705 77.1198L26.4077 77.0924L26.4547 77.0611L26.5486 77.0004C26.7111 76.8888 26.8736 76.7811 27.038 76.6735C27.2024 76.5658 27.3531 76.4679 27.5136 76.3681C27.6213 76.2996 27.729 76.2311 27.8386 76.1723L27.8973 76.1351L28.3788 75.8395C28.5746 75.7182 28.786 75.5968 28.9915 75.4793L29.062 75.4382H29.0737C29.1892 75.3697 29.3066 75.3051 29.4241 75.2425L29.5004 75.2014L29.5689 75.1622C29.659 75.1113 29.749 75.0604 29.841 75.0115C29.978 74.9351 30.115 74.8607 30.254 74.7883L30.4498 74.6885L30.4772 74.6748L30.575 74.6239L30.6377 74.5906C30.7864 74.5103 30.9391 74.4359 31.0879 74.3576L31.6183 74.0953L31.8904 73.9622H31.908L31.957 73.9387L32.0275 73.9054C32.184 73.8291 32.3426 73.7567 32.5011 73.6842L32.6068 73.6353C32.8026 73.5433 33.0101 73.4532 33.2136 73.3652L33.3448 73.3064L33.8302 73.0989H33.8459L34.4038 72.8718C34.4414 72.8542 34.48 72.8385 34.5192 72.8249H34.531L34.7737 72.7309L35.0282 72.633L35.2513 72.5469C35.4471 72.4764 35.6311 72.4059 35.8209 72.3394C35.864 72.3211 35.9071 72.3054 35.9501 72.2924C36.1165 72.2317 36.2848 72.173 36.4532 72.1182C36.5511 72.0829 36.6489 72.0497 36.7487 72.0183C36.9014 71.9655 37.0561 71.9146 37.2107 71.8676L37.4064 71.805L37.4554 71.7893L37.4887 71.7795C37.6844 71.7227 37.8606 71.664 38.0485 71.6092C38.1405 71.5798 38.2344 71.5524 38.3284 71.527L38.6103 71.4467C38.8256 71.386 39.0389 71.3273 39.2543 71.2705L39.5616 71.1903L39.6027 71.1805L39.9413 71.0944L40.2799 71.0121L40.3798 70.9886L40.6793 70.9182L40.9768 70.8516L41.1118 70.8203H41.1529L41.4289 70.7616L41.7069 70.7048C41.8048 70.6826 41.9026 70.663 42.0005 70.6461C42.1434 70.6167 42.2882 70.5893 42.4311 70.5639L42.6719 70.5188L43.1436 70.372L43.4921 70.3152L43.8405 70.2604L44.0949 70.2232L44.3514 70.188H44.3984H44.4395H44.4884L44.8427 70.143H44.8701H44.9171H44.966C45.1069 70.1254 45.2459 70.1077 45.3868 70.094C45.5278 70.0803 45.6765 70.0608 45.8214 70.0471L46.0798 69.9805C46.252 69.9629 46.4243 69.9492 46.5965 69.9335L47.1309 69.8944L47.5557 69.867H47.6124H47.7025L48.1977 69.8415H48.3151H48.3445L48.7771 69.8258H49.0179H49.331H49.793H50.0103C50.2334 69.8258 50.4585 69.8258 50.6817 69.8258H50.8637C50.942 69.8258 51.0183 69.8258 51.0966 69.8258C51.2611 69.8258 51.4255 69.8258 51.5899 69.8415H51.6545C51.8013 69.8415 51.9462 69.8533 52.091 69.8591H52.1047L52.5295 69.8846L52.737 69.8963C52.8642 69.8963 52.9895 69.912 53.1167 69.9237H53.1539L53.5258 69.9531H53.5434C53.7255 69.9668 53.9055 69.9844 54.0856 70.002H54.16L54.3557 70.0216L54.6278 70.051H54.7042L55.1368 70.0999H55.1818L55.2601 70.1097L55.4402 70.1332L55.8708 70.1919L56.1664 70.235L56.2407 70.2467L56.5911 70.3015L57.1784 70.3994C57.3643 70.4327 57.5522 70.466 57.7382 70.5032C57.9809 70.5502 58.2256 70.5971 58.4683 70.648C58.711 70.6989 58.9518 70.7518 59.1945 70.8066L59.8307 70.9573L60.0421 71.0102L60.1223 71.0298L60.4649 71.1198C60.7428 71.1922 61.0208 71.2686 61.2968 71.3469C61.4925 71.4017 61.6882 71.4546 61.884 71.5133L61.9956 71.5466L62.2363 71.619C62.3968 71.666 62.5554 71.7169 62.7139 71.7658L62.9253 71.8324L63.3168 71.9596L63.4343 71.9988L63.9001 72.1593H63.9178L64.2192 72.265L64.4619 72.355C64.6205 72.4118 64.7771 72.4705 64.9356 72.5312C65.149 72.6115 65.3604 72.6937 65.5718 72.7779L65.6657 72.8151L65.7616 72.8542L65.9574 72.9325L66.0141 72.956L66.0455 72.9697L66.0964 72.9893C66.204 73.0304 66.3136 73.0774 66.4193 73.1244C66.5857 73.1929 66.7462 73.2653 66.9106 73.3377L66.9596 73.3593L67.0438 73.3965L67.1906 73.4611L67.3354 73.5276C67.3609 73.5394 67.3883 73.5492 67.4137 73.5629L67.721 73.7038L67.7817 73.7332C67.8345 73.7567 67.8874 73.7802 67.9402 73.8076H67.95C68.1184 73.8878 68.2906 73.9681 68.457 74.0523L68.6371 74.1423L68.6821 74.1638C68.8211 74.2324 68.9601 74.3009 69.0971 74.3733L69.1715 74.4125H69.1852C69.2107 74.424 69.2356 74.437 69.2596 74.4516L69.3339 74.4908L69.3966 74.5221C69.5473 74.5984 69.7 74.6807 69.8487 74.7609L70.0112 74.849C70.1887 74.9443 70.3648 75.0421 70.5397 75.1426C70.5686 75.1568 70.5967 75.1725 70.6239 75.1896C70.8196 75.2992 71.0154 75.4128 71.2111 75.5283C71.2483 75.5479 71.2835 75.5713 71.3207 75.5929C71.4734 75.6829 71.6261 75.773 71.7768 75.8669C71.8864 75.9335 71.996 76.0001 72.1056 76.0627L72.1467 76.0882L72.409 76.2526L72.4364 76.2702H72.4541L72.5774 76.3485L72.6615 76.4033C72.826 76.5071 72.9924 76.6147 73.1548 76.7244C73.2018 76.7544 73.2488 76.7857 73.2958 76.8183C73.4308 76.9064 73.562 76.9965 73.6872 77.0885L73.7068 77.1022C73.8086 77.1713 73.9104 77.2418 74.0122 77.3136C74.0983 77.3723 74.1864 77.433 74.2725 77.4976C74.3586 77.5622 74.478 77.6425 74.5798 77.7169C74.6816 77.7912 74.8382 77.9126 74.9713 77.9987L75.0222 78.0379L75.2551 78.2121C75.4313 78.3433 75.6075 78.4784 75.7817 78.6154C75.9226 78.723 76.0616 78.8327 76.2006 78.9443L76.4296 79.1283L76.8309 79.4591C76.8857 79.5022 76.9405 79.5472 76.9933 79.5942C77.1127 79.6921 77.2282 79.7899 77.3437 79.8937L77.375 79.9211H77.3848L77.3985 79.9328L77.5336 80.0483C77.6099 80.1129 77.6843 80.1814 77.7606 80.2441L77.8233 80.3009C77.9583 80.4164 78.0934 80.5377 78.2265 80.6591C78.5501 80.9501 78.8679 81.2483 79.1798 81.5537C79.2842 81.6542 79.3879 81.756 79.491 81.8591C79.6182 81.9824 79.7435 82.1077 79.8688 82.235C80.2237 82.5925 80.5715 82.958 80.9121 83.3312C80.9336 83.3547 80.9551 83.3762 80.9747 83.3997C81.0824 83.5172 81.19 83.6346 81.2957 83.754L81.3075 83.7658L81.4191 83.893C81.5874 84.0888 81.7518 84.2728 81.9162 84.4646C64.0646 101.124 35.9403 101.139 18.0319 84.586V84.5919Z" />
<path d="M61.4025 69.9453L49.7186 84.9462L38.5868 69.7847C42.2176 68.8166 45.959 68.3257 49.7167 68.3244C53.6686 68.3147 57.6023 68.8603 61.4025 69.9453Z" />
<path d="M61.8077 68.5338C57.9241 67.4265 53.9057 66.8632 49.8674 66.8601H49.7147C45.8288 66.8612 41.9596 67.3693 38.2051 68.3714L36.1283 68.9254L36.2124 69.0409L38.0544 71.5466L49.6814 87.3814L62.0014 71.5622L63.8923 69.1348L61.8077 68.5338ZM41.0805 70.7009C43.9205 70.0992 46.8156 69.7954 49.7186 69.7945H49.885C52.9073 69.8002 55.9198 70.1396 58.8676 70.8066L49.7519 82.509L41.1216 70.7635L41.0805 70.7009Z" />
</svg>
`
const svg_callAcceptCallIcon = `
<svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_4_24)">
<path d="M0 50C0 22.3902 22.3902 0 50 0C77.6098 0 100 22.3902 100 50C100 77.6098 77.6098 100 50 100C22.3902 100 0 77.6098 0 50Z" fill="#60C558"/>
<path d="M79.216 61.7537C75.3465 58.0254 71.4368 55.6876 66.7411 59.1539C62.0253 62.6404 61.5215 66.5098 61.5215 66.5098C61.5215 66.5098 61.9648 73.9262 44.0688 57.844C27.9665 39.948 35.3828 40.3913 35.3828 40.3913C35.3828 40.3913 39.2522 39.8875 42.7387 35.1717C46.2051 30.4961 43.7665 26.667 40.139 22.6969C28.5711 10.0004 21.5578 24.43 21.5578 24.43C13.3756 38.2148 27.0193 54.5792 37.5392 64.3333C47.3337 74.8734 63.7182 88.4969 77.4828 80.3148C77.4828 80.3148 92.0938 74.1479 79.216 61.7537Z" fill="#454545"/>
</g>
<defs>
<clipPath id="clip0_4_24">
<rect width="100" height="100" fill="white"/>
</clipPath>
</defs>
</svg>

`
const svg_newGroupBlankIcon = `
<svg width="100" height="95" viewBox="0 0 100 95"  xmlns="http://www.w3.org/2000/svg">
<path d="M25.3225 43.9352C30.4422 43.9352 35.0389 41.3001 38.058 37.2084C41.3326 40.0866 45.4826 41.8197 50 41.8197C54.5152 41.8197 58.6635 40.0882 61.9377 37.2125C64.9662 41.2993 69.5523 43.9352 74.6775 43.9352C83.7097 43.9352 91.0645 35.8878 91.0645 26.0053C91.0645 16.1227 83.7097 8.07535 74.6775 8.07535C71.7653 8.07535 68.9731 8.94869 66.5397 10.4797C63.2318 4.22661 57.0643 0 50 0C42.9317 0 36.7619 4.23113 33.4557 10.4901C31.0262 8.95882 28.2394 8.07538 25.3225 8.07538C16.2903 8.07538 8.93555 16.1227 8.93555 26.0053C8.93555 35.8878 16.2903 43.9352 25.3225 43.9352ZM74.6775 18.6639C78.387 18.6639 81.387 21.9465 81.387 26.0053C81.387 30.0643 78.3871 33.3467 74.6775 33.3467C71.4599 33.3467 68.7549 30.8245 68.141 27.4502C68.6502 25.7651 68.9563 23.9851 69.0552 22.1423C70.2408 20.0251 72.3538 18.6639 74.6775 18.6639ZM50 10.5885C55.201 10.5885 59.4348 15.2192 59.4348 20.9099C59.4348 26.6005 55.201 31.2312 50 31.2312C44.799 31.2312 40.5667 26.6005 40.5667 20.9099C40.5667 15.2192 44.799 10.5885 50 10.5885ZM25.3225 18.6639C27.6474 18.6639 29.7614 20.026 30.9464 22.1451C31.0455 23.9857 31.351 25.764 31.8594 27.4473C31.2465 30.8232 28.5408 33.3467 25.3225 33.3467C21.613 33.3467 18.613 30.0643 18.613 26.0053C18.613 21.9465 21.6129 18.6639 25.3225 18.6639ZM92.5813 52.0515C87.8024 46.8175 81.4409 43.9352 74.6775 43.9352C70.3684 43.9352 66.2411 45.1555 62.5366 47.3875C58.7131 45.4651 54.4765 44.3634 50 44.3634C45.524 44.3634 41.2875 45.4651 37.4644 47.3875C33.7593 45.1555 29.6304 43.9352 25.3225 43.9352C11.3593 43.9352 0 56.3651 0 71.6412V81.63C0 84.5545 2.16577 86.9242 4.83871 86.9242H19.8447V89.7058C19.8447 92.6303 22.0105 95 24.6834 95H75.3182C77.9896 95 80.1569 92.6303 80.1569 89.7058V86.9242H95.1613C97.8327 86.9242 100 84.5545 100 81.63V71.6412C100 64.241 97.3664 57.2819 92.5813 52.0515ZM9.67742 71.6412C9.67742 62.2022 16.6961 54.5245 25.3229 54.5245C26.2487 54.5245 27.1571 54.6327 28.0512 54.8039C23.1792 60.4767 20.1272 68.0167 19.8921 76.3357H9.67742V71.6412ZM70.4795 84.4115H29.5221V77.3594C29.5221 65.0044 38.7081 54.9519 50 54.9519C61.2935 54.9519 70.4795 65.0044 70.4795 77.3594V84.4115ZM90.3226 76.3357H80.1094C79.8743 68.0165 76.8224 60.4764 71.9502 54.8037C72.8443 54.6324 73.7525 54.5245 74.6787 54.5245C78.8558 54.5245 82.7842 56.3048 85.739 59.5396C88.6939 62.7709 90.3226 67.069 90.3226 71.6412V76.3357Z" />
</svg>
`
const svg_mediaImageIcon = `
<svg width="100" height="100" viewBox="0 0 100 100"  xmlns="http://www.w3.org/2000/svg">
<path d="M57.5 20C53.5 20 50 23.5 50 27.5C50 31.5 53.5 35 57.5 35C61.5 35 65 31.5 65 27.5C65 23.5 61.5 20 57.5 20ZM85 0H15C6.5 0 0 6.5 0 15V85C0 93.5 6.5 100 15 100H85C93.5 100 100 93.5 100 85V15C100 6.5 93.5 0 85 0ZM90 59.5L80.5 50C74.5 44.5 65 44.5 59.5 50L55 54.5L40.5 40C34.5 34.5 25 34.5 19.5 40L10 49.5V15C10 12 12 10 15 10H85C88 10 90 12 90 15V59.5Z" />
</svg>
`
const svg_mediaVideoIcon = `
<svg width="100" height="65" viewBox="0 0 100 65"  xmlns="http://www.w3.org/2000/svg">
<path d="M94.9525 9.98214C93.4341 9.34699 91.7483 9.14039 90.1046 9.38803C88.4608 9.63566 86.9317 10.3266 85.7071 11.375L74.9625 20.6607V13.9286C74.9625 10.2345 73.383 6.6917 70.5713 4.07958C67.7597 1.46747 63.9463 0 59.97 0H14.9925C11.0162 0 7.20284 1.46747 4.3912 4.07958C1.57956 6.6917 0 10.2345 0 13.9286V51.0714C0 54.7655 1.57956 58.3083 4.3912 60.9204C7.20284 63.5325 11.0162 65 14.9925 65H59.97C63.9463 65 67.7597 63.5325 70.5713 60.9204C73.383 58.3083 74.9625 54.7655 74.9625 51.0714V44.3393L85.7571 53.625C87.3463 54.9614 89.4107 55.7055 91.5542 55.7143C92.7438 55.7117 93.9192 55.4743 95.0025 55.0179C96.4765 54.4639 97.7392 53.5143 98.6294 52.2903C99.5196 51.0663 99.9968 49.6236 100 48.1464V16.8536C99.9928 15.371 99.5082 13.9244 98.6087 12.6999C97.7092 11.4753 96.4359 10.5288 94.9525 9.98214Z" />
</svg>
`
const svg_mediaAudioIcon = `
<svg width="70" height="100" viewBox="0 0 70 100"  xmlns="http://www.w3.org/2000/svg">
<path d="M35 65C40.3043 65 45.3914 62.8929 49.1421 59.1421C52.8929 55.3914 55 50.3043 55 45V20C55 14.6957 52.8929 9.60859 49.1421 5.85786C45.3914 2.10714 40.3043 0 35 0C29.6957 0 24.6086 2.10714 20.8579 5.85786C17.1071 9.60859 15 14.6957 15 20V45C15 50.3043 17.1071 55.3914 20.8579 59.1421C24.6086 62.8929 29.6957 65 35 65Z" />
<path d="M70 45C70 43.6739 69.4732 42.4021 68.5355 41.4645C67.5979 40.5268 66.3261 40 65 40C63.6739 40 62.4021 40.5268 61.4645 41.4645C60.5268 42.4021 60 43.6739 60 45C60 51.6304 57.3661 57.9893 52.6777 62.6777C47.9893 67.3661 41.6304 70 35 70C28.3696 70 22.0107 67.3661 17.3223 62.6777C12.6339 57.9893 10 51.6304 10 45C10 43.6739 9.47321 42.4021 8.53553 41.4645C7.59785 40.5268 6.32608 40 5 40C3.67392 40 2.40215 40.5268 1.46447 41.4645C0.526785 42.4021 0 43.6739 0 45C0.00985554 53.4092 3.04704 61.5338 8.5559 67.8874C14.0648 74.2409 21.677 78.3987 30 79.6V90H19.45C18.2698 90 17.1379 90.4688 16.3034 91.3034C15.4688 92.1379 15 93.2698 15 94.45V95.55C15 96.7302 15.4688 97.8621 16.3034 98.6966C17.1379 99.5312 18.2698 100 19.45 100H50.55C51.7302 100 52.8621 99.5312 53.6966 98.6966C54.5312 97.8621 55 96.7302 55 95.55V94.45C55 93.2698 54.5312 92.1379 53.6966 91.3034C52.8621 90.4688 51.7302 90 50.55 90H40V79.6C48.323 78.3987 55.9352 74.2409 61.4441 67.8874C66.953 61.5338 69.9901 53.4092 70 45Z" />
</svg>
`
const svg_mediaYoutubeIcon = `
<svg width="100" height="68" viewBox="0 0 100 68"  xmlns="http://www.w3.org/2000/svg">
<path d="M99.977 23.9653C100.202 17.6732 98.7797 11.4282 95.8432 5.81006C93.8509 3.50481 91.0858 1.94914 88.03 1.4141C75.3903 0.304237 62.6984 -0.150661 50.0085 0.0513592C37.3649 -0.15983 24.7186 0.280389 12.1233 1.37015C9.63317 1.80849 7.32871 2.9388 5.49115 4.62315C1.40282 8.27179 0.948564 14.514 0.494306 19.7892C-0.164769 29.2737 -0.164769 38.7904 0.494306 48.2749C0.625724 51.244 1.08254 54.1911 1.85708 57.0668C2.4048 59.2871 3.51296 61.3412 5.08232 63.0453C6.93237 64.8189 9.2905 66.0135 11.8508 66.4742C21.6442 67.644 31.5121 68.1288 41.3776 67.9248C57.2766 68.1446 71.2224 67.9248 87.712 66.694C90.3351 66.2616 92.7597 65.0655 94.6621 63.2651C95.9339 62.0339 96.8838 60.5269 97.4331 58.8692C99.0577 54.0451 99.8556 48.9964 99.7953 43.923C99.977 41.4612 99.977 26.6029 99.977 23.9653ZM39.7423 46.5605V19.3496L66.6344 33.021C59.0937 37.0653 49.1454 41.6371 39.7423 46.5605Z" />
</svg>
`
const svg_mediaStickerIcon = `
<svg width="100" height="100" viewBox="0 0 100 100"  xmlns="http://www.w3.org/2000/svg">
<path d="M66.6667 77.7778C66.6667 74.8309 67.8373 72.0048 69.921 69.921C72.0048 67.8373 74.8309 66.6667 77.7778 66.6667H100V16.6667C100 12.2464 98.2441 8.00716 95.1184 4.88155C91.9928 1.75595 87.7536 0 83.3333 0H16.6667C12.2464 0 8.00716 1.75595 4.88155 4.88155C1.75595 8.00716 0 12.2464 0 16.6667V83.3333C0 87.7536 1.75595 91.9928 4.88155 95.1184C8.00716 98.2441 12.2464 100 16.6667 100H66.6667V77.7778ZM66.6667 33.3333C67.7654 33.3333 68.8396 33.6592 69.7532 34.2696C70.6668 34.8801 71.3788 35.7477 71.7993 36.7629C72.2198 37.778 72.3298 38.8951 72.1155 39.9727C71.9011 41.0504 71.372 42.0403 70.595 42.8173C69.8181 43.5942 68.8282 44.1233 67.7505 44.3377C66.6728 44.5521 65.5558 44.442 64.5406 44.0216C63.5255 43.6011 62.6578 42.889 62.0474 41.9754C61.4369 41.0618 61.1111 39.9877 61.1111 38.8889C61.1111 37.4155 61.6964 36.0024 62.7383 34.9605C63.7802 33.9186 65.1932 33.3333 66.6667 33.3333ZM33.3333 33.3333C34.4321 33.3333 35.5062 33.6592 36.4198 34.2696C37.3334 34.8801 38.0455 35.7477 38.466 36.7629C38.8865 37.778 38.9965 38.8951 38.7821 39.9727C38.5678 41.0504 38.0387 42.0403 37.2617 42.8173C36.4847 43.5942 35.4948 44.1233 34.4172 44.3377C33.3395 44.5521 32.2225 44.442 31.2073 44.0216C30.1922 43.6011 29.3245 42.889 28.7141 41.9754C28.1036 41.0618 27.7778 39.9877 27.7778 38.8889C27.7778 37.4155 28.3631 36.0024 29.405 34.9605C30.4468 33.9186 31.8599 33.3333 33.3333 33.3333ZM28.8889 52.2222C29.3266 51.6386 29.875 51.1468 30.5028 50.7751C31.1306 50.4034 31.8254 50.159 32.5477 50.0558C33.2699 49.9527 34.0054 49.9927 34.7121 50.1738C35.4189 50.3549 36.083 50.6734 36.6667 51.1111C40.5132 53.996 45.1918 55.5556 50 55.5556C54.8082 55.5556 59.4867 53.996 63.3333 51.1111C63.917 50.6734 64.5811 50.3549 65.2879 50.1738C65.9946 49.9927 66.7301 49.9527 67.4523 50.0558C68.1746 50.159 68.8694 50.4034 69.4972 50.7751C70.125 51.1468 70.6734 51.6386 71.1111 52.2222C71.5488 52.8059 71.8673 53.47 72.0484 54.1768C72.2295 54.8835 72.2696 55.619 72.1664 56.3412C72.0632 57.0635 71.8188 57.7583 71.4471 58.3861C71.0754 59.0138 70.5837 59.5623 70 60C64.2301 64.3274 57.2123 66.6667 50 66.6667C42.7877 66.6667 35.7699 64.3274 30 60C29.4163 59.5623 28.9246 59.0138 28.5529 58.3861C28.1812 57.7583 27.9368 57.0635 27.8336 56.3412C27.7304 55.619 27.7705 54.8835 27.9516 54.1768C28.1327 53.47 28.4511 52.8059 28.8889 52.2222Z" />
<path d="M77.7778 96.7445L96.7445 77.7778H77.7778V96.7445Z" />
</svg>

`
const svg_mediaVideoClipIcon = `
<svg width="100" height="100" viewBox="0 0 100 100"  xmlns="http://www.w3.org/2000/svg">
<path d="M83.2384 0H16.7616C12.3162 0 8.05279 2.19493 4.90937 6.10194C1.76595 10.0089 0 15.308 0 20.8333V79.1667C0 84.692 1.76595 89.991 4.90937 93.8981C8.05279 97.8051 12.3162 100 16.7616 100H83.2384C87.6838 100 91.9472 97.8051 95.0906 93.8981C98.234 89.991 100 84.692 100 79.1667V20.8333C100 15.308 98.234 10.0089 95.0906 6.10194C91.9472 2.19493 87.6838 0 83.2384 0ZM67.9517 55.5L40.4459 73.8333C39.7145 74.3239 38.8968 74.5816 38.0657 74.5833C36.7321 74.5833 35.453 73.9249 34.51 72.7528C33.567 71.5806 33.0372 69.9909 33.0372 68.3333V31.6667C33.038 30.5862 33.2641 29.5244 33.6935 28.585C34.1229 27.6455 34.7409 26.8605 35.4872 26.3064C36.2335 25.7524 37.0826 25.4483 37.9517 25.4238C38.8208 25.3993 39.6801 25.6552 40.4459 26.1667L67.9517 44.5C68.75 45.0355 69.4169 45.8295 69.8816 46.7977C70.3464 47.766 70.5918 48.8725 70.5918 50C70.5918 51.1275 70.3464 52.234 69.8816 53.2023C69.4169 54.1705 68.75 54.9645 67.9517 55.5ZM39.7419 35.1458L62.0181 50L39.7419 64.8542V35.1458Z" />
</svg>

`
const svg_deletedMessageBlankIcon = `
<svg width="100" height="100" viewBox="0 0 100 100"  xmlns="http://www.w3.org/2000/svg">
<path d="M50 0C22.4304 0 0 22.4304 0 50C0 77.5696 22.4304 100 50 100C77.5696 100 100 77.5696 100 50C100 22.4304 77.5696 0 50 0ZM12.5 50C12.5 41.9136 15.0986 34.4372 19.4679 28.3058L71.6942 80.5321C65.5628 84.9014 58.0864 87.5 50 87.5C29.3213 87.5 12.5 70.6787 12.5 50ZM80.5319 71.6942L28.3056 19.4679C34.437 15.0986 41.9134 12.5 49.9998 12.5C70.6785 12.5 87.4998 29.3213 87.4998 50C87.4998 58.0864 84.9012 65.5628 80.5319 71.6942Z" />
</svg>
`
let allChatSection = document.getElementById("allChatSection")
let activeChatSection = document.getElementById("activeChatSection")
const emptyChatSection = document.getElementById("emptyChatSection")

let allChatChatBoxContainer = document.getElementById("allChatChatBoxContainer")

export function showAllChatSection() {
  allChatSection.classList.remove("all-chat-section--open-active-chat")
  activeChatSection.classList.add("active-chat-section--hide")

  if (emptyChatSection.classList.contains("empty-chat-section--hide"))
    emptyChatSection.classList.remove("empty-chat-section--hide")

  // allChatSection.classList.remove("all-chat-section--hide")
  // activeChatSection.classList.add("active-chat-section--hide")
}

export async function updateAllChatSection(message) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${message.chat._id.toString()}"]`
  )

  if (!chatBox) {
    try {
      let response = await fetch(`/chat/data/chat-box/${message.chat._id}`)
      if (!response.ok) {
        throw Promise.reject(response)
      }
      let data = await response.json()
      if (data.isSuccess) {
        chatBox = await createChatBox(data.chat)
      } else {
        console.log(data.error)
      }
    } catch (e) {
      console.log(
        "Error In Fetching Chat Box Data, Please Refresh Your Page:",
        e
      )
    }
  }
  updateChatBoxLatestMessage(message)

  // this will shift the chat box to first position
  allChatChatBoxContainer.insertBefore(
    chatBox,
    allChatChatBoxContainer.firstChild
  )
}

export async function createChatBox(chat) {
  let chatBox = document.createElement("div")
  chatBox.classList.add("chat-box")
  chatBox.dataset.chatId = chat._id

  let chatBoxInnerHtml = `
  <div class="chat-box__column chat-box__column--img">
             <div class="chat-box__pic chat-box__pic--hide-img">
                       ${svg_chatPic}
                  <img src='' alt="chat img">
                  <div class="chat-box__user-active-status">
                 </div>
            </div>
  </div>

  <div class="chat-box__column chat-box__column--data">
      <div class="chat-box__row">
       ${
         chat.isGroupChat === true
           ? `<div class="chat-box__icon">${svg_group}</div>`
           : ""
       }
           <div class="chat-box__name"></div>
      </div>


      <div class="chat-box__latest-message-box">
          <div class="chat-box__sender"></div>
          <div class="chat-box__latest-message"></div>
     </div>
     

     <div class='chat-call-room-box chat-call-room-box--chat-box chat-call-room-box--hide'
     data-call-room-id=''>
         <div class="chat-call-room-icon chat-call-room-icon--chat-box">
             ${svg_callAcceptCallIcon}
         </div>
         <div class="chat-call-room-title chat-call-room-title--chat-box">Jin</div>
    </div>

 
 </div>
    <div class="chat-box__unseen-messages-count"></div>
    <div class="chat-box__latest-message-time"></div>
`

  chatBox.insertAdjacentHTML("beforeend", chatBoxInnerHtml)
  allChatChatBoxContainer.insertBefore(
    chatBox,
    allChatChatBoxContainer.firstChild
  )

  let chatBoxPic = chatBox.getElementsByClassName("chat-box__pic")[0]
  if (chat.hasOwnProperty("chatPic") && chat.chatPic !== "") {
    chatBoxPic.querySelector("img").src = chat.chatPic
    chatBoxPic.classList.remove("chat-box__pic--hide-img")
    chatBoxPic.classList.add("chat-box__pic--hide-svg")
  } else {
    chatBoxPic.classList.remove("chat-box__pic--hide-svg")
    chatBoxPic.classList.add("chat-box__pic--hide-img")
  }

  chatBox.getElementsByClassName("chat-box__name")[0].textContent =
    chat.chatName

  if (chat.hasOwnProperty("latestMessage") && chat.latestMessage !== "") {
    updateChatBoxLatestMessage(chat.latestMessage)
  } else {
    let { timeDifferenceFromNow } = await import(
      "../../common/calculateTimeDifference.dev"
    )
    if (chat.hasOwnProperty("chatCreatedTime")) {
      chatBox.getElementsByClassName(
        "chat-box__latest-message-time"
      )[0].textContent = timeDifferenceFromNow(chat.chatCreatedTime)
    }
  }

  if (chat.hasOwnProperty("isOnCall") && chat.isOnCall === true) {
    let chatCallRoomBox = chatBox.getElementsByClassName(
      "chat-call-room-box--chat-box"
    )[0]
    while (chatCallRoomBox.classList.contains("chat-call-room-box--hide"))
      chatCallRoomBox.classList.remove("chat-call-room-box--hide")

    chatCallRoomBox.dataset.callRoomId = chat.callRoomId
  }

  return chatBox
}

export async function updateChatBoxLatestMessage(message = null) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${message.chat._id.toString()}"]`
  )
  if (chatBox) {
    let chatBoxLatestMessage = chatBox.getElementsByClassName(
      "chat-box__latest-message"
    )[0]
    let chatBoxSender = chatBox.getElementsByClassName("chat-box__sender")[0]
    let latestMessageTime = chatBox.getElementsByClassName(
      "chat-box__latest-message-time"
    )[0]

    if (message !== null) {
      if (
        message.hasOwnProperty("isInfoMessage") &&
        message.isInfoMessage === true
      ) {
        chatBoxSender.textContent = ""
        chatBoxLatestMessage.textContent = message.infoMessageContent

        if (message.infoMessageType === "video-call") {
          chatBoxLatestMessage.insertAdjacentHTML(
            "afterbegin",
            svg_videoCallBlankIcon
          )
        }
        if (message.infoMessageType === "new-group") {
          chatBoxLatestMessage.insertAdjacentHTML(
            "afterbegin",
            svg_newGroupBlankIcon
          )
        }
      } else {
        let sender =
          message.sender._id.toString() === loginUser._id.toString()
            ? "You:"
            : message.sender.firstName + ":"

        chatBoxSender.textContent = sender

        if (
          message.hasOwnProperty("isDeletedForAll") &&
          message.isDeletedForAll === true
        ) {
          chatBoxLatestMessage.innerHTML = `${svg_deletedMessageBlankIcon} <span>This Message Has Been Deleted.</span>`
        } else {
          if (
            message.hasOwnProperty("hasMediaContent") &&
            message.hasMediaContent === true
          ) {
            if (message.mediaContentType === "video") {
              chatBoxLatestMessage.innerHTML = `${svg_mediaVideoIcon} Video`
            } else if (message.mediaContentType === "audio") {
              chatBoxLatestMessage.innerHTML = `${svg_mediaAudioIcon} Audio`
            } else if (message.mediaContentType === "image") {
              chatBoxLatestMessage.innerHTML = `${svg_mediaImageIcon} Image`
            } else if (message.mediaContentType === "youtube") {
              chatBoxLatestMessage.innerHTML = `${svg_mediaYoutubeIcon} Youtube`
            } else if (message.mediaContentType === "sticker") {
              chatBoxLatestMessage.innerHTML = `${svg_mediaStickerIcon} Sticker`
            } else if (message.mediaContentType === "video-clip") {
              chatBoxLatestMessage.innerHTML = `${svg_mediaVideoClipIcon} Video clip`
            }
          } else {
            chatBoxLatestMessage.textContent = message.textContent
          }
        }
      }
      let { timeDifferenceFromNow } = await import(
        "../../common/calculateTimeDifference.dev"
      )

      latestMessageTime.textContent = timeDifferenceFromNow(message.createdAt)
    } else {
      chatBoxLatestMessage.textContent = ""
      chatBoxSender.textContent = ""
      latestMessageTime.textContent = ""
    }
  }
}

export function updateChatBox(chat) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chat._id.toString()}"]`
  )
  if (chatBox) {
    chatBox.getElementsByClassName("chat-box__name")[0].textContent =
      chat.chatName

    let chatBoxPic = chatBox.getElementsByClassName("chat-box__pic")[0]

    if (chat.hasOwnProperty("chatPic") && chat.chatPic !== "") {
      chatBoxPic.querySelector("img").src = chat.chatPic
      chatBoxPic.classList.remove("chat-box__pic--hide-img")
      chatBoxPic.classList.add("chat-box__pic--hide-svg")
    } else {
      chatBoxPic.classList.add("chat-box__pic--hide-img")
      chatBoxPic.classList.remove("chat-box__pic--hide-svg")
    }
  }
}
export function clearChatBoxLatestMessage(chatId) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chatId.toString()}"]`
  )

  if (chatBox) {
    chatBox.getElementsByClassName("chat-box__sender")[0].textContent = ""

    chatBox.getElementsByClassName("chat-box__latest-message")[0].textContent =
      ""

    chatBox.getElementsByClassName(
      "chat-box__latest-message-time"
    )[0].textContent = ""
  }
}

export function deleteChatBox(chatId) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chatId.toString()}"]`
  )
  chatBox.remove()
}

export function increaseUnseenMessagesCountInChatBox(chatId) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chatId.toString()}"]`
  )
  if (chatBox) {
    let unseenMessagesCountBox = chatBox.getElementsByClassName(
      "chat-box__unseen-messages-count"
    )[0]

    if (
      !unseenMessagesCountBox.classList.contains(
        "chat-box__unseen-messages-count--have"
      )
    ) {
      unseenMessagesCountBox.classList.add(
        "chat-box__unseen-messages-count--have"
      )
      unseenMessagesCountBox.textContent = 1
    } else {
      unseenMessagesCountBox.textContent =
        parseInt(unseenMessagesCountBox.textContent) + 1
    }
  }
}
export function decreaseUnseenMessagesCountInChatBox(chatId) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chatId.toString()}"]`
  )
  if (chatBox) {
    let unseenMessagesCountBox = chatBox.getElementsByClassName(
      "chat-box__unseen-messages-count"
    )[0]
    if (
      unseenMessagesCountBox.classList.contains(
        "chat-box__unseen-messages-count--have"
      )
    ) {
      let oldCount = parseInt(unseenMessagesCountBox.textContent)
      if (oldCount === 1) {
        unseenMessagesCountBox.classList.remove(
          "chat-box__unseen-messages-count--have"
        )
        unseenMessagesCountBox.textContent = ""
      } else {
        unseenMessagesCountBox.textContent = oldCount - 1
      }
    }
  }
}

export function showChatBoxCallRoomBox(chatId, callRoomId) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chatId.toString()}"]`
  )
  if (chatBox) {
    let chatBoxCallRoomBox = chatBox.getElementsByClassName(
      "chat-call-room-box--chat-box"
    )[0]
    while (chatBoxCallRoomBox.classList.contains("chat-call-room-box--hide"))
      chatBoxCallRoomBox.classList.remove("chat-call-room-box--hide")

    chatBoxCallRoomBox.dataset.callRoomId = callRoomId
  }
}
export function hideChatBoxCallRoomBox(chatId) {
  let chatBox = allChatChatBoxContainer.querySelector(
    `.chat-box[data-chat-id = "${chatId.toString()}"]`
  )
  if (chatBox) {
    let chatBoxCallRoomBox = chatBox.getElementsByClassName(
      "chat-call-room-box--chat-box"
    )[0]

    chatBoxCallRoomBox.classList.add("chat-call-room-box--hide")

    chatBoxCallRoomBox.dataset.callRoomId = ""
  }
}
