"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_chat_js_message_dev_js"],{

/***/ "./dev-javascripts/chat/js/message.dev.js":
/*!************************************************!*\
  !*** ./dev-javascripts/chat/js/message.dev.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeUserMessageStatusToDelivered\": () => (/* binding */ changeUserMessageStatusToDelivered),\n/* harmony export */   \"changeUserMessageStatusWithMessageSeenStatusCount\": () => (/* binding */ changeUserMessageStatusWithMessageSeenStatusCount),\n/* harmony export */   \"checkTimeAndCreateNewMessage\": () => (/* binding */ checkTimeAndCreateNewMessage),\n/* harmony export */   \"checkTimeAndCreateOldMessages\": () => (/* binding */ checkTimeAndCreateOldMessages),\n/* harmony export */   \"convertUserMessageToDeletedForAllMessage\": () => (/* binding */ convertUserMessageToDeletedForAllMessage),\n/* harmony export */   \"createDateMessage\": () => (/* binding */ createDateMessage),\n/* harmony export */   \"createInfoMessage\": () => (/* binding */ createInfoMessage),\n/* harmony export */   \"createLoadingMessagesAnimation\": () => (/* binding */ createLoadingMessagesAnimation),\n/* harmony export */   \"createUnseenMessageTagBox\": () => (/* binding */ createUnseenMessageTagBox),\n/* harmony export */   \"createUserMessage\": () => (/* binding */ createUserMessage),\n/* harmony export */   \"deleteUserMessage\": () => (/* binding */ deleteUserMessage),\n/* harmony export */   \"generateColorForUserMessageStatus\": () => (/* binding */ generateColorForUserMessageStatus),\n/* harmony export */   \"getColorWithPercentage\": () => (/* binding */ getColorWithPercentage),\n/* harmony export */   \"selectUserMessage\": () => (/* binding */ selectUserMessage),\n/* harmony export */   \"unSelectUserMessage\": () => (/* binding */ unSelectUserMessage)\n/* harmony export */ });\n/* harmony import */ var plyr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! plyr */ \"./node_modules/plyr/dist/plyr.min.js\");\n/* harmony import */ var plyr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(plyr__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _showActiveChatSection_dev__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\");\nlet svg_infoBlankBtn = `<svg width=\"53\" height=\"104\" viewBox=\"0 0 53 104\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M38.6887 2C45.68 2 49.1756 6.56 49.1756 11.785C49.1756 18.31 43.1026 24.345 35.1983 24.345C28.5774 24.345 24.7165 20.595 24.8991 14.395C24.8991 9.18 29.4957 2 38.6887 2ZM17.1774 102C11.6574 102 7.61391 98.74 11.4748 84.38L17.8087 58.92C18.9096 54.85 19.0922 53.215 17.8087 53.215C16.1548 53.215 8.99652 56.025 4.75478 58.8L2 54.4C15.4191 43.47 30.8574 37.065 37.4835 37.065C42.9983 37.065 43.9165 43.43 41.1617 53.215L33.9043 79.975C32.6209 84.7 33.1687 86.33 34.4574 86.33C36.1113 86.33 41.5374 84.37 46.8696 80.295L50 84.365C36.9461 97.1 22.687 102 17.1774 102Z\"/>\n</svg>`;\nlet svg_messageTick = `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 75\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M35.5523 72.8954C34.3946 74.0434 32.7545 75 31.3073 75C29.8601 75 28.22 73.9955 27.014 72.8476L0 46.0619L8.58659 37.5478L31.3555 60.1244L91.5581 0L100 8.65752L35.5523 72.8954V72.8954Z\" />\n</svg>`;\nlet svg_videoCallBlankIcon = `<svg width=\"100\" height=\"63\" viewBox=\"0 0 100 66\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M16.6636 0C7.46055 0 0 6.56645 0 14.6666V51.3334C0 59.433 7.46055 66 16.6636 66H58.3226C67.2118 66 74.4747 59.8738 74.9604 52.1577L93.7278 61.8362C95.0159 62.5005 96.6098 62.5072 97.9054 61.8538C99.201 61.2004 100 59.9867 100 58.6726V7.3275C100 6.01462 99.2026 4.80191 97.9087 4.148C96.6156 3.49409 95.0234 3.49879 93.7353 4.16032L74.9579 13.8005C74.4489 6.10357 67.1952 0 58.3226 0H16.6636ZM8.33181 14.6666C8.33181 10.6166 12.0621 7.33329 16.6636 7.33329H58.3226C62.9242 7.33329 66.6544 10.6166 66.6544 14.6666V51.3334C66.6544 55.3829 62.9242 58.6667 58.3226 58.6667H16.6636C12.0621 58.6667 8.33181 55.3829 8.33181 51.3334V14.6666ZM74.9871 43.6715V22.2753L91.6682 13.7111V52.2743L74.9871 43.6715Z\" />\n</svg>`;\nlet svg_newGroupBlankIcon = `<svg width=\"100\" height=\"95\" viewBox=\"0 0 100 95\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M25.3225 43.9352C30.4422 43.9352 35.0389 41.3001 38.058 37.2084C41.3326 40.0866 45.4826 41.8197 50 41.8197C54.5152 41.8197 58.6635 40.0882 61.9377 37.2125C64.9662 41.2993 69.5523 43.9352 74.6775 43.9352C83.7097 43.9352 91.0645 35.8878 91.0645 26.0053C91.0645 16.1227 83.7097 8.07535 74.6775 8.07535C71.7653 8.07535 68.9731 8.94869 66.5397 10.4797C63.2318 4.22661 57.0643 0 50 0C42.9317 0 36.7619 4.23113 33.4557 10.4901C31.0262 8.95882 28.2394 8.07538 25.3225 8.07538C16.2903 8.07538 8.93555 16.1227 8.93555 26.0053C8.93555 35.8878 16.2903 43.9352 25.3225 43.9352ZM74.6775 18.6639C78.387 18.6639 81.387 21.9465 81.387 26.0053C81.387 30.0643 78.3871 33.3467 74.6775 33.3467C71.4599 33.3467 68.7549 30.8245 68.141 27.4502C68.6502 25.7651 68.9563 23.9851 69.0552 22.1423C70.2408 20.0251 72.3538 18.6639 74.6775 18.6639ZM50 10.5885C55.201 10.5885 59.4348 15.2192 59.4348 20.9099C59.4348 26.6005 55.201 31.2312 50 31.2312C44.799 31.2312 40.5667 26.6005 40.5667 20.9099C40.5667 15.2192 44.799 10.5885 50 10.5885ZM25.3225 18.6639C27.6474 18.6639 29.7614 20.026 30.9464 22.1451C31.0455 23.9857 31.351 25.764 31.8594 27.4473C31.2465 30.8232 28.5408 33.3467 25.3225 33.3467C21.613 33.3467 18.613 30.0643 18.613 26.0053C18.613 21.9465 21.6129 18.6639 25.3225 18.6639ZM92.5813 52.0515C87.8024 46.8175 81.4409 43.9352 74.6775 43.9352C70.3684 43.9352 66.2411 45.1555 62.5366 47.3875C58.7131 45.4651 54.4765 44.3634 50 44.3634C45.524 44.3634 41.2875 45.4651 37.4644 47.3875C33.7593 45.1555 29.6304 43.9352 25.3225 43.9352C11.3593 43.9352 0 56.3651 0 71.6412V81.63C0 84.5545 2.16577 86.9242 4.83871 86.9242H19.8447V89.7058C19.8447 92.6303 22.0105 95 24.6834 95H75.3182C77.9896 95 80.1569 92.6303 80.1569 89.7058V86.9242H95.1613C97.8327 86.9242 100 84.5545 100 81.63V71.6412C100 64.241 97.3664 57.2819 92.5813 52.0515ZM9.67742 71.6412C9.67742 62.2022 16.6961 54.5245 25.3229 54.5245C26.2487 54.5245 27.1571 54.6327 28.0512 54.8039C23.1792 60.4767 20.1272 68.0167 19.8921 76.3357H9.67742V71.6412ZM70.4795 84.4115H29.5221V77.3594C29.5221 65.0044 38.7081 54.9519 50 54.9519C61.2935 54.9519 70.4795 65.0044 70.4795 77.3594V84.4115ZM90.3226 76.3357H80.1094C79.8743 68.0165 76.8224 60.4764 71.9502 54.8037C72.8443 54.6324 73.7525 54.5245 74.6787 54.5245C78.8558 54.5245 82.7842 56.3048 85.739 59.5396C88.6939 62.7709 90.3226 67.069 90.3226 71.6412V76.3357Z\" />\n</svg>\n`;\nlet svg_deletedMessageBlankIcon = `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M50 0C22.4304 0 0 22.4304 0 50C0 77.5696 22.4304 100 50 100C77.5696 100 100 77.5696 100 50C100 22.4304 77.5696 0 50 0ZM12.5 50C12.5 41.9136 15.0986 34.4372 19.4679 28.3058L71.6942 80.5321C65.5628 84.9014 58.0864 87.5 50 87.5C29.3213 87.5 12.5 70.6787 12.5 50ZM80.5319 71.6942L28.3056 19.4679C34.437 15.0986 41.9134 12.5 49.9998 12.5C70.6785 12.5 87.4998 29.3213 87.4998 50C87.4998 58.0864 84.9012 65.5628 80.5319 71.6942Z\" />\n</svg>\n`;\nlet svg_imageIcon = `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M57.5 20C53.5 20 50 23.5 50 27.5C50 31.5 53.5 35 57.5 35C61.5 35 65 31.5 65 27.5C65 23.5 61.5 20 57.5 20ZM85 0H15C6.5 0 0 6.5 0 15V85C0 93.5 6.5 100 15 100H85C93.5 100 100 93.5 100 85V15C100 6.5 93.5 0 85 0ZM90 59.5L80.5 50C74.5 44.5 65 44.5 59.5 50L55 54.5L40.5 40C34.5 34.5 25 34.5 19.5 40L10 49.5V15C10 12 12 10 15 10H85C88 10 90 12 90 15V59.5Z\" />\n</svg>\n`;\nlet svg_videoIcon = `<svg width=\"100\" height=\"65\" viewBox=\"0 0 100 65\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M94.9525 9.98214C93.4341 9.34699 91.7483 9.14039 90.1046 9.38803C88.4608 9.63566 86.9317 10.3266 85.7071 11.375L74.9625 20.6607V13.9286C74.9625 10.2345 73.383 6.6917 70.5713 4.07958C67.7597 1.46747 63.9463 0 59.97 0H14.9925C11.0162 0 7.20284 1.46747 4.3912 4.07958C1.57956 6.6917 0 10.2345 0 13.9286V51.0714C0 54.7655 1.57956 58.3083 4.3912 60.9204C7.20284 63.5325 11.0162 65 14.9925 65H59.97C63.9463 65 67.7597 63.5325 70.5713 60.9204C73.383 58.3083 74.9625 54.7655 74.9625 51.0714V44.3393L85.7571 53.625C87.3463 54.9614 89.4107 55.7055 91.5542 55.7143C92.7438 55.7117 93.9192 55.4743 95.0025 55.0179C96.4765 54.4639 97.7392 53.5143 98.6294 52.2903C99.5196 51.0663 99.9968 49.6236 100 48.1464V16.8536C99.9928 15.371 99.5082 13.9244 98.6087 12.6999C97.7092 11.4753 96.4359 10.5288 94.9525 9.98214Z\" />\n</svg>`;\nlet svg_audioIcon = `<svg width=\"70\" height=\"100\" viewBox=\"0 0 70 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M35 65C40.3043 65 45.3914 62.8929 49.1421 59.1421C52.8929 55.3914 55 50.3043 55 45V20C55 14.6957 52.8929 9.60859 49.1421 5.85786C45.3914 2.10714 40.3043 0 35 0C29.6957 0 24.6086 2.10714 20.8579 5.85786C17.1071 9.60859 15 14.6957 15 20V45C15 50.3043 17.1071 55.3914 20.8579 59.1421C24.6086 62.8929 29.6957 65 35 65Z\" />\n<path d=\"M70 45C70 43.6739 69.4732 42.4021 68.5355 41.4645C67.5979 40.5268 66.3261 40 65 40C63.6739 40 62.4021 40.5268 61.4645 41.4645C60.5268 42.4021 60 43.6739 60 45C60 51.6304 57.3661 57.9893 52.6777 62.6777C47.9893 67.3661 41.6304 70 35 70C28.3696 70 22.0107 67.3661 17.3223 62.6777C12.6339 57.9893 10 51.6304 10 45C10 43.6739 9.47321 42.4021 8.53553 41.4645C7.59785 40.5268 6.32608 40 5 40C3.67392 40 2.40215 40.5268 1.46447 41.4645C0.526785 42.4021 0 43.6739 0 45C0.00985554 53.4092 3.04704 61.5338 8.5559 67.8874C14.0648 74.2409 21.677 78.3987 30 79.6V90H19.45C18.2698 90 17.1379 90.4688 16.3034 91.3034C15.4688 92.1379 15 93.2698 15 94.45V95.55C15 96.7302 15.4688 97.8621 16.3034 98.6966C17.1379 99.5312 18.2698 100 19.45 100H50.55C51.7302 100 52.8621 99.5312 53.6966 98.6966C54.5312 97.8621 55 96.7302 55 95.55V94.45C55 93.2698 54.5312 92.1379 53.6966 91.3034C52.8621 90.4688 51.7302 90 50.55 90H40V79.6C48.323 78.3987 55.9352 74.2409 61.4441 67.8874C66.953 61.5338 69.9901 53.4092 70 45Z\" />\n</svg>\n`;\nlet svg_youtubeIcon = `<svg width=\"100\" height=\"68\" viewBox=\"0 0 100 68\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M99.977 23.9653C100.202 17.6732 98.7797 11.4282 95.8432 5.81006C93.8509 3.50481 91.0858 1.94914 88.03 1.4141C75.3903 0.304237 62.6984 -0.150661 50.0085 0.0513592C37.3649 -0.15983 24.7186 0.280389 12.1233 1.37015C9.63317 1.80849 7.32871 2.9388 5.49115 4.62315C1.40282 8.27179 0.948564 14.514 0.494306 19.7892C-0.164769 29.2737 -0.164769 38.7904 0.494306 48.2749C0.625724 51.244 1.08254 54.1911 1.85708 57.0668C2.4048 59.2871 3.51296 61.3412 5.08232 63.0453C6.93237 64.8189 9.2905 66.0135 11.8508 66.4742C21.6442 67.644 31.5121 68.1288 41.3776 67.9248C57.2766 68.1446 71.2224 67.9248 87.712 66.694C90.3351 66.2616 92.7597 65.0655 94.6621 63.2651C95.9339 62.0339 96.8838 60.5269 97.4331 58.8692C99.0577 54.0451 99.8556 48.9964 99.7953 43.923C99.977 41.4612 99.977 26.6029 99.977 23.9653ZM39.7423 46.5605V19.3496L66.6344 33.021C59.0937 37.0653 49.1454 41.6371 39.7423 46.5605Z\" />\n</svg>\n`;\n\n\n\nfunction createPlyr(element, type) {\n  let player = new (plyr__WEBPACK_IMPORTED_MODULE_0___default())(element, {\n    controls: [\"play-large\", \"play\", \"progress\", \"current-time\", \"settings\", \"pip\", \"airplay\", \"fullscreen\"],\n    debug: false,\n    settings: [\"captions\", \"quality\", \"speed\", \"loop\"],\n    clickToPlay: true,\n    resetOnEnd: true,\n    invertTime: true,\n    ratio: \"16:9\",\n    youtube: {\n      origin: \"http://localhost:5000\"\n    }\n  });\n}\n\nconst weekDaysArray = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\nfunction getTimeString(date) {\n  let dateObj = typeof date === \"string\" ? new Date(date) : date;\n  let dateHour = dateObj.getHours();\n  let dateMin = dateObj.getMinutes();\n  let dateStr1 = dateHour < 10 ? \"0\" + dateHour : dateHour;\n  let dateStr2 = dateMin < 10 ? \"0\" + dateMin : dateMin;\n  let dateStr3 = dateHour < 12 ? \"AM\" : \"PM\";\n  let dateString = dateStr1 + \":\" + dateStr2 + \" \" + dateStr3;\n  return dateString;\n}\n\nfunction getDateString(date) {\n  let currentDate = new Date();\n  date = typeof date === \"string\" ? new Date(date) : date;\n\n  if (currentDate.getFullYear() === date.getFullYear() && currentDate.getMonth() === date.getMonth()) {\n    if (currentDate.getDate() - date.getDate() === 0) {\n      return \"Today\";\n    } else if (currentDate.getDate() - date.getDate() === 1) {\n      return \"Yesterday\";\n    } else if (currentDate.getDate() - date.getDate() === 2) {\n      return weekDaysArray[date.getDay()];\n    } else {\n      return weekDaysArray[date.getDay()] + \", \" + date.getDate() + \"-\" + date.getMonth() + \"-\" + date.getFullYear();\n    }\n  } else {\n    return weekDaysArray[date.getDay()] + \", \" + date.getDate() + \"-\" + date.getMonth() + \"-\" + date.getFullYear();\n  }\n}\n\nfunction isMessageDateChanged(messageDate, fromCheckingDate) {\n  // convert to date object if it is not\n  messageDate = typeof messageDate === \"string\" ? new Date(messageDate) : messageDate;\n  fromCheckingDate = typeof fromCheckingDate === \"string\" ? new Date(fromCheckingDate) : fromCheckingDate;\n\n  if (fromCheckingDate.getDate() !== messageDate.getDate()) {\n    return true;\n  } else if (fromCheckingDate.getMonth() !== messageDate.getMonth()) {\n    return true;\n  } else if (fromCheckingDate.getFullYear() !== messageDate.getFullYear()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction checkTimeAndCreateOldMessages(allMessages, activeChatMessageContainer) {\n  let isScrolledToTop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let isScrolledToBottom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let isUserChanged;\n  let container = document.createElement(\"div\");\n  let scrollPosBefore = activeChatMessageContainer.scrollHeight - activeChatMessageContainer.scrollTop - activeChatMessageContainer.clientHeight;\n\n  if (allMessages.length > 0) {\n    if (activeChatMessageContainer.children.length == 0) {\n      TOP_MESSAGE_TIME_POINTER = allMessages[0].createdAt;\n      BOTTOM_MESSAGE_TIME_POINTER = allMessages[0].createdAt;\n    }\n\n    for (let i = 0; i < allMessages.length; i++) {\n      if (isMessageDateChanged(allMessages[i].createdAt, TOP_MESSAGE_TIME_POINTER)) {\n        let dateMessageBox = createDateMessage(TOP_MESSAGE_TIME_POINTER);\n        container.insertAdjacentElement(\"afterbegin\", dateMessageBox);\n        TOP_MESSAGE_TIME_POINTER = allMessages[i].createdAt;\n      }\n\n      if (allMessages[i].hasOwnProperty(\"isInfoMessage\") && allMessages[i].isInfoMessage === true) {\n        let infoMessageBox = createInfoMessage(allMessages[i]);\n        container.insertAdjacentElement(\"afterbegin\", infoMessageBox);\n      } else {\n        isUserChanged = false;\n\n        if (!activeChatMessageContainer.getElementsByClassName(\"active-chat-user-message-box\")[0]) {\n          BOTTOM_MESSAGE_USER_POINTER = allMessages[i].sender;\n        }\n\n        if (i + 1 < allMessages.length) {\n          if (allMessages[i + 1].hasOwnProperty(\"isInfoMessage\") && allMessages[i + 1].isInfoMessage === true) {\n            isUserChanged = true;\n          } else if (allMessages[i].sender._id.toString() !== allMessages[i + 1].sender._id.toString()) {\n            isUserChanged = true;\n          }\n        } else {\n          isUserChanged = true;\n        }\n\n        let userMessageBox = createUserMessage(allMessages[i], activeChatMessageContainer, isUserChanged, isScrolledToBottom);\n        container.insertAdjacentElement(\"afterbegin\", userMessageBox);\n      }\n    }\n  } else {\n    if (TOP_MESSAGE_TIME_POINTER !== \"\") {\n      let dateMessageBox = createDateMessage(TOP_MESSAGE_TIME_POINTER);\n      container.insertAdjacentElement(\"afterbegin\", dateMessageBox);\n    } else {\n      TOP_MESSAGE_TIME_POINTER = \"\";\n      BOTTOM_MESSAGE_TIME_POINTER = \"\";\n    }\n  }\n\n  let loadingMessageAnimationBox = [...activeChatMessageContainer.getElementsByClassName(\"loading-message-animation-box\")];\n  loadingMessageAnimationBox.forEach(box => {\n    box.parentNode.removeChild(box);\n  });\n  activeChatMessageContainer.insertAdjacentHTML(\"afterbegin\", container.innerHTML);\n  let scrollPosAfter = activeChatMessageContainer.scrollHeight - activeChatMessageContainer.scrollTop - activeChatMessageContainer.clientHeight;\n\n  if (isScrolledToBottom === true) {\n    activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n  }\n\n  if (isScrolledToTop === false) {\n    activeChatMessageContainer.scrollTop += scrollPosAfter - scrollPosBefore;\n    console.log(\"before\", scrollPosBefore, \"after\", scrollPosAfter);\n  } // }\n  // console.log(container)\n\n}\nfunction checkTimeAndCreateNewMessage(message, activeChatMessageContainer) {\n  let isScrolledToBottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let isUserChanged;\n\n  if (activeChatMessageContainer.children.length === 0) {\n    BOTTOM_MESSAGE_TIME_POINTER = message.createdAt;\n    TOP_MESSAGE_TIME_POINTER = message.createdAt;\n  }\n\n  if (isMessageDateChanged(message.createdAt, BOTTOM_MESSAGE_TIME_POINTER)) {\n    let dateMessageBox = createDateMessage(message.createdAt);\n    activeChatMessageContainer.insertAdjacentElement(\"beforeend\", dateMessageBox);\n    BOTTOM_MESSAGE_TIME_POINTER = message.createdAt;\n  }\n\n  if (message.hasOwnProperty(\"isInfoMessage\") && message.isInfoMessage === true) {\n    let infoMessageBox = createInfoMessage(message, activeChatMessageContainer, \"beforeend\");\n    activeChatMessageContainer.insertAdjacentElement(\"beforeend\", infoMessageBox);\n  } else {\n    isUserChanged = false;\n\n    if (!activeChatMessageContainer.getElementsByClassName(\"active-chat-user-message-box\")[0]) {\n      isUserChanged = true;\n    } else {\n      if (BOTTOM_MESSAGE_USER_POINTER._id.toString() !== message.sender._id.toString()) {\n        isUserChanged = true;\n      }\n    }\n\n    let userMessageBox = createUserMessage(message, activeChatMessageContainer, isUserChanged, isScrolledToBottom);\n    activeChatMessageContainer.insertAdjacentElement(\"beforeend\", userMessageBox);\n    if (isUserChanged) BOTTOM_MESSAGE_USER_POINTER = message.sender;\n  }\n\n  (0,_showActiveChatSection_dev__WEBPACK_IMPORTED_MODULE_1__.increaseTotalReceivedMessagesCount)();\n\n  if (isScrolledToBottom) {\n    activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n  }\n}\nfunction createUserMessage(message, activeChatMessageContainer) {\n  let isUserChanged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let isScrolledToBottom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const messageBox = document.createElement(\"div\");\n  messageBox.classList.add(\"active-chat-user-message-box\");\n  messageBox.setAttribute(\"data-message-id\", message._id);\n\n  if (message.hasOwnProperty(\"sender\")) {\n    messageBox.setAttribute(\"data-sender-id\", message.sender._id);\n    messageBox.setAttribute(\"data-sender-name\", message.sender.firstName + \" \" + message.sender.lastName);\n  }\n\n  if (!message.hasOwnProperty(\"isDeletedForAll\") || message.hasOwnProperty(\"isDeletedForAll\") && message.isDeletedForAll === false) {\n    let messageBoxInnerHtml = `\n        \n        <div class=\"active-chat-user-message-box__content-box\">\n      \n           <div class=\"active-chat-user-message-box__content-info\">\n               <div class=\"active-chat-user-message-box__content-time\">${getTimeString(message.createdAt)}\n               </div>\n           </div>\n       </div>\n       <div class=\"active-chat-user-message-box__btn\" data-message-box-btn=\"user\">${svg_infoBlankBtn}\n</div>\n        `;\n    messageBox.insertAdjacentHTML(\"beforeend\", messageBoxInnerHtml);\n    let messageContentBox = messageBox.getElementsByClassName(\"active-chat-user-message-box__content-box\")[0];\n    let messageContentInfo = messageBox.getElementsByClassName(\"active-chat-user-message-box__content-info\")[0];\n\n    if (message.hasMediaContent) {\n      if (message.mediaContentType === \"video\") {\n        messageBox.classList.add(\"active-chat-user-message-box--video\");\n        messageContentBox.classList.add(\"active-chat-user-message-box__content-box--video\");\n        messageContentInfo.classList.add(\"active-chat-user-message-box__content-info--video\");\n        let video = document.createElement(\"video\");\n        video.classList.add(\"active-chat-user-message-box__content\", \"active-chat-user-message-box__content--video\");\n        let videoSource = document.createElement(\"source\");\n        videoSource.src = message.mediaContentPath; //   videoSource.type = message.mediaContentMimeType.split(\";\")[0]\n\n        video.insertAdjacentElement(\"beforeend\", videoSource);\n        messageContentBox.insertAdjacentElement(\"afterbegin\", video);\n        createPlyr(video, \"video\");\n      }\n\n      if (message.mediaContentType === \"audio\") {\n        messageBox.classList.add(\"active-chat-user-message-box--audio\");\n        messageContentBox.classList.add(\"active-chat-user-message-box__content-box--audio\");\n        messageContentInfo.classList.add(\"active-chat-user-message-box__content-info--audio\");\n        let audio = document.createElement(\"audio\");\n        audio.classList.add(\"active-chat-user-message-box__content\", \"active-chat-user-message-box__content--audio\");\n        let audioSource = document.createElement(\"source\");\n        audioSource.src = message.mediaContentPath;\n        audioSource.type = message.mediaContentMimeType;\n        audio.insertAdjacentElement(\"beforeend\", audioSource);\n        messageContentBox.insertAdjacentElement(\"afterbegin\", audio);\n        createPlyr(audio, \"audio\");\n      }\n\n      if (message.mediaContentType === \"youtube\") {\n        messageBox.classList.add(\"active-chat-user-message-box--youtube\");\n        messageContentBox.classList.add(\"active-chat-user-message-box__content-box--youtube\");\n        messageContentInfo.classList.add(\"active-chat-user-message-box__content-info--youtube\");\n        let youtube = document.createElement(\"div\");\n        youtube.classList.add(\"active-chat-user-message-box__content\", \"active-chat-user-message-box__content--youtube\");\n        youtube.setAttribute(\"data-plyr-provider\", \"youtube\");\n        youtube.setAttribute(\"data-plyr-embed-id\", message.mediaContentPath);\n        messageContentBox.insertAdjacentElement(\"afterbegin\", youtube);\n        createPlyr(youtube, \"youtube\");\n      }\n\n      if (message.mediaContentType === \"image\") {\n        messageBox.classList.add(\"active-chat-user-message-box--image\");\n        messageContentBox.classList.add(\"active-chat-user-message-box__content-box--image\");\n        messageContentInfo.classList.add(\"active-chat-user-message-box__content-info--image\");\n        let image = document.createElement(\"img\");\n        image.classList.add(\"active-chat-user-message-box__content\", \"active-chat-user-message-box__content--image\");\n\n        image.onload = () => {\n          if (isScrolledToBottom) {\n            activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight;\n          }\n        };\n\n        image.setAttribute(\"src\", message.mediaContentPath);\n        image.setAttribute(\"alt\", \"Image\");\n        messageContentBox.insertAdjacentElement(\"afterbegin\", image);\n      }\n    } else {\n      messageBox.classList.add(\"active-chat-user-message-box--text\");\n      messageContentBox.classList.add(\"active-chat-user-message-box__content-box--text\");\n      messageContentInfo.classList.add(\"active-chat-user-message-box__content-info--text\");\n      let textMessage = document.createElement(\"div\");\n      textMessage.classList.add(\"active-chat-user-message-box__content\", \"active-chat-user-message-box__content--text\"); // textMessage.textContent = message.textContent\n      ////////////////////////////////////////////////////////////////////\n\n      textMessage.insertAdjacentHTML(\"beforeend\", insertLinksToString(message.textContent)); ////////////////////////////////////////////////////////////////////\n\n      messageContentBox.insertAdjacentElement(\"afterbegin\", textMessage);\n    }\n\n    if (message.isRepliedMessage && message.hasOwnProperty(\"repliedTo\")) {\n      let repliedMessageContent, repliedMessageUser;\n      messageContentBox.insertAdjacentHTML(\"afterbegin\", `<div class=\"active-chat-user-message-reply-box\">\n            <div class=\"active-chat-user-message-reply-box__user\">\n            </div>\n           <div class=\"active-chat-user-message-reply-box__user-message\">\n          </div>\n        </div>`);\n      repliedMessageUser = message.repliedTo.sender._id.toString() === loginUser._id.toString() ? \"You\" : message.repliedTo.sender.firstName + \" \" + message.repliedTo.sender.firstName;\n      messageContentBox.getElementsByClassName(\"active-chat-user-message-reply-box__user\")[0].textContent = repliedMessageUser;\n\n      if (message.repliedTo.hasOwnProperty(\"isDeletedForAll\") && message.repliedTo.isDeletedForAll === true) {\n        repliedMessageContent = `${svg_deletedMessageBlankIcon} <span>This Message has been deleted.</span>`;\n        messageContentBox.getElementsByClassName(\"active-chat-user-message-reply-box__user-message\")[0].innerHTML = repliedMessageContent;\n        messageContentBox.getElementsByClassName(\"active-chat-user-message-reply-box\")[0].classList.add(\"active-chat-user-message-reply-box--deleted-message\");\n      } else {\n        if (message.repliedTo.hasMediaContent) {\n          if (message.repliedTo.mediaContentType === \"video\") {\n            repliedMessageContent = `${svg_videoIcon} <span>Video</span>`;\n          }\n\n          if (message.repliedTo.mediaContentType === \"audio\") {\n            repliedMessageContent = `${svg_audioIcon} <span>Audio</span>`;\n          }\n\n          if (message.repliedTo.mediaContentType === \"image\") {\n            repliedMessageContent = `${svg_imageIcon} <span>Image</span>`;\n          }\n\n          if (message.repliedTo.mediaContentType === \"youtube\") {\n            repliedMessageContent = `${svg_youtubeIcon} <span>Youtube</span>`;\n          }\n\n          messageContentBox.getElementsByClassName(\"active-chat-user-message-reply-box__user-message\")[0].innerHTML = repliedMessageContent;\n        } else {\n          repliedMessageContent = message.repliedTo.textContent;\n          messageContentBox.getElementsByClassName(\"active-chat-user-message-reply-box__user-message\")[0].textContent = repliedMessageContent;\n        }\n      }\n\n      messageContentBox.classList.add(\"active-chat-user-message-box__content-box--replied-message\");\n      messageBox.classList.add(\"active-chat-user-message-box--replied-message\");\n      messageBox.dataset.repliedMessageId = message.repliedTo._id;\n    }\n  } else {\n    messageBox.classList.add(\"active-chat-user-message-box--deleted-message\");\n    messageBox.innerHTML = `<div class=\"active-chat-user-message-box__content-box active-chat-user-message-box__content-box--deleted-message\">\n    <div class=\"active-chat-user-message-box__content active-chat-user-message-box__content--deleted-message\">\n   ${svg_deletedMessageBlankIcon}<span>This Message has been deleted.</span>\n    </div>\n    <div class=\"active-chat-user-message-box__content-info active-chat-user-message-box__content-info--deleted-message\">\n        <div class=\"active-chat-user-message-box__content-time active-chat-user-message-box__content-time--deleted-message\">${getTimeString(message.createdAt)}\n        </div>\n    </div>\n  </div>\n  <div class=\"active-chat-user-message-box__btn\" data-message-box-btn=\"user\">${svg_infoBlankBtn}\n  </div>`;\n  }\n\n  let messageContentInfo = messageBox.getElementsByClassName(\"active-chat-user-message-box__content-info\")[0];\n\n  if (message.sender._id.toString() === loginUser._id.toString()) {\n    messageBox.classList.add(\"active-chat-user-message-box--right\");\n    messageContentInfo.insertAdjacentHTML(\"beforeend\", `<div class=\"active-chat-user-message-box__content-status-container\">\n               <div class=\"active-chat-user-message-box__content-status\">${svg_messageTick}\n                </div>\n               <div class=\"active-chat-user-message-box__content-status active-chat-user-message-box__content-status--second \">${svg_messageTick}\n               </div>\n      </div>`);\n    let contentStatusContainer = messageContentInfo.getElementsByClassName(\"active-chat-user-message-box__content-status-container\")[0];\n\n    if (message.hasOwnProperty(\"deliveryStatus\") && message.deliveryStatus.isDelivered === true) {\n      contentStatusContainer.classList.add(\"active-chat-user-message-box__content-status-container--delivered\");\n    }\n\n    if (message.hasOwnProperty(\"seenStatus\") && message.hasOwnProperty(\"reader\")) {\n      let svgs = [...messageBox.querySelectorAll(\".active-chat-user-message-box__content-status-container--delivered .active-chat-user-message-box__content-status svg\")];\n      let color = generateColorForUserMessageStatus(message.seenStatus.length - 1, message.reader.length - 1);\n      svgs.forEach(svg => {\n        svg.style.fill = `rgba(${color.r}, ${color.g},${color.b},0.7)`;\n        svg.style.strokeWidth = `1px`;\n        svg.style.stroke = `rgba(${color.r}, ${color.g},${color.b},0.7)`;\n      });\n      messageBox.dataset.messageSeenStatusCount = message.seenStatus.length;\n    }\n  }\n\n  if (isUserChanged === true && message.sender._id.toString() !== loginUser._id.toString()) {\n    let messageContentBox = messageBox.getElementsByClassName(\"active-chat-user-message-box__content-box\")[0];\n    messageContentBox.insertAdjacentHTML(\"afterbegin\", `<div class=\"active-chat-user-message-box__user-box\">\n      </div>`);\n    messageContentBox.getElementsByClassName(\"active-chat-user-message-box__user-box\")[0].textContent = message.sender.firstName + \" \" + message.sender.lastName;\n    messageContentBox.classList.add(\"active-chat-user-message-box__content-box--has-user-box\");\n    messageBox.classList.add(\"active-chat-user-message-box--has-user-box\");\n  }\n\n  if (message.hasOwnProperty(\"seenStatus\") && message.hasOwnProperty(\"reader\") && message.seenStatus.length !== message.reader.length && message.sender._id.toString() !== loginUser._id.toString()) {\n    USER_MESSAGE_BOX_OBSERVER.observe(messageBox);\n  }\n\n  return messageBox;\n}\n\nfunction insertLinksToString(str) {\n  const regexForUrl = /(?:https?:\\/\\/)(?:www\\.)?[^\\s]+|(?:\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})/g;\n  const allUrls = str.match(regexForUrl);\n\n  if (allUrls === null) {\n    return str;\n  }\n\n  allUrls.forEach(url => {\n    url.startsWith(\"http\") ? url : `http://${url}`;\n  });\n  console.log(\"allUrls:\", allUrls);\n  let textNodes = [];\n  let i = 0;\n  let arr = str.split(regexForUrl);\n  console.log(\"arr:\", arr);\n  arr.forEach(text => {\n    textNodes.push(document.createTextNode(text));\n\n    if (i < allUrls.length) {\n      const link = document.createElement(\"a\");\n      link.href = allUrls[i];\n      link.target = \"_blank\";\n      link.setAttribute(\"rel\", \"noopener noreferrer\");\n      link.textContent = allUrls[i];\n      textNodes.push(link);\n      i++;\n    }\n  });\n  const container = document.createElement(\"div\");\n  textNodes.forEach(node => {\n    container.appendChild(node);\n  });\n  console.log(\"container\", container);\n  return container.innerHTML;\n}\n\nfunction createInfoMessage(message) {\n  if (message.hasOwnProperty(\"isInfoMessage\") && message.isInfoMessage === true) {\n    const infoMessageBox = document.createElement(\"div\");\n    infoMessageBox.classList.add(\"active-chat-info-message-box\");\n    infoMessageBox.setAttribute(\"data-message-id\", message._id);\n    let infoMessageBoxInnerHtml = `<div class=\"active-chat-info-message-box__content\">\n  </div>`;\n    infoMessageBox.insertAdjacentHTML(\"beforeend\", infoMessageBoxInnerHtml);\n    let infoMessageBoxContent = infoMessageBox.getElementsByClassName(\"active-chat-info-message-box__content\")[0];\n    infoMessageBoxContent.textContent = message.infoMessageContent;\n\n    if (message.infoMessageType === \"video-call\") {\n      infoMessageBoxContent.insertAdjacentHTML(\"afterbegin\", svg_videoCallBlankIcon);\n    }\n\n    if (message.infoMessageType === \"new-group\") {\n      infoMessageBoxContent.insertAdjacentHTML(\"afterbegin\", svg_newGroupBlankIcon);\n    }\n\n    return infoMessageBox;\n  }\n}\nfunction createDateMessage(messageDate) {\n  const dateMessageBox = document.createElement(\"div\");\n  dateMessageBox.classList.add(\"active-chat-date-message-box\");\n  let dateMessageBoxInnerHtml = `<div class=\"active-chat-date-message-box__content\">\n  </div>`;\n  dateMessageBox.insertAdjacentHTML(\"beforeend\", dateMessageBoxInnerHtml);\n  dateMessageBox.getElementsByClassName(\"active-chat-date-message-box__content\")[0].textContent = getDateString(messageDate);\n  return dateMessageBox;\n}\nfunction createUnseenMessageTagBox(messageCount, activeChatMessageContainer) {\n  let addPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"afterbegin\";\n  const unseenMessageTagBox = document.createElement(\"div\");\n  unseenMessageTagBox.classList.add(\"active-chat-unseen-message-tag-box\");\n  let unseenMessageTagBoxInnerHtml = `<div class=\"active-chat-unseen-message-tag-box__content\">\n    </div>`;\n  unseenMessageTagBox.insertAdjacentHTML(\"beforeend\", unseenMessageTagBoxInnerHtml);\n  unseenMessageTagBox.getElementsByClassName(\"active-chat-unseen-message-tag-box__content\")[0].textContent = messageCount + \" unread messages\";\n  activeChatMessageContainer.insertAdjacentElement(addPosition, unseenMessageTagBox);\n}\nfunction createLoadingMessagesAnimation() {\n  let loadingMessageAnimationBox = document.createElement(\"div\");\n  loadingMessageAnimationBox.classList.add(\"loading-message-animation-box\");\n  loadingMessageAnimationBox.innerHTML = `<div class=\"loading-message-animation-box__content\"><div></div><div></div></div>`;\n  return loadingMessageAnimationBox;\n}\nfunction convertUserMessageToDeletedForAllMessage(message) {\n  let userMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${message._id}\"]`); // here senderId and messageId is already set in data attribute\n\n  if (userMessageBox) {\n    userMessageBox.className = `active-chat-user-message-box active-chat-user-message-box--deleted-message`;\n    userMessageBox.innerHTML = `<div class=\"active-chat-user-message-box__content-box active-chat-user-message-box__content-box--deleted-message\">\n    <div class=\"active-chat-user-message-box__content active-chat-user-message-box__content--deleted-message\">\n   ${svg_deletedMessageBlankIcon}  <span>This Message has been deleted.</span>\n    </div>\n    <div class=\"active-chat-user-message-box__content-info active-chat-user-message-box__content-info--deleted-message\">\n        <div class=\"active-chat-user-message-box__content-time active-chat-user-message-box__content-time--deleted-message\">${getTimeString(message.createdAt)}\n        </div>\n    </div>\n  </div>\n  <div class=\"active-chat-user-message-box__btn\" data-message-box-btn=\"user\">${svg_infoBlankBtn}\n  </div>`;\n\n    if (message.sender._id.toString() === loginUser._id.toString()) {\n      userMessageBox.classList.add(\"active-chat-user-message-box--right\");\n    }\n  }\n}\nfunction deleteUserMessage(messageId) {\n  let userMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${messageId}\"]`);\n  if (userMessageBox) userMessageBox.parentNode.removeChild(userMessageBox);\n}\nfunction selectUserMessage(messageId) {\n  let userMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${messageId}\"]`);\n  if (userMessageBox) userMessageBox.classList.add(\"active-chat-user-message-box--selected\");\n}\nfunction unSelectUserMessage(messageId) {\n  let userMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${messageId}\"]`);\n  if (userMessageBox) userMessageBox.classList.remove(\"active-chat-user-message-box--selected\");\n}\nfunction changeUserMessageStatusToDelivered(messageId) {\n  setTimeout(() => {\n    let userMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${messageId}\"]`);\n\n    if (userMessageBox) {\n      userMessageBox.getElementsByClassName(\"active-chat-user-message-box__content-status-container\")[0].classList.add(\"active-chat-user-message-box__content-status-container--delivered\");\n    }\n  }, 500);\n}\nfunction changeUserMessageStatusWithMessageSeenStatusCount(messageId, messageSeenStatusCount, messageReaderCount) {\n  let userMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${messageId}\"]`);\n  console.log(\"userMessageBox:\", userMessageBox, \"messageId:\", messageId);\n\n  if (userMessageBox) {\n    if (messageSeenStatusCount > userMessageBox.dataset.messageSeenStatusCount) {\n      let svgs = [...userMessageBox.querySelectorAll(\".active-chat-user-message-box__content-status-container .active-chat-user-message-box__content-status svg\")];\n      console.log(svgs);\n      let color = generateColorForUserMessageStatus(messageSeenStatusCount - 1, messageReaderCount - 1);\n      svgs.forEach(svg => {\n        svg.style.fill = `rgb(${color.r}, ${color.g},${color.b})`;\n        svg.style.strokeWidth = `1px`;\n        svg.style.stroke = `rgb(${color.r}, ${color.g},${color.b})`;\n      });\n      userMessageBox.dataset.messageSeenStatusCount = messageSeenStatusCount;\n    }\n  }\n}\nfunction generateColorForUserMessageStatus(seenStatusCountExceptMe, readerCountExceptMe) {\n  let percent = seenStatusCountExceptMe / readerCountExceptMe;\n  let firstColor = {\n    r: 255,\n    g: 255,\n    b: 255\n  };\n  let secondColor = {\n    r: 8,\n    g: 175,\n    b: 124\n  };\n  let thirdColor = {\n    r: 236,\n    g: 179,\n    b: 101\n  };\n  let resultColor;\n\n  if (percent < 0.5) {\n    let subPercent = percent / 0.5;\n    resultColor = getColorWithPercentage(firstColor, secondColor, subPercent);\n  } else {\n    var subPercent = (percent - 0.5) / 0.5;\n    resultColor = getColorWithPercentage(secondColor, thirdColor, subPercent);\n  }\n\n  return resultColor;\n}\nfunction getColorWithPercentage(color1, color2, percent) {\n  let r = Math.round(color1.r + (color2.r - color1.r) * percent);\n  let g = Math.round(color1.g + (color2.g - color1.g) * percent);\n  let b = Math.round(color1.b + (color2.b - color1.b) * percent);\n  return {\n    r,\n    g,\n    b\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/chat/js/message.dev.js\n");

/***/ })

}]);