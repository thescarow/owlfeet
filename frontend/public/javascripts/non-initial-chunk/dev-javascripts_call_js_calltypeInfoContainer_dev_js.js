"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_call_js_calltypeInfoContainer_dev_js"],{

/***/ "./dev-javascripts/call/js/calltypeInfoContainer.dev.js":
/*!**************************************************************!*\
  !*** ./dev-javascripts/call/js/calltypeInfoContainer.dev.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCalltypeInfoContainer\": () => (/* binding */ createCalltypeInfoContainer)\n/* harmony export */ });\nlet svg_callPermissionLockIcon = `<svg width=\"80\" height=\"100\" viewBox=\"0 0 80 100\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M73.1429 38.8889H62.8571V25.5556C62.8571 9.46111 55.2286 0 40 0C24.7657 0 17.1429 9.46111 17.1429 25.5556V38.8889H5.71429C2.55429 38.8889 0 42.4778 0 45.55V88.8889C0 91.9389 2.44571 95.2167 5.43429 96.15L12.2743 98.3C15.9023 99.3282 19.651 99.8995 23.4286 100H56.5714C60.3476 99.9003 64.0948 99.3271 67.72 98.2944L74.5543 96.1444C77.5486 95.2167 80 91.9389 80 88.8889V45.55C80 42.4778 76.2971 38.8889 73.1429 38.8889ZM51.4286 38.8889H28.5714V23.3278C28.5714 15.3 33.1257 11.1111 40 11.1111C46.8743 11.1111 51.4286 15.3 51.4286 23.3278V38.8889Z\" />\n</svg>\n`;\nlet calltypeInfoContainer = document.getElementById(\"calltypeInfoContainer\");\nlet calltypeInfo = document.getElementById(\"calltypeInfo\");\nlet calltypeInfoPreview = document.getElementById(\"calltypeInfoPreview\");\nlet calltypeInfoBtnContainer = document.getElementById(\"calltypeInfoBtnContainer\");\nlet calltypeMessage = document.getElementById(\"calltypeMessage\");\nlet calltypeMessageReloadBtn = document.getElementById(\"calltypeMessageReloadBtn\");\nlet myMediaStream = null;\nfunction createCalltypeInfoContainer() {\n  console.log(\"calltypeInfoContainer\");\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    console.log(\"Camera and microphone access is supported\");\n    let video = document.createElement(\"video\");\n    video.muted = true;\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      myMediaStream = stream;\n      video.srcObject = stream;\n      video.addEventListener(\"loadedmetadata\", () => {\n        video.play();\n      });\n      calltypeInfoPreview.insertAdjacentElement(\"beforeend\", video);\n    }).catch(e => {\n      console.log(e, typeof e, e.message);\n\n      if (e.message === \"Permission dismissed\") {\n        showCalltypeMessage(\"You've blocked access to your camera and microphone\", `To allow access, Please <span>reload</span> your page and give permission to your <span>camera</span> and <span>microphone</span>`);\n      } else if (e.message === \"Permission denied\") {\n        showCalltypeMessage(\"You've blocked access to your camera and microphone\", `To allow access, click\n        the <span>lock icon</span> ${svg_callPermissionLockIcon} in the\n        address bar. Select the <span>Allow</span> option for <span>Camera</span> and\n        <span>Microphone</span>. Then reload the page\n        for the new settings to take effect.`);\n      } else {\n        showCalltypeMessage(\"You've blocked access to your camera and microphone\", `Your <span>camera</span> or <span>microphone</span> is busy in <span>another app</span> or there is <span>problem</span> with <span>camera</span> or <span>microphone</span>, Please <span>reload</span> your page and give permission to your <span>camera</span> and <span>microphone</span>`);\n      }\n    });\n  } else {\n    console.warn(\"Camera and microphone access is not supported\");\n    showCalltypeMessage(\"Your browser does not support microphone and camera access\", `please upgrade your browser version or switch to <span>Chrome</span> latest version`);\n  }\n\n  initialiseEventForCalltypeInfoContainer();\n}\n\nfunction initialiseEventForCalltypeInfoContainer() {\n  if (calltypeMessageReloadBtn) {\n    calltypeMessageReloadBtn.addEventListener(\"click\", () => {\n      location.reload();\n    });\n  }\n\n  calltypeInfoBtnContainer.addEventListener(\"click\", async e => {\n    let calltypeInfoBtn = e.target.closest(`.calltype-info-btn`);\n\n    if (calltypeInfoBtn && calltypeInfoBtnContainer.contains(calltypeInfoBtn)) {\n      if (calltypeInfoBtn.dataset.calltypeInfoBtn === \"video\") {\n        if (myMediaStream !== null) {\n          let videoEnabled = myMediaStream.getVideoTracks()[0].enabled;\n\n          if (videoEnabled) {\n            myMediaStream.getVideoTracks()[0].enabled = false;\n            calltypeInfoBtn.classList.add(\"calltype-info-btn--selected\");\n            calltypeInfoBtn.classList.remove(\"calltype-info-btn--unselected\");\n            calltypeInfoPreview.classList.add(\"calltype-info__preview--video-off\");\n          } else {\n            myMediaStream.getVideoTracks()[0].enabled = true;\n            calltypeInfoBtn.classList.remove(\"calltype-info-btn--selected\");\n            calltypeInfoBtn.classList.add(\"calltype-info-btn--unselected\");\n            calltypeInfoPreview.classList.remove(\"calltype-info__preview--video-off\");\n          }\n        }\n      }\n\n      if (calltypeInfoBtn.dataset.calltypeInfoBtn === \"mic\") {\n        if (myMediaStream !== null) {\n          let audioEnabled = myMediaStream.getAudioTracks()[0].enabled;\n\n          if (audioEnabled) {\n            myMediaStream.getAudioTracks()[0].enabled = false;\n            calltypeInfoBtn.classList.add(\"calltype-info-btn--selected\");\n            calltypeInfoBtn.classList.remove(\"calltype-info-btn--unselected\");\n            calltypeInfoPreview.classList.add(\"calltype-info__preview--mic-off\");\n          } else {\n            myMediaStream.getAudioTracks()[0].enabled = true;\n            calltypeInfoBtn.classList.remove(\"calltype-info-btn--selected\");\n            calltypeInfoBtn.classList.add(\"calltype-info-btn--unselected\");\n            calltypeInfoPreview.classList.remove(\"calltype-info__preview--mic-off\");\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction showCalltypeMessage(title, desc) {\n  calltypeInfo.classList.add(\"calltype-info--hide\");\n  calltypeMessage.classList.remove(\"calltype-message--hide\");\n  document.getElementById(\"calltypeMessageTitle\").textContent = title;\n  document.getElementById(\"calltypeMessageDesc\").innerHTML = desc;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/call/js/calltypeInfoContainer.dev.js\n");

/***/ })

}]);