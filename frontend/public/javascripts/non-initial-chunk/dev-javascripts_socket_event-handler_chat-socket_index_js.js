"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_socket_event-handler_chat-socket_index_js"],{

/***/ "./dev-javascripts/socket/event-handler/chat-socket/index.js":
/*!*******************************************************************!*\
  !*** ./dev-javascripts/socket/event-handler/chat-socket/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createChatSocket\": () => (/* binding */ createChatSocket)\n/* harmony export */ });\nasync function createChatSocket(socket) {\n  try {\n    // console.log(\"insideChatSocket\")\n    let activeChatSection = document.getElementById(\"activeChatSection\");\n    let activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\n    let activeChatHeaderStatus = document.getElementById(\"activeChatHeaderStatus\");\n    socket.on(\"chat:changed-active-chat-background\", async data => {\n      if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n        let {\n          changeActiveChatBackground\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev.js */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n        changeActiveChatBackground(data.backgroundType, data.backgroundValue);\n      }\n    });\n    socket.on(\"chat:removed-active-chat-background\", async data => {\n      if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n        let {\n          removeActiveChatBackground\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev.js */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n        removeActiveChatBackground();\n      }\n    });\n    socket.on(\"chat:message-start-typing\", async data => {\n      if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n        activeChatHeaderStatus.innerHTML = `${data.isGroupChat ? data.user.firstName : \"\"} typing<span class=\"active-chat-header__typing-effect\">.</span><span class=\"active-chat-header__typing-effect\">.</span><span class=\"active-chat-header__typing-effect\">.</span>`;\n        activeChatHeaderStatus.classList.remove(\"active-chat-header__chat-status--hide\");\n      }\n    });\n    socket.on(\"chat:message-stop-typing\", async data => {\n      if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n        if (data.isGroupChat) {\n          activeChatHeaderStatus.textContent = \"\";\n        } else {\n          activeChatHeaderStatus.textContent = \"Active\";\n        }\n\n        activeChatHeaderStatus.classList.remove(\"active-chat-header__chat-status--hide\");\n      }\n    });\n    socket.on(\"chat:create-new-group-chat\", async chat => {\n      let {\n        createChatBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      createChatBox(chat);\n    });\n    socket.on(\"chat:edit-group-chat\", async chat => {\n      activeChatData = { ...chat\n      };\n      let {\n        updateActiveChatInfoModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de3\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/createActiveChatInfoModal.dev */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n      let {\n        updateActiveChatSection\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n      let {\n        updateChatBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      updateActiveChatInfoModal();\n      updateActiveChatSection(activeChatData);\n      updateChatBox(activeChatData);\n    });\n    socket.on(\"chat:clear-chat-all-messages\", async chatId => {\n      let {\n        clearActiveChatMessageContainer\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n      let {\n        clearChatBoxLatestMessage\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      clearActiveChatMessageContainer();\n      clearChatBoxLatestMessage(chatId);\n    });\n    socket.on(\"chat:delete-chat\", async chatId => {\n      let {\n        clearActiveChatMessageContainer\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n      let {\n        showAllChatSection,\n        deleteChatBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      showAllChatSection();\n      deleteChatBox(chatId);\n      clearActiveChatMessageContainer();\n    });\n    socket.on(\"chat:user-left-group-chat\", async (chatId, userId) => {\n      let {\n        removeChatInfoMember\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de3\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/createActiveChatInfoModal.dev */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n      removeChatInfoMember(chatId, userId);\n    });\n    socket.on(\"chat:created-chat-call-room\", async data => {\n      let {\n        showChatBoxCallRoomBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      showChatBoxCallRoomBox(data.chatId, data.callRoom._id);\n\n      if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n        let {\n          openActiveChatCallRoomBox\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n        openActiveChatCallRoomBox(data.callRoom._id);\n      }\n    });\n    socket.on(\"chat:end-chat-call-room\", async data => {\n      let {\n        hideChatBoxCallRoomBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      hideChatBoxCallRoomBox(data.chatId);\n\n      if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n        let {\n          closeActiveChatCallRoomBox\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_showActiveChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n        closeActiveChatCallRoomBox();\n      }\n    }); //////////////////////////////////////////\n    // socket.on(\"chat:new-message\", async data => {\n    //   console.log(\"new-message data:\", data)\n    //   let message = data.message\n    //   let chatId = activeChatSection.dataset.chatId\n    //   let { updateAllChatSection } = await import(\n    //     \"../../../chat/js/updateAllChatSection.dev\"\n    //   )\n    //   updateAllChatSection(message)\n    //   let { increaseUnseenMessagesCountInChatBox } = await import(\n    //     \"../../../chat/js/updateAllChatSection.dev\"\n    //   )\n    //   increaseUnseenMessagesCountInChatBox(message.chat._id)\n    //   if (\n    //     chatId.toString() !== \"\" &&\n    //     chatId.toString() === message.chat._id.toString()\n    //   ) {\n    //     let { checkTimeAndCreateNewMessage } = await import(\n    //       \"../../../chat/js/message.dev\"\n    //     )\n    //     checkTimeAndCreateNewMessage(message, true)\n    //   }\n    // })\n    ////////\n    // socket.on(\"chat:new-info-message\", async data => {\n    //   let message = data.message\n    //   let chatId = activeChatSection.dataset.chatId\n    //   let { updateAllChatSection } = await import(\n    //     \"../../../chat/js/updateAllChatSection.dev\"\n    //   )\n    //   updateAllChatSection(message)\n    //   let { increaseUnseenMessagesCountInChatBox } = await import(\n    //     \"../../../chat/js/updateAllChatSection.dev\"\n    //   )\n    //   increaseUnseenMessagesCountInChatBox(message.chat._id)\n    //   if (chatId !== \"\" && chatId === message.chat._id) {\n    //     let { createInfoMessage } = await import(\"../../../chat/js/message.dev\")\n    //     let infoMessageBox = createInfoMessage(message)\n    //     activeChatMessageContainer.insertAdjacentElement(\n    //       \"beforeend\",\n    //       infoMessageBox\n    //     )\n    //     activeChatMessageContainer.scrollTop =\n    //       activeChatMessageContainer.scrollHeight + 1000\n    //   }\n    // })\n    // socket.on(\"chat:delete-message-for-all\", async data => {\n    //   let { convertUserMessageToDeletedForAllMessage } = await import(\n    //     \"../../../chat/js/message.dev\"\n    //   )\n    //   convertUserMessageToDeletedForAllMessage(data.deletedForAllMessage)\n    //   if (data.isLatestMessageChanged) {\n    //     let { updateChatBoxLatestMessage } = await import(\n    //       \"../../../chat/js/updateAllChatSection.dev\"\n    //     )\n    //     updateChatBoxLatestMessage(data.latestMessage)\n    //   }\n    // })\n    // socket.on(\"chat:message-delivered\", async data => {\n    //   if (\n    //     data.chatId.toString() === activeChatSection.dataset.chatId.toString()\n    //   ) {\n    //     let { changeUserMessageStatusToDelivered } = await import(\n    //       \"../../../chat/js/message.dev\"\n    //     )\n    //     changeUserMessageStatusToDelivered(data.messageId)\n    //     let { updateMessageInfoDeliveryStatus } = await import(\n    //       \"../../../chat/js/userMessageOptionModal.dev\"\n    //     )\n    //     updateMessageInfoDeliveryStatus(data.messageId, data.deliveredTime)\n    //   }\n    // })\n    // socket.on(\"chat:update-message-seen-status\", async data => {\n    //   if (\n    //     data.chatId.toString() === activeChatSection.dataset.chatId.toString()\n    //   ) {\n    //     let { changeUserMessageStatusWithMessageSeenStatusCount } =\n    //       await import(\"../../../chat/js/message.dev\")\n    //     changeUserMessageStatusWithMessageSeenStatusCount(\n    //       data.messageId,\n    //       data.messageSeenStatusCount,\n    //       data.messageReaderCount\n    //     )\n    //     let { addUserToMessageInfoSeenStatus } = await import(\n    //       \"../../../chat/js/userMessageOptionModal.dev\"\n    //     )\n    //     addUserToMessageInfoSeenStatus(\n    //       data.messageId,\n    //       data.pushedUser,\n    //       data.pushedUserTime\n    //     )\n    //   }\n    // })\n    // socket.on(\"chat:message-seen-by-self\", async data => {\n    //   let { decreaseUnseenMessagesCountInChatBox } = await import(\n    //     \"../../../chat/js/updateAllChatSection.dev\"\n    //   )\n    //   decreaseUnseenMessagesCountInChatBox(data.chatId)\n    // })\n  } catch (e) {\n    console.log(\"socket problem\", e.message);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/socket/event-handler/chat-socket/index.js\n");

/***/ })

}]);