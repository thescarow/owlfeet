"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["vendors-node_modules_uppy_aws-s3-multipart_lib_index_js"],{

/***/ "./node_modules/@uppy/aws-s3-multipart/lib/MultipartUploader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@uppy/aws-s3-multipart/lib/MultipartUploader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uppy/utils/lib/AbortController */ \"./node_modules/@uppy/utils/lib/AbortController.js\");\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\n\nconst MB = 1024 * 1024;\nconst defaultOptions = {\n  getChunkSize(file) {\n    return Math.ceil(file.size / 10000);\n  },\n\n  onProgress() {},\n\n  onPartComplete() {},\n\n  onSuccess() {},\n\n  onError(err) {\n    throw err;\n  }\n\n};\n\nfunction ensureInt(value) {\n  if (typeof value === 'string') {\n    return parseInt(value, 10);\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  throw new TypeError('Expected a number');\n}\n\nconst pausingUploadReason = Symbol('pausing upload, not an actual error');\n\nvar _abortController = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortController\");\n\nvar _chunks = /*#__PURE__*/_classPrivateFieldLooseKey(\"chunks\");\n\nvar _chunkState = /*#__PURE__*/_classPrivateFieldLooseKey(\"chunkState\");\n\nvar _data = /*#__PURE__*/_classPrivateFieldLooseKey(\"data\");\n\nvar _file = /*#__PURE__*/_classPrivateFieldLooseKey(\"file\");\n\nvar _uploadPromise = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadPromise\");\n\nvar _onError = /*#__PURE__*/_classPrivateFieldLooseKey(\"onError\");\n\nvar _onSuccess = /*#__PURE__*/_classPrivateFieldLooseKey(\"onSuccess\");\n\nvar _onReject = /*#__PURE__*/_classPrivateFieldLooseKey(\"onReject\");\n\nvar _initChunks = /*#__PURE__*/_classPrivateFieldLooseKey(\"initChunks\");\n\nvar _createUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"createUpload\");\n\nvar _resumeUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"resumeUpload\");\n\nvar _onPartProgress = /*#__PURE__*/_classPrivateFieldLooseKey(\"onPartProgress\");\n\nvar _onPartComplete = /*#__PURE__*/_classPrivateFieldLooseKey(\"onPartComplete\");\n\nvar _abortUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortUpload\");\n\nclass MultipartUploader {\n  constructor(data, options) {\n    var _this$options, _this$options$getChun;\n\n    Object.defineProperty(this, _abortUpload, {\n      value: _abortUpload2\n    });\n    Object.defineProperty(this, _resumeUpload, {\n      value: _resumeUpload2\n    });\n    Object.defineProperty(this, _createUpload, {\n      value: _createUpload2\n    });\n    Object.defineProperty(this, _initChunks, {\n      value: _initChunks2\n    });\n    Object.defineProperty(this, _abortController, {\n      writable: true,\n      value: new _uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_0__.AbortController()\n    });\n    Object.defineProperty(this, _chunks, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _chunkState, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _data, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _file, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _uploadPromise, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onError, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onSuccess, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _onReject, {\n      writable: true,\n      value: err => (err == null ? void 0 : err.cause) === pausingUploadReason ? null : _classPrivateFieldLooseBase(this, _onError)[_onError](err)\n    });\n    Object.defineProperty(this, _onPartProgress, {\n      writable: true,\n      value: index => ev => {\n        if (!ev.lengthComputable) return;\n        const sent = ev.loaded;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].uploaded = ensureInt(sent);\n\n        const totalUploaded = _classPrivateFieldLooseBase(this, _chunkState)[_chunkState].reduce((n, c) => n + c.uploaded, 0);\n\n        this.options.onProgress(totalUploaded, _classPrivateFieldLooseBase(this, _data)[_data].size);\n      }\n    });\n    Object.defineProperty(this, _onPartComplete, {\n      writable: true,\n      value: index => etag => {\n        // This avoids the net::ERR_OUT_OF_MEMORY in Chromium Browsers.\n        _classPrivateFieldLooseBase(this, _chunks)[_chunks][index] = null;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].etag = etag;\n        _classPrivateFieldLooseBase(this, _chunkState)[_chunkState][index].done = true;\n        const part = {\n          PartNumber: index + 1,\n          ETag: etag\n        };\n        this.options.onPartComplete(part);\n      }\n    });\n    this.options = { ...defaultOptions,\n      ...options\n    }; // Use default `getChunkSize` if it was null or something\n\n    (_this$options$getChun = (_this$options = this.options).getChunkSize) != null ? _this$options$getChun : _this$options.getChunkSize = defaultOptions.getChunkSize;\n    _classPrivateFieldLooseBase(this, _data)[_data] = data;\n    _classPrivateFieldLooseBase(this, _file)[_file] = options.file;\n    _classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess] = this.options.onSuccess;\n    _classPrivateFieldLooseBase(this, _onError)[_onError] = this.options.onError;\n\n    _classPrivateFieldLooseBase(this, _initChunks)[_initChunks]();\n  }\n\n  start() {\n    if (_classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise]) {\n      if (!_classPrivateFieldLooseBase(this, _abortController)[_abortController].signal.aborted) _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort(pausingUploadReason);\n      _classPrivateFieldLooseBase(this, _abortController)[_abortController] = new _uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_0__.AbortController();\n\n      _classPrivateFieldLooseBase(this, _resumeUpload)[_resumeUpload]();\n    } else {\n      _classPrivateFieldLooseBase(this, _createUpload)[_createUpload]();\n    }\n  }\n\n  pause() {\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort(pausingUploadReason); // Swap it out for a new controller, because this instance may be resumed later.\n\n\n    _classPrivateFieldLooseBase(this, _abortController)[_abortController] = new _uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_0__.AbortController();\n  }\n\n  abort(opts) {\n    var _opts;\n\n    if (opts === void 0) {\n      opts = undefined;\n    }\n\n    if ((_opts = opts) != null && _opts.really) _classPrivateFieldLooseBase(this, _abortUpload)[_abortUpload]();else this.pause();\n  } // TODO: remove this in the next major\n\n\n  get chunkState() {\n    return _classPrivateFieldLooseBase(this, _chunkState)[_chunkState];\n  }\n\n}\n\nfunction _initChunks2() {\n  const desiredChunkSize = this.options.getChunkSize(_classPrivateFieldLooseBase(this, _data)[_data]); // at least 5MB per request, at most 10k requests\n\n  const fileSize = _classPrivateFieldLooseBase(this, _data)[_data].size;\n\n  const minChunkSize = Math.max(5 * MB, Math.ceil(fileSize / 10000));\n  const chunkSize = Math.max(desiredChunkSize, minChunkSize); // Upload zero-sized files in one zero-sized chunk\n\n  if (_classPrivateFieldLooseBase(this, _data)[_data].size === 0) {\n    _classPrivateFieldLooseBase(this, _chunks)[_chunks] = [_classPrivateFieldLooseBase(this, _data)[_data]];\n    _classPrivateFieldLooseBase(this, _data)[_data].onProgress = _classPrivateFieldLooseBase(this, _onPartProgress)[_onPartProgress](0);\n    _classPrivateFieldLooseBase(this, _data)[_data].onComplete = _classPrivateFieldLooseBase(this, _onPartComplete)[_onPartComplete](0);\n  } else {\n    const arraySize = Math.ceil(fileSize / chunkSize);\n    _classPrivateFieldLooseBase(this, _chunks)[_chunks] = Array(arraySize);\n    let j = 0;\n\n    for (let i = 0; i < fileSize; i += chunkSize) {\n      const end = Math.min(fileSize, i + chunkSize);\n\n      const chunk = _classPrivateFieldLooseBase(this, _data)[_data].slice(i, end);\n\n      chunk.onProgress = _classPrivateFieldLooseBase(this, _onPartProgress)[_onPartProgress](j);\n      chunk.onComplete = _classPrivateFieldLooseBase(this, _onPartComplete)[_onPartComplete](j);\n      _classPrivateFieldLooseBase(this, _chunks)[_chunks][j++] = chunk;\n    }\n  }\n\n  _classPrivateFieldLooseBase(this, _chunkState)[_chunkState] = _classPrivateFieldLooseBase(this, _chunks)[_chunks].map(() => ({\n    uploaded: 0\n  }));\n}\n\nfunction _createUpload2() {\n  _classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise] = this.options.companionComm.uploadFile(_classPrivateFieldLooseBase(this, _file)[_file], _classPrivateFieldLooseBase(this, _chunks)[_chunks], _classPrivateFieldLooseBase(this, _abortController)[_abortController].signal).then(_classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess], _classPrivateFieldLooseBase(this, _onReject)[_onReject]);\n}\n\nfunction _resumeUpload2() {\n  _classPrivateFieldLooseBase(this, _uploadPromise)[_uploadPromise] = this.options.companionComm.resumeUploadFile(_classPrivateFieldLooseBase(this, _file)[_file], _classPrivateFieldLooseBase(this, _chunks)[_chunks], _classPrivateFieldLooseBase(this, _abortController)[_abortController].signal).then(_classPrivateFieldLooseBase(this, _onSuccess)[_onSuccess], _classPrivateFieldLooseBase(this, _onReject)[_onReject]);\n}\n\nfunction _abortUpload2() {\n  _classPrivateFieldLooseBase(this, _abortController)[_abortController].abort();\n\n  this.options.companionComm.abortFileUpload(_classPrivateFieldLooseBase(this, _file)[_file]).catch(err => this.options.log(err));\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MultipartUploader);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@uppy/aws-s3-multipart/lib/MultipartUploader.js\n");

/***/ }),

/***/ "./node_modules/@uppy/aws-s3-multipart/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@uppy/aws-s3-multipart/lib/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AwsS3Multipart)\n/* harmony export */ });\n/* harmony import */ var _uppy_core_lib_BasePlugin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uppy/core/lib/BasePlugin.js */ \"./node_modules/@uppy/core/lib/BasePlugin.js\");\n/* harmony import */ var _uppy_companion_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @uppy/companion-client */ \"./node_modules/@uppy/companion-client/lib/index.js\");\n/* harmony import */ var _uppy_utils_lib_EventTracker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @uppy/utils/lib/EventTracker */ \"./node_modules/@uppy/utils/lib/EventTracker.js\");\n/* harmony import */ var _uppy_utils_lib_emitSocketProgress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @uppy/utils/lib/emitSocketProgress */ \"./node_modules/@uppy/utils/lib/emitSocketProgress.js\");\n/* harmony import */ var _uppy_utils_lib_getSocketHost__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @uppy/utils/lib/getSocketHost */ \"./node_modules/@uppy/utils/lib/getSocketHost.js\");\n/* harmony import */ var _uppy_utils_lib_RateLimitedQueue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @uppy/utils/lib/RateLimitedQueue */ \"./node_modules/@uppy/utils/lib/RateLimitedQueue.js\");\n/* harmony import */ var _uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @uppy/utils/lib/AbortController */ \"./node_modules/@uppy/utils/lib/AbortController.js\");\n/* harmony import */ var _MultipartUploader_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./MultipartUploader.js */ \"./node_modules/@uppy/aws-s3-multipart/lib/MultipartUploader.js\");\nlet _Symbol$for;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\n\n\n\n\n\n\n\nconst packageJson = {\n  \"version\": \"3.1.1\"\n};\n\n\nfunction assertServerError(res) {\n  if (res && res.error) {\n    const error = new Error(res.message);\n    Object.assign(error, res.error);\n    throw error;\n  }\n\n  return res;\n}\n\nfunction throwIfAborted(signal) {\n  if (signal != null && signal.aborted) {\n    throw (0,_uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_6__.createAbortError)('The operation was aborted', {\n      cause: signal.reason\n    });\n  }\n}\n\nvar _abortMultipartUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"abortMultipartUpload\");\n\nvar _cache = /*#__PURE__*/_classPrivateFieldLooseKey(\"cache\");\n\nvar _createMultipartUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"createMultipartUpload\");\n\nvar _fetchSignature = /*#__PURE__*/_classPrivateFieldLooseKey(\"fetchSignature\");\n\nvar _listParts = /*#__PURE__*/_classPrivateFieldLooseKey(\"listParts\");\n\nvar _previousRetryDelay = /*#__PURE__*/_classPrivateFieldLooseKey(\"previousRetryDelay\");\n\nvar _requests = /*#__PURE__*/_classPrivateFieldLooseKey(\"requests\");\n\nvar _retryDelayIterator = /*#__PURE__*/_classPrivateFieldLooseKey(\"retryDelayIterator\");\n\nvar _sendCompletionRequest = /*#__PURE__*/_classPrivateFieldLooseKey(\"sendCompletionRequest\");\n\nvar _setS3MultipartState = /*#__PURE__*/_classPrivateFieldLooseKey(\"setS3MultipartState\");\n\nvar _uploadPartBytes = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadPartBytes\");\n\nvar _shouldRetry = /*#__PURE__*/_classPrivateFieldLooseKey(\"shouldRetry\");\n\nclass HTTPCommunicationQueue {\n  constructor(_requests2, options, setS3MultipartState) {\n    Object.defineProperty(this, _shouldRetry, {\n      value: _shouldRetry2\n    });\n    Object.defineProperty(this, _abortMultipartUpload, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _cache, {\n      writable: true,\n      value: new WeakMap()\n    });\n    Object.defineProperty(this, _createMultipartUpload, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _fetchSignature, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _listParts, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _previousRetryDelay, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _requests, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _retryDelayIterator, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _sendCompletionRequest, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _setS3MultipartState, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _uploadPartBytes, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _requests)[_requests] = _requests2;\n    _classPrivateFieldLooseBase(this, _setS3MultipartState)[_setS3MultipartState] = setS3MultipartState;\n    this.setOptions(options);\n  }\n\n  setOptions(options) {\n    const requests = _classPrivateFieldLooseBase(this, _requests)[_requests];\n\n    if ('abortMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _abortMultipartUpload)[_abortMultipartUpload] = requests.wrapPromiseFunction(options.abortMultipartUpload);\n    }\n\n    if ('createMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _createMultipartUpload)[_createMultipartUpload] = requests.wrapPromiseFunction(options.createMultipartUpload, {\n        priority: -1\n      });\n    }\n\n    if ('signPart' in options) {\n      _classPrivateFieldLooseBase(this, _fetchSignature)[_fetchSignature] = requests.wrapPromiseFunction(options.signPart);\n    }\n\n    if ('listParts' in options) {\n      _classPrivateFieldLooseBase(this, _listParts)[_listParts] = requests.wrapPromiseFunction(options.listParts);\n    }\n\n    if ('completeMultipartUpload' in options) {\n      _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest] = requests.wrapPromiseFunction(options.completeMultipartUpload);\n    }\n\n    if ('retryDelays' in options) {\n      var _options$retryDelays;\n\n      _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator] = (_options$retryDelays = options.retryDelays) == null ? void 0 : _options$retryDelays.values();\n    }\n\n    if ('uploadPartBytes' in options) {\n      _classPrivateFieldLooseBase(this, _uploadPartBytes)[_uploadPartBytes] = requests.wrapPromiseFunction(options.uploadPartBytes, {\n        priority: Infinity\n      });\n    }\n  }\n\n  async getUploadId(file, signal) {\n    const cachedResult = _classPrivateFieldLooseBase(this, _cache)[_cache].get(file.data);\n\n    if (cachedResult != null) {\n      return cachedResult;\n    }\n\n    const promise = _classPrivateFieldLooseBase(this, _createMultipartUpload)[_createMultipartUpload](file, signal);\n\n    const abortPromise = () => {\n      promise.abort(signal.reason);\n\n      _classPrivateFieldLooseBase(this, _cache)[_cache].delete(file.data);\n    };\n\n    signal.addEventListener('abort', abortPromise, {\n      once: true\n    });\n\n    _classPrivateFieldLooseBase(this, _cache)[_cache].set(file.data, promise);\n\n    promise.then(async result => {\n      signal.removeEventListener('abort', abortPromise);\n\n      _classPrivateFieldLooseBase(this, _setS3MultipartState)[_setS3MultipartState](file, result);\n\n      _classPrivateFieldLooseBase(this, _cache)[_cache].set(file.data, result);\n    }, () => {\n      signal.removeEventListener('abort', abortPromise);\n    });\n    return promise;\n  }\n\n  async abortFileUpload(file) {\n    const result = _classPrivateFieldLooseBase(this, _cache)[_cache].get(file.data);\n\n    if (result != null) {\n      // If the createMultipartUpload request never was made, we don't\n      // need to send the abortMultipartUpload request.\n      await _classPrivateFieldLooseBase(this, _abortMultipartUpload)[_abortMultipartUpload](file, await result);\n    }\n  }\n\n  async uploadFile(file, chunks, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n    const parts = await Promise.all(chunks.map((chunk, i) => this.uploadChunk(file, i + 1, chunk, signal)));\n    throwIfAborted(signal);\n    return _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest](file, {\n      key,\n      uploadId,\n      parts,\n      signal\n    }).abortOn(signal);\n  }\n\n  async resumeUploadFile(file, chunks, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n    const alreadyUploadedParts = await _classPrivateFieldLooseBase(this, _listParts)[_listParts](file, {\n      uploadId,\n      key,\n      signal\n    }).abortOn(signal);\n    throwIfAborted(signal);\n    const parts = await Promise.all(chunks.map((chunk, i) => {\n      const partNumber = i + 1;\n      const alreadyUploadedInfo = alreadyUploadedParts.find(_ref => {\n        let {\n          PartNumber\n        } = _ref;\n        return PartNumber === partNumber;\n      });\n      return alreadyUploadedInfo == null ? this.uploadChunk(file, partNumber, chunk, signal) : {\n        PartNumber: partNumber,\n        ETag: alreadyUploadedInfo.ETag\n      };\n    }));\n    throwIfAborted(signal);\n    return _classPrivateFieldLooseBase(this, _sendCompletionRequest)[_sendCompletionRequest](file, {\n      key,\n      uploadId,\n      parts,\n      signal\n    }).abortOn(signal);\n  }\n\n  async uploadChunk(file, partNumber, body, signal) {\n    throwIfAborted(signal);\n    const {\n      uploadId,\n      key\n    } = await this.getUploadId(file, signal);\n    throwIfAborted(signal);\n\n    for (;;) {\n      const signature = await _classPrivateFieldLooseBase(this, _fetchSignature)[_fetchSignature](file, {\n        uploadId,\n        key,\n        partNumber,\n        body,\n        signal\n      }).abortOn(signal);\n      throwIfAborted(signal);\n\n      try {\n        return {\n          PartNumber: partNumber,\n          ...(await _classPrivateFieldLooseBase(this, _uploadPartBytes)[_uploadPartBytes](signature, body, signal).abortOn(signal))\n        };\n      } catch (err) {\n        if (!(await _classPrivateFieldLooseBase(this, _shouldRetry)[_shouldRetry](err))) throw err;\n      }\n    }\n  }\n\n}\n\nasync function _shouldRetry2(err) {\n  var _err$source;\n\n  const requests = _classPrivateFieldLooseBase(this, _requests)[_requests];\n\n  const status = err == null ? void 0 : (_err$source = err.source) == null ? void 0 : _err$source.status; // TODO: this retry logic is taken out of Tus. We should have a centralized place for retrying,\n  // perhaps the rate limited queue, and dedupe all plugins with that.\n\n  if (status == null) {\n    return false;\n  }\n\n  if (status === 403 && err.message === 'Request has expired') {\n    if (!requests.isPaused) {\n      // We don't want to exhaust the retryDelayIterator as long as there are\n      // more than one request in parallel, to give slower connection a chance\n      // to catch up with the expiry set in Companion.\n      if (requests.limit === 1 || _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay] == null) {\n        var _classPrivateFieldLoo;\n\n        const next = (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo.next();\n\n        if (next == null || next.done) {\n          return false;\n        } // If there are more than 1 request done in parallel, the RLQ limit is\n        // decreased and the failed request is requeued after waiting for a bit.\n        // If there is only one request in parallel, the limit can't be\n        // decreased, so we iterate over `retryDelayIterator` as we do for\n        // other failures.\n        // `#previousRetryDelay` caches the value so we can re-use it next time.\n\n\n        _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay] = next.value;\n      } // No need to stop the other requests, we just want to lower the limit.\n\n\n      requests.rateLimit(0);\n      await new Promise(resolve => setTimeout(resolve, _classPrivateFieldLooseBase(this, _previousRetryDelay)[_previousRetryDelay]));\n    }\n  } else if (status === 429) {\n    // HTTP 429 Too Many Requests => to avoid the whole download to fail, pause all requests.\n    if (!requests.isPaused) {\n      var _classPrivateFieldLoo2;\n\n      const next = (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo2.next();\n\n      if (next == null || next.done) {\n        return false;\n      }\n\n      requests.rateLimit(next.value);\n    }\n  } else if (status > 400 && status < 500 && status !== 409) {\n    // HTTP 4xx, the server won't send anything, it's doesn't make sense to retry\n    return false;\n  } else if (typeof navigator !== 'undefined' && navigator.onLine === false) {\n    // The navigator is offline, let's wait for it to come back online.\n    if (!requests.isPaused) {\n      requests.pause();\n      window.addEventListener('online', () => {\n        requests.resume();\n      }, {\n        once: true\n      });\n    }\n  } else {\n    var _classPrivateFieldLoo3;\n\n    // Other error code means the request can be retried later.\n    const next = (_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _retryDelayIterator)[_retryDelayIterator]) == null ? void 0 : _classPrivateFieldLoo3.next();\n\n    if (next == null || next.done) {\n      return false;\n    }\n\n    await new Promise(resolve => setTimeout(resolve, next.value));\n  }\n\n  return true;\n}\n\nvar _queueRequestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueRequestSocketToken\");\n\nvar _companionCommunicationQueue = /*#__PURE__*/_classPrivateFieldLooseKey(\"companionCommunicationQueue\");\n\nvar _client = /*#__PURE__*/_classPrivateFieldLooseKey(\"client\");\n\nvar _setS3MultipartState2 = /*#__PURE__*/_classPrivateFieldLooseKey(\"setS3MultipartState\");\n\nvar _requestSocketToken = /*#__PURE__*/_classPrivateFieldLooseKey(\"requestSocketToken\");\n\nvar _setCompanionHeaders = /*#__PURE__*/_classPrivateFieldLooseKey(\"setCompanionHeaders\");\n\n_Symbol$for = Symbol.for('uppy test: getClient');\nclass AwsS3Multipart extends _uppy_core_lib_BasePlugin_js__WEBPACK_IMPORTED_MODULE_0__ {\n  constructor(uppy, _opts) {\n    var _this$opts$rateLimite;\n\n    super(uppy, _opts);\n    Object.defineProperty(this, _queueRequestSocketToken, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _companionCommunicationQueue, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _setS3MultipartState2, {\n      writable: true,\n      value: (file, _ref2) => {\n        let {\n          key,\n          uploadId\n        } = _ref2;\n        const cFile = this.uppy.getFile(file.id);\n        this.uppy.setFileState(file.id, {\n          s3Multipart: { ...cFile.s3Multipart,\n            key,\n            uploadId\n          }\n        });\n      }\n    });\n    Object.defineProperty(this, _requestSocketToken, {\n      writable: true,\n      value: async file => {\n        const Client = file.remote.providerOptions.provider ? _uppy_companion_client__WEBPACK_IMPORTED_MODULE_1__.Provider : _uppy_companion_client__WEBPACK_IMPORTED_MODULE_1__.RequestClient;\n        const client = new Client(this.uppy, file.remote.providerOptions);\n        const opts = { ...this.opts\n        };\n\n        if (file.tus) {\n          // Install file-specific upload overrides.\n          Object.assign(opts, file.tus);\n        }\n\n        if (file.remote.url == null) {\n          throw new Error('Cannot connect to an undefined URL');\n        }\n\n        const res = await client.post(file.remote.url, { ...file.remote.body,\n          protocol: 's3-multipart',\n          size: file.data.size,\n          metadata: file.meta\n        });\n        return res.token;\n      }\n    });\n    Object.defineProperty(this, _setCompanionHeaders, {\n      writable: true,\n      value: () => {\n        _classPrivateFieldLooseBase(this, _client)[_client].setCompanionHeaders(this.opts.companionHeaders);\n      }\n    });\n    this.type = 'uploader';\n    this.id = this.opts.id || 'AwsS3Multipart';\n    this.title = 'AWS S3 Multipart';\n    _classPrivateFieldLooseBase(this, _client)[_client] = new _uppy_companion_client__WEBPACK_IMPORTED_MODULE_1__.RequestClient(uppy, _opts);\n    const defaultOptions = {\n      limit: 6,\n      retryDelays: [0, 1000, 3000, 5000],\n      createMultipartUpload: this.createMultipartUpload.bind(this),\n      listParts: this.listParts.bind(this),\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\n      completeMultipartUpload: this.completeMultipartUpload.bind(this),\n      signPart: this.signPart.bind(this),\n      uploadPartBytes: AwsS3Multipart.uploadPartBytes,\n      companionHeaders: {}\n    };\n    this.opts = { ...defaultOptions,\n      ..._opts\n    };\n\n    if ((_opts == null ? void 0 : _opts.prepareUploadParts) != null && _opts.signPart == null) {\n      this.opts.signPart = async (file, _ref3) => {\n        let {\n          uploadId,\n          key,\n          partNumber,\n          body,\n          signal\n        } = _ref3;\n        const {\n          presignedUrls,\n          headers\n        } = await _opts.prepareUploadParts(file, {\n          uploadId,\n          key,\n          parts: [{\n            number: partNumber,\n            chunk: body\n          }],\n          signal\n        });\n        return {\n          url: presignedUrls == null ? void 0 : presignedUrls[partNumber],\n          headers: headers == null ? void 0 : headers[partNumber]\n        };\n      };\n    }\n\n    this.upload = this.upload.bind(this);\n    /**\n     * Simultaneous upload limiting is shared across all uploads with this plugin.\n     *\n     * @type {RateLimitedQueue}\n     */\n\n    this.requests = (_this$opts$rateLimite = this.opts.rateLimitedQueue) != null ? _this$opts$rateLimite : new _uppy_utils_lib_RateLimitedQueue__WEBPACK_IMPORTED_MODULE_5__.RateLimitedQueue(this.opts.limit);\n    _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue] = new HTTPCommunicationQueue(this.requests, this.opts, _classPrivateFieldLooseBase(this, _setS3MultipartState2)[_setS3MultipartState2]);\n    this.uploaders = Object.create(null);\n    this.uploaderEvents = Object.create(null);\n    this.uploaderSockets = Object.create(null);\n    _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken] = this.requests.wrapPromiseFunction(_classPrivateFieldLooseBase(this, _requestSocketToken)[_requestSocketToken], {\n      priority: -1\n    });\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _client)[_client];\n  }\n\n  setOptions(newOptions) {\n    _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue].setOptions(newOptions);\n\n    return super.setOptions(newOptions);\n  }\n  /**\n   * Clean up all references for a file's upload: the MultipartUploader instance,\n   * any events related to the file, and the Companion WebSocket connection.\n   *\n   * Set `opts.abort` to tell S3 that the multipart upload is cancelled and must be removed.\n   * This should be done when the user cancels the upload, not when the upload is completed or errored.\n   */\n\n\n  resetUploaderReferences(fileID, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (this.uploaders[fileID]) {\n      this.uploaders[fileID].abort({\n        really: opts.abort || false\n      });\n      this.uploaders[fileID] = null;\n    }\n\n    if (this.uploaderEvents[fileID]) {\n      this.uploaderEvents[fileID].remove();\n      this.uploaderEvents[fileID] = null;\n    }\n\n    if (this.uploaderSockets[fileID]) {\n      this.uploaderSockets[fileID].close();\n      this.uploaderSockets[fileID] = null;\n    }\n  } // TODO: make this a private method in the next major\n\n\n  assertHost(method) {\n    if (!this.opts.companionUrl) {\n      throw new Error(`Expected a \\`companionUrl\\` option containing a Companion address, or if you are not using Companion, a custom \\`${method}\\` implementation.`);\n    }\n  }\n\n  createMultipartUpload(file, signal) {\n    this.assertHost('createMultipartUpload');\n    throwIfAborted(signal);\n    const metadata = {};\n    Object.keys(file.meta || {}).forEach(key => {\n      if (file.meta[key] != null) {\n        metadata[key] = file.meta[key].toString();\n      }\n    });\n    return _classPrivateFieldLooseBase(this, _client)[_client].post('s3/multipart', {\n      filename: file.name,\n      type: file.type,\n      metadata\n    }, {\n      signal\n    }).then(assertServerError);\n  }\n\n  listParts(file, _ref4, signal) {\n    let {\n      key,\n      uploadId\n    } = _ref4;\n    this.assertHost('listParts');\n    throwIfAborted(signal);\n    const filename = encodeURIComponent(key);\n    return _classPrivateFieldLooseBase(this, _client)[_client].get(`s3/multipart/${uploadId}?key=${filename}`, {\n      signal\n    }).then(assertServerError);\n  }\n\n  completeMultipartUpload(file, _ref5, signal) {\n    let {\n      key,\n      uploadId,\n      parts\n    } = _ref5;\n    this.assertHost('completeMultipartUpload');\n    throwIfAborted(signal);\n    const filename = encodeURIComponent(key);\n    const uploadIdEnc = encodeURIComponent(uploadId);\n    return _classPrivateFieldLooseBase(this, _client)[_client].post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, {\n      parts\n    }, {\n      signal\n    }).then(assertServerError);\n  }\n\n  signPart(file, _ref6) {\n    let {\n      uploadId,\n      key,\n      partNumber,\n      signal\n    } = _ref6;\n    this.assertHost('signPart');\n    throwIfAborted(signal);\n\n    if (uploadId == null || key == null || partNumber == null) {\n      throw new Error('Cannot sign without a key, an uploadId, and a partNumber');\n    }\n\n    const filename = encodeURIComponent(key);\n    return _classPrivateFieldLooseBase(this, _client)[_client].get(`s3/multipart/${uploadId}/${partNumber}?key=${filename}`, {\n      signal\n    }).then(assertServerError);\n  }\n\n  abortMultipartUpload(file, _ref7, signal) {\n    let {\n      key,\n      uploadId\n    } = _ref7;\n    this.assertHost('abortMultipartUpload');\n    const filename = encodeURIComponent(key);\n    const uploadIdEnc = encodeURIComponent(uploadId);\n    return _classPrivateFieldLooseBase(this, _client)[_client].delete(`s3/multipart/${uploadIdEnc}?key=${filename}`, undefined, {\n      signal\n    }).then(assertServerError);\n  }\n\n  static async uploadPartBytes(_ref8, body, signal) {\n    let {\n      url,\n      expires,\n      headers\n    } = _ref8;\n    throwIfAborted(signal);\n\n    if (url == null) {\n      throw new Error('Cannot upload to an undefined URL');\n    }\n\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('PUT', url, true);\n\n      if (headers) {\n        Object.keys(headers).forEach(key => {\n          xhr.setRequestHeader(key, headers[key]);\n        });\n      }\n\n      xhr.responseType = 'text';\n\n      if (typeof expires === 'number') {\n        xhr.timeout = expires * 1000;\n      }\n\n      function onabort() {\n        xhr.abort();\n      }\n\n      function cleanup() {\n        signal.removeEventListener('abort', onabort);\n      }\n\n      signal.addEventListener('abort', onabort);\n      xhr.upload.addEventListener('progress', body.onProgress);\n      xhr.addEventListener('abort', () => {\n        cleanup();\n        reject((0,_uppy_utils_lib_AbortController__WEBPACK_IMPORTED_MODULE_6__.createAbortError)());\n      });\n      xhr.addEventListener('timeout', () => {\n        cleanup();\n        const error = new Error('Request has expired');\n        error.source = {\n          status: 403\n        };\n        reject(error);\n      });\n      xhr.addEventListener('load', ev => {\n        cleanup();\n\n        if (ev.target.status === 403 && ev.target.responseText.includes('<Message>Request has expired</Message>')) {\n          const error = new Error('Request has expired');\n          error.source = ev.target;\n          reject(error);\n          return;\n        }\n\n        if (ev.target.status < 200 || ev.target.status >= 300) {\n          const error = new Error('Non 2xx');\n          error.source = ev.target;\n          reject(error);\n          return;\n        }\n\n        body.onProgress == null ? void 0 : body.onProgress(body.size); // NOTE This must be allowed by CORS.\n\n        const etag = ev.target.getResponseHeader('ETag');\n\n        if (etag === null) {\n          reject(new Error('AwsS3/Multipart: Could not read the ETag header. This likely means CORS is not configured correctly on the S3 Bucket. See https://uppy.io/docs/aws-s3-multipart#S3-Bucket-Configuration for instructions.'));\n          return;\n        }\n\n        body.onComplete == null ? void 0 : body.onComplete(etag);\n        resolve({\n          ETag: etag\n        });\n      });\n      xhr.addEventListener('error', ev => {\n        cleanup();\n        const error = new Error('Unknown error');\n        error.source = ev.target;\n        reject(error);\n      });\n      xhr.send(body);\n    });\n  }\n\n  uploadFile(file) {\n    var _this = this;\n\n    return new Promise((resolve, reject) => {\n      const onProgress = (bytesUploaded, bytesTotal) => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded,\n          bytesTotal\n        });\n      };\n\n      const onError = err => {\n        this.uppy.log(err);\n        this.uppy.emit('upload-error', file, err);\n        this.resetUploaderReferences(file.id);\n        reject(err);\n      };\n\n      const onSuccess = result => {\n        const uploadObject = upload; // eslint-disable-line no-use-before-define\n\n        const uploadResp = {\n          body: { ...result\n          },\n          uploadURL: result.location\n        };\n        this.resetUploaderReferences(file.id);\n        const cFile = this.uppy.getFile(file.id);\n        this.uppy.emit('upload-success', cFile || file, uploadResp);\n\n        if (result.location) {\n          this.uppy.log(`Download ${file.name} from ${result.location}`);\n        }\n\n        resolve(uploadObject);\n      };\n\n      const onPartComplete = part => {\n        const cFile = this.uppy.getFile(file.id);\n\n        if (!cFile) {\n          return;\n        }\n\n        this.uppy.emit('s3-multipart:part-uploaded', cFile, part);\n      };\n\n      const upload = new _MultipartUploader_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](file.data, {\n        // .bind to pass the file object to each handler.\n        companionComm: _classPrivateFieldLooseBase(this, _companionCommunicationQueue)[_companionCommunicationQueue],\n        log: function () {\n          return _this.uppy.log(...arguments);\n        },\n        getChunkSize: this.opts.getChunkSize ? this.opts.getChunkSize.bind(this) : null,\n        onProgress,\n        onError,\n        onSuccess,\n        onPartComplete,\n        file,\n        ...file.s3Multipart\n      });\n      this.uploaders[file.id] = upload;\n      this.uploaderEvents[file.id] = new _uppy_utils_lib_EventTracker__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.uppy);\n      this.onFileRemove(file.id, removed => {\n        upload.abort();\n        this.resetUploaderReferences(file.id, {\n          abort: true\n        });\n        resolve(`upload ${removed.id} was removed`);\n      });\n      this.onCancelAll(file.id, function (_temp) {\n        let {\n          reason\n        } = _temp === void 0 ? {} : _temp;\n\n        if (reason === 'user') {\n          upload.abort();\n\n          _this.resetUploaderReferences(file.id, {\n            abort: true\n          });\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n      this.onFilePause(file.id, isPaused => {\n        if (isPaused) {\n          upload.pause();\n        } else {\n          upload.start();\n        }\n      });\n      this.onPauseAll(file.id, () => {\n        upload.pause();\n      });\n      this.onResumeAll(file.id, () => {\n        upload.start();\n      }); // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n\n      if (!file.progress.uploadStarted || !file.isRestored) {\n        upload.start();\n        this.uppy.emit('upload-started', file);\n      }\n    });\n  }\n\n  async uploadRemote(file) {\n    this.resetUploaderReferences(file.id); // Don't double-emit upload-started for Golden Retriever-restored files that were already started\n\n    if (!file.progress.uploadStarted || !file.isRestored) {\n      this.uppy.emit('upload-started', file);\n    }\n\n    try {\n      if (file.serverToken) {\n        return this.connectToServerSocket(file);\n      }\n\n      const serverToken = await _classPrivateFieldLooseBase(this, _queueRequestSocketToken)[_queueRequestSocketToken](file);\n      this.uppy.setFileState(file.id, {\n        serverToken\n      });\n      return this.connectToServerSocket(this.uppy.getFile(file.id));\n    } catch (err) {\n      this.uppy.emit('upload-error', file, err);\n      throw err;\n    }\n  }\n\n  async connectToServerSocket(file) {\n    var _this2 = this;\n\n    return new Promise((resolve, reject) => {\n      let queuedRequest;\n      const token = file.serverToken;\n      const host = (0,_uppy_utils_lib_getSocketHost__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(file.remote.companionUrl);\n      const socket = new _uppy_companion_client__WEBPACK_IMPORTED_MODULE_1__.Socket({\n        target: `${host}/api/${token}`\n      });\n      this.uploaderSockets[file.id] = socket;\n      this.uploaderEvents[file.id] = new _uppy_utils_lib_EventTracker__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.uppy);\n      this.onFileRemove(file.id, () => {\n        queuedRequest.abort();\n        socket.send('cancel', {});\n        this.resetUploaderReferences(file.id, {\n          abort: true\n        });\n        resolve(`upload ${file.id} was removed`);\n      });\n      this.onFilePause(file.id, isPaused => {\n        if (isPaused) {\n          // Remove this file from the queue so another file can start in its place.\n          queuedRequest.abort();\n          socket.send('pause', {});\n        } else {\n          // Resuming an upload should be queued, else you could pause and then\n          // resume a queued upload to make it skip the queue.\n          queuedRequest.abort();\n          queuedRequest = this.requests.run(() => {\n            socket.send('resume', {});\n            return () => {};\n          });\n        }\n      });\n      this.onPauseAll(file.id, () => {\n        queuedRequest.abort();\n        socket.send('pause', {});\n      });\n      this.onCancelAll(file.id, function (_temp2) {\n        let {\n          reason\n        } = _temp2 === void 0 ? {} : _temp2;\n\n        if (reason === 'user') {\n          queuedRequest.abort();\n          socket.send('cancel', {});\n\n          _this2.resetUploaderReferences(file.id);\n        }\n\n        resolve(`upload ${file.id} was canceled`);\n      });\n      this.onResumeAll(file.id, () => {\n        queuedRequest.abort();\n\n        if (file.error) {\n          socket.send('pause', {});\n        }\n\n        queuedRequest = this.requests.run(() => {\n          socket.send('resume', {});\n        });\n      });\n      this.onRetry(file.id, () => {\n        // Only do the retry if the upload is actually in progress;\n        // else we could try to send these messages when the upload is still queued.\n        // We may need a better check for this since the socket may also be closed\n        // for other reasons, like network failures.\n        if (socket.isOpen) {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        }\n      });\n      this.onRetryAll(file.id, () => {\n        if (socket.isOpen) {\n          socket.send('pause', {});\n          socket.send('resume', {});\n        }\n      });\n      socket.on('progress', progressData => (0,_uppy_utils_lib_emitSocketProgress__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, progressData, file));\n      socket.on('error', errData => {\n        this.uppy.emit('upload-error', file, new Error(errData.error));\n        this.resetUploaderReferences(file.id);\n        queuedRequest.done();\n        reject(new Error(errData.error));\n      });\n      socket.on('success', data => {\n        const uploadResp = {\n          uploadURL: data.url\n        };\n        this.uppy.emit('upload-success', file, uploadResp);\n        this.resetUploaderReferences(file.id);\n        queuedRequest.done();\n        resolve();\n      });\n      queuedRequest = this.requests.run(() => {\n        if (file.isPaused) {\n          socket.send('pause', {});\n        }\n\n        return () => {};\n      });\n    });\n  }\n\n  async upload(fileIDs) {\n    if (fileIDs.length === 0) return undefined;\n    const promises = fileIDs.map(id => {\n      const file = this.uppy.getFile(id);\n\n      if (file.isRemote) {\n        return this.uploadRemote(file);\n      }\n\n      return this.uploadFile(file);\n    });\n    return Promise.all(promises);\n  }\n\n  onFileRemove(fileID, cb) {\n    this.uploaderEvents[fileID].on('file-removed', file => {\n      if (fileID === file.id) cb(file.id);\n    });\n  }\n\n  onFilePause(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        cb(isPaused);\n      }\n    });\n  }\n\n  onRetry(fileID, cb) {\n    this.uploaderEvents[fileID].on('upload-retry', targetFileID => {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  }\n\n  onRetryAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('retry-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onPauseAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('pause-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  onCancelAll(fileID, eventHandler) {\n    var _this3 = this;\n\n    this.uploaderEvents[fileID].on('cancel-all', function () {\n      if (!_this3.uppy.getFile(fileID)) return;\n      eventHandler(...arguments);\n    });\n  }\n\n  onResumeAll(fileID, cb) {\n    this.uploaderEvents[fileID].on('resume-all', () => {\n      if (!this.uppy.getFile(fileID)) return;\n      cb();\n    });\n  }\n\n  install() {\n    const {\n      capabilities\n    } = this.uppy.getState();\n    this.uppy.setState({\n      capabilities: { ...capabilities,\n        resumableUploads: true\n      }\n    });\n    this.uppy.addPreProcessor(_classPrivateFieldLooseBase(this, _setCompanionHeaders)[_setCompanionHeaders]);\n    this.uppy.addUploader(this.upload);\n  }\n\n  uninstall() {\n    const {\n      capabilities\n    } = this.uppy.getState();\n    this.uppy.setState({\n      capabilities: { ...capabilities,\n        resumableUploads: false\n      }\n    });\n    this.uppy.removePreProcessor(_classPrivateFieldLooseBase(this, _setCompanionHeaders)[_setCompanionHeaders]);\n    this.uppy.removeUploader(this.upload);\n  }\n\n}\nAwsS3Multipart.VERSION = packageJson.version;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@uppy/aws-s3-multipart/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/AuthError.js":
/*!**************************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/AuthError.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\nclass AuthError extends Error {\n  constructor() {\n    super('Authorization required');\n    this.name = 'AuthError';\n    this.isAuthError = true;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvQXV0aEVycm9yLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsaUVBQWUsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B1cHB5L2NvbXBhbmlvbi1jbGllbnQvbGliL0F1dGhFcnJvci5qcz9hYTIxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcignQXV0aG9yaXphdGlvbiByZXF1aXJlZCcpO1xuICAgIHRoaXMubmFtZSA9ICdBdXRoRXJyb3InO1xuICAgIHRoaXMuaXNBdXRoRXJyb3IgPSB0cnVlO1xuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXV0aEVycm9yOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/AuthError.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/Provider.js":
/*!*************************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/Provider.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Provider)\n/* harmony export */ });\n/* harmony import */ var _RequestClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestClient.js */ \"./node_modules/@uppy/companion-client/lib/RequestClient.js\");\n/* harmony import */ var _tokenStorage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tokenStorage.js */ \"./node_modules/@uppy/companion-client/lib/tokenStorage.js\");\n\n\n\n\n\nconst getName = id => {\n  return id.split('-').map(s => s.charAt(0).toUpperCase() + s.slice(1)).join(' ');\n};\n\nclass Provider extends _RequestClient_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.provider = opts.provider;\n    this.id = this.provider;\n    this.name = this.opts.name || getName(this.id);\n    this.pluginId = this.opts.pluginId;\n    this.tokenKey = `companion-${this.pluginId}-auth-token`;\n    this.companionKeysParams = this.opts.companionKeysParams;\n    this.preAuthToken = null;\n  }\n\n  async headers() {\n    const [headers, token] = await Promise.all([super.headers(), this.getAuthToken()]);\n    const authHeaders = {};\n\n    if (token) {\n      authHeaders['uppy-auth-token'] = token;\n    }\n\n    if (this.companionKeysParams) {\n      authHeaders['uppy-credentials-params'] = btoa(JSON.stringify({\n        params: this.companionKeysParams\n      }));\n    }\n\n    return { ...headers,\n      ...authHeaders\n    };\n  }\n\n  onReceiveResponse(response) {\n    super.onReceiveResponse(response);\n    const plugin = this.uppy.getPlugin(this.pluginId);\n    const oldAuthenticated = plugin.getPluginState().authenticated;\n    const authenticated = oldAuthenticated ? response.status !== 401 : response.status < 400;\n    plugin.setPluginState({\n      authenticated\n    });\n    return response;\n  }\n\n  setAuthToken(token) {\n    return this.uppy.getPlugin(this.pluginId).storage.setItem(this.tokenKey, token);\n  }\n\n  getAuthToken() {\n    return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey);\n  }\n  /**\n   * Ensure we have a preauth token if necessary. Attempts to fetch one if we don't,\n   * or rejects if loading one fails.\n   */\n\n\n  async ensurePreAuth() {\n    if (this.companionKeysParams && !this.preAuthToken) {\n      await this.fetchPreAuthToken();\n\n      if (!this.preAuthToken) {\n        throw new Error('Could not load authentication data required for third-party login. Please try again later.');\n      }\n    }\n  }\n\n  authUrl(queries) {\n    if (queries === void 0) {\n      queries = {};\n    }\n\n    const params = new URLSearchParams(queries);\n\n    if (this.preAuthToken) {\n      params.set('uppyPreAuthToken', this.preAuthToken);\n    }\n\n    return `${this.hostname}/${this.id}/connect?${params}`;\n  }\n\n  fileUrl(id) {\n    return `${this.hostname}/${this.id}/get/${id}`;\n  }\n\n  async fetchPreAuthToken() {\n    if (!this.companionKeysParams) {\n      return;\n    }\n\n    try {\n      const res = await this.post(`${this.id}/preauth/`, {\n        params: this.companionKeysParams\n      });\n      this.preAuthToken = res.token;\n    } catch (err) {\n      this.uppy.log(`[CompanionClient] unable to fetch preAuthToken ${err}`, 'warning');\n    }\n  }\n\n  list(directory) {\n    return this.get(`${this.id}/list/${directory || ''}`);\n  }\n\n  logout() {\n    return this.get(`${this.id}/logout`).then(response => Promise.all([response, this.uppy.getPlugin(this.pluginId).storage.removeItem(this.tokenKey)])).then(_ref => {\n      let [response] = _ref;\n      return response;\n    });\n  }\n\n  static initPlugin(plugin, opts, defaultOpts) {\n    /* eslint-disable no-param-reassign */\n    plugin.type = 'acquirer';\n    plugin.files = [];\n\n    if (defaultOpts) {\n      plugin.opts = { ...defaultOpts,\n        ...opts\n      };\n    }\n\n    if (opts.serverUrl || opts.serverPattern) {\n      throw new Error('`serverUrl` and `serverPattern` have been renamed to `companionUrl` and `companionAllowedHosts` respectively in the 0.30.5 release. Please consult the docs (for example, https://uppy.io/docs/instagram/ for the Instagram plugin) and use the updated options.`');\n    }\n\n    if (opts.companionAllowedHosts) {\n      const pattern = opts.companionAllowedHosts; // validate companionAllowedHosts param\n\n      if (typeof pattern !== 'string' && !Array.isArray(pattern) && !(pattern instanceof RegExp)) {\n        throw new TypeError(`${plugin.id}: the option \"companionAllowedHosts\" must be one of string, Array, RegExp`);\n      }\n\n      plugin.opts.companionAllowedHosts = pattern;\n    } else if (/^(?!https?:\\/\\/).*$/i.test(opts.companionUrl)) {\n      // does not start with https://\n      plugin.opts.companionAllowedHosts = `https://${opts.companionUrl.replace(/^\\/\\//, '')}`;\n    } else {\n      plugin.opts.companionAllowedHosts = new URL(opts.companionUrl).origin;\n    }\n\n    plugin.storage = plugin.opts.storage || _tokenStorage_js__WEBPACK_IMPORTED_MODULE_1__;\n    /* eslint-enable no-param-reassign */\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvUHJvdmlkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRWtDO0FBQ0c7O0FBRWxEO0FBQ0E7QUFDQTs7QUFFZSx1QkFBdUIseURBQWE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGNBQWM7QUFDL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLGNBQWMsR0FBRyxRQUFRLFdBQVcsT0FBTztBQUN6RDs7QUFFQTtBQUNBLGNBQWMsY0FBYyxHQUFHLFFBQVEsT0FBTyxHQUFHO0FBQ2pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUNBQXFDLFFBQVE7QUFDN0M7QUFDQSxPQUFPO0FBQ1A7QUFDQSxNQUFNO0FBQ04sc0VBQXNFLElBQUk7QUFDMUU7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QixRQUFRLFFBQVEsZ0JBQWdCO0FBQ3ZEOztBQUVBO0FBQ0EsdUJBQXVCLFFBQVE7QUFDL0I7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0RBQWtEOztBQUVsRDtBQUNBLCtCQUErQixVQUFVO0FBQ3pDOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EscURBQXFELHVDQUF1QztBQUM1RixNQUFNO0FBQ047QUFDQTs7QUFFQSw0Q0FBNEMsNkNBQVk7QUFDeEQ7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B1cHB5L2NvbXBhbmlvbi1jbGllbnQvbGliL1Byb3ZpZGVyLmpzPzkzYjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgUmVxdWVzdENsaWVudCBmcm9tICcuL1JlcXVlc3RDbGllbnQuanMnO1xuaW1wb3J0ICogYXMgdG9rZW5TdG9yYWdlIGZyb20gJy4vdG9rZW5TdG9yYWdlLmpzJztcblxuY29uc3QgZ2V0TmFtZSA9IGlkID0+IHtcbiAgcmV0dXJuIGlkLnNwbGl0KCctJykubWFwKHMgPT4gcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSkpLmpvaW4oJyAnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb3ZpZGVyIGV4dGVuZHMgUmVxdWVzdENsaWVudCB7XG4gIGNvbnN0cnVjdG9yKHVwcHksIG9wdHMpIHtcbiAgICBzdXBlcih1cHB5LCBvcHRzKTtcbiAgICB0aGlzLnByb3ZpZGVyID0gb3B0cy5wcm92aWRlcjtcbiAgICB0aGlzLmlkID0gdGhpcy5wcm92aWRlcjtcbiAgICB0aGlzLm5hbWUgPSB0aGlzLm9wdHMubmFtZSB8fCBnZXROYW1lKHRoaXMuaWQpO1xuICAgIHRoaXMucGx1Z2luSWQgPSB0aGlzLm9wdHMucGx1Z2luSWQ7XG4gICAgdGhpcy50b2tlbktleSA9IGBjb21wYW5pb24tJHt0aGlzLnBsdWdpbklkfS1hdXRoLXRva2VuYDtcbiAgICB0aGlzLmNvbXBhbmlvbktleXNQYXJhbXMgPSB0aGlzLm9wdHMuY29tcGFuaW9uS2V5c1BhcmFtcztcbiAgICB0aGlzLnByZUF1dGhUb2tlbiA9IG51bGw7XG4gIH1cblxuICBhc3luYyBoZWFkZXJzKCkge1xuICAgIGNvbnN0IFtoZWFkZXJzLCB0b2tlbl0gPSBhd2FpdCBQcm9taXNlLmFsbChbc3VwZXIuaGVhZGVycygpLCB0aGlzLmdldEF1dGhUb2tlbigpXSk7XG4gICAgY29uc3QgYXV0aEhlYWRlcnMgPSB7fTtcblxuICAgIGlmICh0b2tlbikge1xuICAgICAgYXV0aEhlYWRlcnNbJ3VwcHktYXV0aC10b2tlbiddID0gdG9rZW47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuY29tcGFuaW9uS2V5c1BhcmFtcykge1xuICAgICAgYXV0aEhlYWRlcnNbJ3VwcHktY3JlZGVudGlhbHMtcGFyYW1zJ10gPSBidG9hKEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcGFyYW1zOiB0aGlzLmNvbXBhbmlvbktleXNQYXJhbXNcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICByZXR1cm4geyAuLi5oZWFkZXJzLFxuICAgICAgLi4uYXV0aEhlYWRlcnNcbiAgICB9O1xuICB9XG5cbiAgb25SZWNlaXZlUmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICBzdXBlci5vblJlY2VpdmVSZXNwb25zZShyZXNwb25zZSk7XG4gICAgY29uc3QgcGx1Z2luID0gdGhpcy51cHB5LmdldFBsdWdpbih0aGlzLnBsdWdpbklkKTtcbiAgICBjb25zdCBvbGRBdXRoZW50aWNhdGVkID0gcGx1Z2luLmdldFBsdWdpblN0YXRlKCkuYXV0aGVudGljYXRlZDtcbiAgICBjb25zdCBhdXRoZW50aWNhdGVkID0gb2xkQXV0aGVudGljYXRlZCA/IHJlc3BvbnNlLnN0YXR1cyAhPT0gNDAxIDogcmVzcG9uc2Uuc3RhdHVzIDwgNDAwO1xuICAgIHBsdWdpbi5zZXRQbHVnaW5TdGF0ZSh7XG4gICAgICBhdXRoZW50aWNhdGVkXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgc2V0QXV0aFRva2VuKHRva2VuKSB7XG4gICAgcmV0dXJuIHRoaXMudXBweS5nZXRQbHVnaW4odGhpcy5wbHVnaW5JZCkuc3RvcmFnZS5zZXRJdGVtKHRoaXMudG9rZW5LZXksIHRva2VuKTtcbiAgfVxuXG4gIGdldEF1dGhUb2tlbigpIHtcbiAgICByZXR1cm4gdGhpcy51cHB5LmdldFBsdWdpbih0aGlzLnBsdWdpbklkKS5zdG9yYWdlLmdldEl0ZW0odGhpcy50b2tlbktleSk7XG4gIH1cbiAgLyoqXG4gICAqIEVuc3VyZSB3ZSBoYXZlIGEgcHJlYXV0aCB0b2tlbiBpZiBuZWNlc3NhcnkuIEF0dGVtcHRzIHRvIGZldGNoIG9uZSBpZiB3ZSBkb24ndCxcbiAgICogb3IgcmVqZWN0cyBpZiBsb2FkaW5nIG9uZSBmYWlscy5cbiAgICovXG5cblxuICBhc3luYyBlbnN1cmVQcmVBdXRoKCkge1xuICAgIGlmICh0aGlzLmNvbXBhbmlvbktleXNQYXJhbXMgJiYgIXRoaXMucHJlQXV0aFRva2VuKSB7XG4gICAgICBhd2FpdCB0aGlzLmZldGNoUHJlQXV0aFRva2VuKCk7XG5cbiAgICAgIGlmICghdGhpcy5wcmVBdXRoVG9rZW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgbG9hZCBhdXRoZW50aWNhdGlvbiBkYXRhIHJlcXVpcmVkIGZvciB0aGlyZC1wYXJ0eSBsb2dpbi4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4nKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhdXRoVXJsKHF1ZXJpZXMpIHtcbiAgICBpZiAocXVlcmllcyA9PT0gdm9pZCAwKSB7XG4gICAgICBxdWVyaWVzID0ge307XG4gICAgfVxuXG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyaWVzKTtcblxuICAgIGlmICh0aGlzLnByZUF1dGhUb2tlbikge1xuICAgICAgcGFyYW1zLnNldCgndXBweVByZUF1dGhUb2tlbicsIHRoaXMucHJlQXV0aFRva2VuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYCR7dGhpcy5ob3N0bmFtZX0vJHt0aGlzLmlkfS9jb25uZWN0PyR7cGFyYW1zfWA7XG4gIH1cblxuICBmaWxlVXJsKGlkKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuaG9zdG5hbWV9LyR7dGhpcy5pZH0vZ2V0LyR7aWR9YDtcbiAgfVxuXG4gIGFzeW5jIGZldGNoUHJlQXV0aFRva2VuKCkge1xuICAgIGlmICghdGhpcy5jb21wYW5pb25LZXlzUGFyYW1zKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMucG9zdChgJHt0aGlzLmlkfS9wcmVhdXRoL2AsIHtcbiAgICAgICAgcGFyYW1zOiB0aGlzLmNvbXBhbmlvbktleXNQYXJhbXNcbiAgICAgIH0pO1xuICAgICAgdGhpcy5wcmVBdXRoVG9rZW4gPSByZXMudG9rZW47XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICB0aGlzLnVwcHkubG9nKGBbQ29tcGFuaW9uQ2xpZW50XSB1bmFibGUgdG8gZmV0Y2ggcHJlQXV0aFRva2VuICR7ZXJyfWAsICd3YXJuaW5nJyk7XG4gICAgfVxuICB9XG5cbiAgbGlzdChkaXJlY3RvcnkpIHtcbiAgICByZXR1cm4gdGhpcy5nZXQoYCR7dGhpcy5pZH0vbGlzdC8ke2RpcmVjdG9yeSB8fCAnJ31gKTtcbiAgfVxuXG4gIGxvZ291dCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXQoYCR7dGhpcy5pZH0vbG9nb3V0YCkudGhlbihyZXNwb25zZSA9PiBQcm9taXNlLmFsbChbcmVzcG9uc2UsIHRoaXMudXBweS5nZXRQbHVnaW4odGhpcy5wbHVnaW5JZCkuc3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMudG9rZW5LZXkpXSkpLnRoZW4oX3JlZiA9PiB7XG4gICAgICBsZXQgW3Jlc3BvbnNlXSA9IF9yZWY7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgaW5pdFBsdWdpbihwbHVnaW4sIG9wdHMsIGRlZmF1bHRPcHRzKSB7XG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbiAgICBwbHVnaW4udHlwZSA9ICdhY3F1aXJlcic7XG4gICAgcGx1Z2luLmZpbGVzID0gW107XG5cbiAgICBpZiAoZGVmYXVsdE9wdHMpIHtcbiAgICAgIHBsdWdpbi5vcHRzID0geyAuLi5kZWZhdWx0T3B0cyxcbiAgICAgICAgLi4ub3B0c1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAob3B0cy5zZXJ2ZXJVcmwgfHwgb3B0cy5zZXJ2ZXJQYXR0ZXJuKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2BzZXJ2ZXJVcmxgIGFuZCBgc2VydmVyUGF0dGVybmAgaGF2ZSBiZWVuIHJlbmFtZWQgdG8gYGNvbXBhbmlvblVybGAgYW5kIGBjb21wYW5pb25BbGxvd2VkSG9zdHNgIHJlc3BlY3RpdmVseSBpbiB0aGUgMC4zMC41IHJlbGVhc2UuIFBsZWFzZSBjb25zdWx0IHRoZSBkb2NzIChmb3IgZXhhbXBsZSwgaHR0cHM6Ly91cHB5LmlvL2RvY3MvaW5zdGFncmFtLyBmb3IgdGhlIEluc3RhZ3JhbSBwbHVnaW4pIGFuZCB1c2UgdGhlIHVwZGF0ZWQgb3B0aW9ucy5gJyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdHMuY29tcGFuaW9uQWxsb3dlZEhvc3RzKSB7XG4gICAgICBjb25zdCBwYXR0ZXJuID0gb3B0cy5jb21wYW5pb25BbGxvd2VkSG9zdHM7IC8vIHZhbGlkYXRlIGNvbXBhbmlvbkFsbG93ZWRIb3N0cyBwYXJhbVxuXG4gICAgICBpZiAodHlwZW9mIHBhdHRlcm4gIT09ICdzdHJpbmcnICYmICFBcnJheS5pc0FycmF5KHBhdHRlcm4pICYmICEocGF0dGVybiBpbnN0YW5jZW9mIFJlZ0V4cCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHtwbHVnaW4uaWR9OiB0aGUgb3B0aW9uIFwiY29tcGFuaW9uQWxsb3dlZEhvc3RzXCIgbXVzdCBiZSBvbmUgb2Ygc3RyaW5nLCBBcnJheSwgUmVnRXhwYCk7XG4gICAgICB9XG5cbiAgICAgIHBsdWdpbi5vcHRzLmNvbXBhbmlvbkFsbG93ZWRIb3N0cyA9IHBhdHRlcm47XG4gICAgfSBlbHNlIGlmICgvXig/IWh0dHBzPzpcXC9cXC8pLiokL2kudGVzdChvcHRzLmNvbXBhbmlvblVybCkpIHtcbiAgICAgIC8vIGRvZXMgbm90IHN0YXJ0IHdpdGggaHR0cHM6Ly9cbiAgICAgIHBsdWdpbi5vcHRzLmNvbXBhbmlvbkFsbG93ZWRIb3N0cyA9IGBodHRwczovLyR7b3B0cy5jb21wYW5pb25VcmwucmVwbGFjZSgvXlxcL1xcLy8sICcnKX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICBwbHVnaW4ub3B0cy5jb21wYW5pb25BbGxvd2VkSG9zdHMgPSBuZXcgVVJMKG9wdHMuY29tcGFuaW9uVXJsKS5vcmlnaW47XG4gICAgfVxuXG4gICAgcGx1Z2luLnN0b3JhZ2UgPSBwbHVnaW4ub3B0cy5zdG9yYWdlIHx8IHRva2VuU3RvcmFnZTtcbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLXBhcmFtLXJlYXNzaWduICovXG4gIH1cblxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/Provider.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/RequestClient.js":
/*!******************************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/RequestClient.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RequestClient)\n/* harmony export */ });\n/* harmony import */ var _uppy_utils_lib_fetchWithNetworkError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uppy/utils/lib/fetchWithNetworkError */ \"./node_modules/@uppy/utils/lib/fetchWithNetworkError.js\");\n/* harmony import */ var _uppy_utils_lib_ErrorWithCause__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @uppy/utils/lib/ErrorWithCause */ \"./node_modules/@uppy/utils/lib/ErrorWithCause.js\");\n/* harmony import */ var _AuthError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthError.js */ \"./node_modules/@uppy/companion-client/lib/AuthError.js\");\n\n\nlet _Symbol$for;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\n\n\n\nconst packageJson = {\n  \"version\": \"3.1.1\"\n}; // Remove the trailing slash so we can always safely append /xyz.\n\nfunction stripSlash(url) {\n  return url.replace(/\\/$/, '');\n}\n\nasync function handleJSONResponse(res) {\n  if (res.status === 401) {\n    throw new _AuthError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  }\n\n  const jsonPromise = res.json();\n\n  if (res.ok) {\n    return jsonPromise;\n  }\n\n  let errMsg = `Failed request with status: ${res.status}. ${res.statusText}`;\n\n  try {\n    const errData = await jsonPromise;\n    errMsg = errData.message ? `${errMsg} message: ${errData.message}` : errMsg;\n    errMsg = errData.requestId ? `${errMsg} request-Id: ${errData.requestId}` : errMsg;\n  } catch {\n    /* if the response contains invalid JSON, let's ignore the error */\n  }\n\n  throw new Error(errMsg);\n} // todo pull out into core instead?\n\n\nconst allowedHeadersCache = new Map();\n\nvar _companionHeaders = /*#__PURE__*/_classPrivateFieldLooseKey(\"companionHeaders\");\n\nvar _getUrl = /*#__PURE__*/_classPrivateFieldLooseKey(\"getUrl\");\n\nvar _request = /*#__PURE__*/_classPrivateFieldLooseKey(\"request\");\n\n_Symbol$for = Symbol.for('uppy test: getCompanionHeaders');\nclass RequestClient {\n  constructor(uppy, opts) {\n    Object.defineProperty(this, _request, {\n      value: _request2\n    });\n    Object.defineProperty(this, _getUrl, {\n      value: _getUrl2\n    });\n    Object.defineProperty(this, _companionHeaders, {\n      writable: true,\n      value: void 0\n    });\n    this.uppy = uppy;\n    this.opts = opts;\n    this.onReceiveResponse = this.onReceiveResponse.bind(this);\n    _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders] = opts == null ? void 0 : opts.companionHeaders;\n  }\n\n  setCompanionHeaders(headers) {\n    _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders] = headers;\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders];\n  }\n\n  get hostname() {\n    const {\n      companion\n    } = this.uppy.getState();\n    const host = this.opts.companionUrl;\n    return stripSlash(companion && companion[host] ? companion[host] : host);\n  }\n\n  async headers() {\n    const defaultHeaders = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Uppy-Versions': `@uppy/companion-client=${RequestClient.VERSION}`\n    };\n    return { ...defaultHeaders,\n      ..._classPrivateFieldLooseBase(this, _companionHeaders)[_companionHeaders]\n    };\n  }\n\n  onReceiveResponse(_ref) {\n    let {\n      headers\n    } = _ref;\n    const state = this.uppy.getState();\n    const companion = state.companion || {};\n    const host = this.opts.companionUrl; // Store the self-identified domain name for the Companion instance we just hit.\n\n    if (headers.has('i-am') && headers.get('i-am') !== companion[host]) {\n      this.uppy.setState({\n        companion: { ...companion,\n          [host]: headers.get('i-am')\n        }\n      });\n    }\n  }\n\n  /*\n    Preflight was added to avoid breaking change between older Companion-client versions and\n    newer Companion versions and vice-versa. Usually the break will manifest via CORS errors because a\n    version of companion-client could be sending certain headers to a version of Companion server that\n    does not support those headers. In which case, the default preflight would lead to CORS.\n    So to avoid those errors, we do preflight ourselves, to see what headers the Companion server\n    we are communicating with allows. And based on that, companion-client knows what headers to\n    send and what headers to not send.\n     The preflight only happens once throughout the life-cycle of a certain\n    Companion-client <-> Companion-server pair (allowedHeadersCache).\n    Subsequent requests use the cached result of the preflight.\n    However if there is an error retrieving the allowed headers, we will try again next time\n  */\n  async preflight(path) {\n    const allowedHeadersCached = allowedHeadersCache.get(this.hostname);\n    if (allowedHeadersCached != null) return allowedHeadersCached;\n    const fallbackAllowedHeaders = ['accept', 'content-type', 'uppy-auth-token'];\n\n    const promise = (async () => {\n      try {\n        const response = await fetch(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n          method: 'OPTIONS'\n        });\n        const header = response.headers.get('access-control-allow-headers');\n\n        if (header == null || header === '*') {\n          allowedHeadersCache.set(this.hostname, fallbackAllowedHeaders);\n          return fallbackAllowedHeaders;\n        }\n\n        this.uppy.log(`[CompanionClient] adding allowed preflight headers to companion cache: ${this.hostname} ${header}`);\n        const allowedHeaders = header.split(',').map(headerName => headerName.trim().toLowerCase());\n        allowedHeadersCache.set(this.hostname, allowedHeaders);\n        return allowedHeaders;\n      } catch (err) {\n        this.uppy.log(`[CompanionClient] unable to make preflight request ${err}`, 'warning'); // If the user gets a network error or similar, we should try preflight\n        // again next time, or else we might get incorrect behaviour.\n\n        allowedHeadersCache.delete(this.hostname); // re-fetch next time\n\n        return fallbackAllowedHeaders;\n      }\n    })();\n\n    allowedHeadersCache.set(this.hostname, promise);\n    return promise;\n  }\n\n  async preflightAndHeaders(path) {\n    const [allowedHeaders, headers] = await Promise.all([this.preflight(path), this.headers()]); // filter to keep only allowed Headers\n\n    return Object.fromEntries(Object.entries(headers).filter(_ref2 => {\n      let [header] = _ref2;\n\n      if (!allowedHeaders.includes(header.toLowerCase())) {\n        this.uppy.log(`[CompanionClient] excluding disallowed header ${header}`);\n        return false;\n      }\n\n      return true;\n    }));\n  }\n\n  async get(path, options) {\n    if (options === void 0) {\n      options = undefined;\n    }\n\n    // TODO: remove boolean support for options that was added for backward compatibility.\n    // eslint-disable-next-line no-param-reassign\n    if (typeof options === 'boolean') options = {\n      skipPostResponse: options\n    };\n    return _classPrivateFieldLooseBase(this, _request)[_request]({ ...options,\n      path\n    });\n  }\n\n  async post(path, data, options) {\n    if (options === void 0) {\n      options = undefined;\n    }\n\n    // TODO: remove boolean support for options that was added for backward compatibility.\n    // eslint-disable-next-line no-param-reassign\n    if (typeof options === 'boolean') options = {\n      skipPostResponse: options\n    };\n    return _classPrivateFieldLooseBase(this, _request)[_request]({ ...options,\n      path,\n      method: 'POST',\n      data\n    });\n  }\n\n  async delete(path, data, options) {\n    if (data === void 0) {\n      data = undefined;\n    }\n\n    // TODO: remove boolean support for options that was added for backward compatibility.\n    // eslint-disable-next-line no-param-reassign\n    if (typeof options === 'boolean') options = {\n      skipPostResponse: options\n    };\n    return _classPrivateFieldLooseBase(this, _request)[_request]({ ...options,\n      path,\n      method: 'DELETE',\n      data\n    });\n  }\n\n}\n\nfunction _getUrl2(url) {\n  if (/^(https?:|)\\/\\//.test(url)) {\n    return url;\n  }\n\n  return `${this.hostname}/${url}`;\n}\n\nasync function _request2(_ref3) {\n  let {\n    path,\n    method = 'GET',\n    data,\n    skipPostResponse,\n    signal\n  } = _ref3;\n\n  try {\n    const headers = await this.preflightAndHeaders(path);\n    const response = await (0,_uppy_utils_lib_fetchWithNetworkError__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path), {\n      method,\n      signal,\n      headers,\n      credentials: this.opts.companionCookiesRule || 'same-origin',\n      body: data ? JSON.stringify(data) : null\n    });\n    if (!skipPostResponse) this.onReceiveResponse(response);\n    return handleJSONResponse(response);\n  } catch (err) {\n    if (err != null && err.isAuthError) throw err;\n    throw new _uppy_utils_lib_ErrorWithCause__WEBPACK_IMPORTED_MODULE_1__[\"default\"](`Could not ${method} ${_classPrivateFieldLooseBase(this, _getUrl)[_getUrl](path)}`, {\n      cause: err\n    });\n  }\n}\n\nRequestClient.VERSION = packageJson.version;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvUmVxdWVzdENsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBRWI7O0FBRUEsNkRBQTZELG1FQUFtRSx5RUFBeUU7O0FBRXpNOztBQUVBLDRDQUE0Qzs7QUFFOEI7QUFDZDtBQUNyQjtBQUN2QztBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWMscURBQVM7QUFDdkI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhDQUE4QyxXQUFXLElBQUksZUFBZTs7QUFFNUU7QUFDQTtBQUNBLGtDQUFrQyxRQUFRLFdBQVcsZ0JBQWdCO0FBQ3JFLG9DQUFvQyxRQUFRLGNBQWMsa0JBQWtCO0FBQzVFLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7O0FBR0Y7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxzQkFBc0I7QUFDdkU7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EseUNBQXlDOztBQUV6QztBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdHQUFnRyxlQUFlLEVBQUUsT0FBTztBQUN4SDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1IsNEVBQTRFLElBQUksZUFBZTtBQUMvRjs7QUFFQSxtREFBbUQ7O0FBRW5EO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlHQUFpRzs7QUFFakc7QUFDQTs7QUFFQTtBQUNBLHVFQUF1RSxPQUFPO0FBQzlFO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRTtBQUNuRTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGNBQWMsR0FBRyxJQUFJO0FBQ2pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBO0FBQ0EsMkJBQTJCLGlGQUFxQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxjQUFjLHNFQUFjLGNBQWMsUUFBUSxFQUFFLDBEQUEwRDtBQUM5RztBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvUmVxdWVzdENsaWVudC5qcz83NzMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubGV0IF9TeW1ib2wkZm9yO1xuXG5mdW5jdGlvbiBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UocmVjZWl2ZXIsIHByaXZhdGVLZXkpIHsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocmVjZWl2ZXIsIHByaXZhdGVLZXkpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJhdHRlbXB0ZWQgdG8gdXNlIHByaXZhdGUgZmllbGQgb24gbm9uLWluc3RhbmNlXCIpOyB9IHJldHVybiByZWNlaXZlcjsgfVxuXG52YXIgaWQgPSAwO1xuXG5mdW5jdGlvbiBfY2xhc3NQcml2YXRlRmllbGRMb29zZUtleShuYW1lKSB7IHJldHVybiBcIl9fcHJpdmF0ZV9cIiArIGlkKysgKyBcIl9cIiArIG5hbWU7IH1cblxuaW1wb3J0IGZldGNoV2l0aE5ldHdvcmtFcnJvciBmcm9tICdAdXBweS91dGlscy9saWIvZmV0Y2hXaXRoTmV0d29ya0Vycm9yJztcbmltcG9ydCBFcnJvcldpdGhDYXVzZSBmcm9tICdAdXBweS91dGlscy9saWIvRXJyb3JXaXRoQ2F1c2UnO1xuaW1wb3J0IEF1dGhFcnJvciBmcm9tICcuL0F1dGhFcnJvci5qcyc7XG5jb25zdCBwYWNrYWdlSnNvbiA9IHtcbiAgXCJ2ZXJzaW9uXCI6IFwiMy4xLjFcIlxufTsgLy8gUmVtb3ZlIHRoZSB0cmFpbGluZyBzbGFzaCBzbyB3ZSBjYW4gYWx3YXlzIHNhZmVseSBhcHBlbmQgL3h5ei5cblxuZnVuY3Rpb24gc3RyaXBTbGFzaCh1cmwpIHtcbiAgcmV0dXJuIHVybC5yZXBsYWNlKC9cXC8kLywgJycpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVKU09OUmVzcG9uc2UocmVzKSB7XG4gIGlmIChyZXMuc3RhdHVzID09PSA0MDEpIHtcbiAgICB0aHJvdyBuZXcgQXV0aEVycm9yKCk7XG4gIH1cblxuICBjb25zdCBqc29uUHJvbWlzZSA9IHJlcy5qc29uKCk7XG5cbiAgaWYgKHJlcy5vaykge1xuICAgIHJldHVybiBqc29uUHJvbWlzZTtcbiAgfVxuXG4gIGxldCBlcnJNc2cgPSBgRmFpbGVkIHJlcXVlc3Qgd2l0aCBzdGF0dXM6ICR7cmVzLnN0YXR1c30uICR7cmVzLnN0YXR1c1RleHR9YDtcblxuICB0cnkge1xuICAgIGNvbnN0IGVyckRhdGEgPSBhd2FpdCBqc29uUHJvbWlzZTtcbiAgICBlcnJNc2cgPSBlcnJEYXRhLm1lc3NhZ2UgPyBgJHtlcnJNc2d9IG1lc3NhZ2U6ICR7ZXJyRGF0YS5tZXNzYWdlfWAgOiBlcnJNc2c7XG4gICAgZXJyTXNnID0gZXJyRGF0YS5yZXF1ZXN0SWQgPyBgJHtlcnJNc2d9IHJlcXVlc3QtSWQ6ICR7ZXJyRGF0YS5yZXF1ZXN0SWR9YCA6IGVyck1zZztcbiAgfSBjYXRjaCB7XG4gICAgLyogaWYgdGhlIHJlc3BvbnNlIGNvbnRhaW5zIGludmFsaWQgSlNPTiwgbGV0J3MgaWdub3JlIHRoZSBlcnJvciAqL1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKGVyck1zZyk7XG59IC8vIHRvZG8gcHVsbCBvdXQgaW50byBjb3JlIGluc3RlYWQ/XG5cblxuY29uc3QgYWxsb3dlZEhlYWRlcnNDYWNoZSA9IG5ldyBNYXAoKTtcblxudmFyIF9jb21wYW5pb25IZWFkZXJzID0gLyojX19QVVJFX18qL19jbGFzc1ByaXZhdGVGaWVsZExvb3NlS2V5KFwiY29tcGFuaW9uSGVhZGVyc1wiKTtcblxudmFyIF9nZXRVcmwgPSAvKiNfX1BVUkVfXyovX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkoXCJnZXRVcmxcIik7XG5cbnZhciBfcmVxdWVzdCA9IC8qI19fUFVSRV9fKi9fY2xhc3NQcml2YXRlRmllbGRMb29zZUtleShcInJlcXVlc3RcIik7XG5cbl9TeW1ib2wkZm9yID0gU3ltYm9sLmZvcigndXBweSB0ZXN0OiBnZXRDb21wYW5pb25IZWFkZXJzJyk7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXF1ZXN0Q2xpZW50IHtcbiAgY29uc3RydWN0b3IodXBweSwgb3B0cykge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfcmVxdWVzdCwge1xuICAgICAgdmFsdWU6IF9yZXF1ZXN0MlxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfZ2V0VXJsLCB7XG4gICAgICB2YWx1ZTogX2dldFVybDJcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgX2NvbXBhbmlvbkhlYWRlcnMsIHtcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IHZvaWQgMFxuICAgIH0pO1xuICAgIHRoaXMudXBweSA9IHVwcHk7XG4gICAgdGhpcy5vcHRzID0gb3B0cztcbiAgICB0aGlzLm9uUmVjZWl2ZVJlc3BvbnNlID0gdGhpcy5vblJlY2VpdmVSZXNwb25zZS5iaW5kKHRoaXMpO1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfY29tcGFuaW9uSGVhZGVycylbX2NvbXBhbmlvbkhlYWRlcnNdID0gb3B0cyA9PSBudWxsID8gdm9pZCAwIDogb3B0cy5jb21wYW5pb25IZWFkZXJzO1xuICB9XG5cbiAgc2V0Q29tcGFuaW9uSGVhZGVycyhoZWFkZXJzKSB7XG4gICAgX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9jb21wYW5pb25IZWFkZXJzKVtfY29tcGFuaW9uSGVhZGVyc10gPSBoZWFkZXJzO1xuICB9XG5cbiAgW19TeW1ib2wkZm9yXSgpIHtcbiAgICByZXR1cm4gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9jb21wYW5pb25IZWFkZXJzKVtfY29tcGFuaW9uSGVhZGVyc107XG4gIH1cblxuICBnZXQgaG9zdG5hbWUoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY29tcGFuaW9uXG4gICAgfSA9IHRoaXMudXBweS5nZXRTdGF0ZSgpO1xuICAgIGNvbnN0IGhvc3QgPSB0aGlzLm9wdHMuY29tcGFuaW9uVXJsO1xuICAgIHJldHVybiBzdHJpcFNsYXNoKGNvbXBhbmlvbiAmJiBjb21wYW5pb25baG9zdF0gPyBjb21wYW5pb25baG9zdF0gOiBob3N0KTtcbiAgfVxuXG4gIGFzeW5jIGhlYWRlcnMoKSB7XG4gICAgY29uc3QgZGVmYXVsdEhlYWRlcnMgPSB7XG4gICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAnVXBweS1WZXJzaW9ucyc6IGBAdXBweS9jb21wYW5pb24tY2xpZW50PSR7UmVxdWVzdENsaWVudC5WRVJTSU9OfWBcbiAgICB9O1xuICAgIHJldHVybiB7IC4uLmRlZmF1bHRIZWFkZXJzLFxuICAgICAgLi4uX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9jb21wYW5pb25IZWFkZXJzKVtfY29tcGFuaW9uSGVhZGVyc11cbiAgICB9O1xuICB9XG5cbiAgb25SZWNlaXZlUmVzcG9uc2UoX3JlZikge1xuICAgIGxldCB7XG4gICAgICBoZWFkZXJzXG4gICAgfSA9IF9yZWY7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLnVwcHkuZ2V0U3RhdGUoKTtcbiAgICBjb25zdCBjb21wYW5pb24gPSBzdGF0ZS5jb21wYW5pb24gfHwge307XG4gICAgY29uc3QgaG9zdCA9IHRoaXMub3B0cy5jb21wYW5pb25Vcmw7IC8vIFN0b3JlIHRoZSBzZWxmLWlkZW50aWZpZWQgZG9tYWluIG5hbWUgZm9yIHRoZSBDb21wYW5pb24gaW5zdGFuY2Ugd2UganVzdCBoaXQuXG5cbiAgICBpZiAoaGVhZGVycy5oYXMoJ2ktYW0nKSAmJiBoZWFkZXJzLmdldCgnaS1hbScpICE9PSBjb21wYW5pb25baG9zdF0pIHtcbiAgICAgIHRoaXMudXBweS5zZXRTdGF0ZSh7XG4gICAgICAgIGNvbXBhbmlvbjogeyAuLi5jb21wYW5pb24sXG4gICAgICAgICAgW2hvc3RdOiBoZWFkZXJzLmdldCgnaS1hbScpXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAgUHJlZmxpZ2h0IHdhcyBhZGRlZCB0byBhdm9pZCBicmVha2luZyBjaGFuZ2UgYmV0d2VlbiBvbGRlciBDb21wYW5pb24tY2xpZW50IHZlcnNpb25zIGFuZFxuICAgIG5ld2VyIENvbXBhbmlvbiB2ZXJzaW9ucyBhbmQgdmljZS12ZXJzYS4gVXN1YWxseSB0aGUgYnJlYWsgd2lsbCBtYW5pZmVzdCB2aWEgQ09SUyBlcnJvcnMgYmVjYXVzZSBhXG4gICAgdmVyc2lvbiBvZiBjb21wYW5pb24tY2xpZW50IGNvdWxkIGJlIHNlbmRpbmcgY2VydGFpbiBoZWFkZXJzIHRvIGEgdmVyc2lvbiBvZiBDb21wYW5pb24gc2VydmVyIHRoYXRcbiAgICBkb2VzIG5vdCBzdXBwb3J0IHRob3NlIGhlYWRlcnMuIEluIHdoaWNoIGNhc2UsIHRoZSBkZWZhdWx0IHByZWZsaWdodCB3b3VsZCBsZWFkIHRvIENPUlMuXG4gICAgU28gdG8gYXZvaWQgdGhvc2UgZXJyb3JzLCB3ZSBkbyBwcmVmbGlnaHQgb3Vyc2VsdmVzLCB0byBzZWUgd2hhdCBoZWFkZXJzIHRoZSBDb21wYW5pb24gc2VydmVyXG4gICAgd2UgYXJlIGNvbW11bmljYXRpbmcgd2l0aCBhbGxvd3MuIEFuZCBiYXNlZCBvbiB0aGF0LCBjb21wYW5pb24tY2xpZW50IGtub3dzIHdoYXQgaGVhZGVycyB0b1xuICAgIHNlbmQgYW5kIHdoYXQgaGVhZGVycyB0byBub3Qgc2VuZC5cbiAgICAgVGhlIHByZWZsaWdodCBvbmx5IGhhcHBlbnMgb25jZSB0aHJvdWdob3V0IHRoZSBsaWZlLWN5Y2xlIG9mIGEgY2VydGFpblxuICAgIENvbXBhbmlvbi1jbGllbnQgPC0+IENvbXBhbmlvbi1zZXJ2ZXIgcGFpciAoYWxsb3dlZEhlYWRlcnNDYWNoZSkuXG4gICAgU3Vic2VxdWVudCByZXF1ZXN0cyB1c2UgdGhlIGNhY2hlZCByZXN1bHQgb2YgdGhlIHByZWZsaWdodC5cbiAgICBIb3dldmVyIGlmIHRoZXJlIGlzIGFuIGVycm9yIHJldHJpZXZpbmcgdGhlIGFsbG93ZWQgaGVhZGVycywgd2Ugd2lsbCB0cnkgYWdhaW4gbmV4dCB0aW1lXG4gICovXG4gIGFzeW5jIHByZWZsaWdodChwYXRoKSB7XG4gICAgY29uc3QgYWxsb3dlZEhlYWRlcnNDYWNoZWQgPSBhbGxvd2VkSGVhZGVyc0NhY2hlLmdldCh0aGlzLmhvc3RuYW1lKTtcbiAgICBpZiAoYWxsb3dlZEhlYWRlcnNDYWNoZWQgIT0gbnVsbCkgcmV0dXJuIGFsbG93ZWRIZWFkZXJzQ2FjaGVkO1xuICAgIGNvbnN0IGZhbGxiYWNrQWxsb3dlZEhlYWRlcnMgPSBbJ2FjY2VwdCcsICdjb250ZW50LXR5cGUnLCAndXBweS1hdXRoLXRva2VuJ107XG5cbiAgICBjb25zdCBwcm9taXNlID0gKGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9nZXRVcmwpW19nZXRVcmxdKHBhdGgpLCB7XG4gICAgICAgICAgbWV0aG9kOiAnT1BUSU9OUydcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdhY2Nlc3MtY29udHJvbC1hbGxvdy1oZWFkZXJzJyk7XG5cbiAgICAgICAgaWYgKGhlYWRlciA9PSBudWxsIHx8IGhlYWRlciA9PT0gJyonKSB7XG4gICAgICAgICAgYWxsb3dlZEhlYWRlcnNDYWNoZS5zZXQodGhpcy5ob3N0bmFtZSwgZmFsbGJhY2tBbGxvd2VkSGVhZGVycyk7XG4gICAgICAgICAgcmV0dXJuIGZhbGxiYWNrQWxsb3dlZEhlYWRlcnM7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnVwcHkubG9nKGBbQ29tcGFuaW9uQ2xpZW50XSBhZGRpbmcgYWxsb3dlZCBwcmVmbGlnaHQgaGVhZGVycyB0byBjb21wYW5pb24gY2FjaGU6ICR7dGhpcy5ob3N0bmFtZX0gJHtoZWFkZXJ9YCk7XG4gICAgICAgIGNvbnN0IGFsbG93ZWRIZWFkZXJzID0gaGVhZGVyLnNwbGl0KCcsJykubWFwKGhlYWRlck5hbWUgPT4gaGVhZGVyTmFtZS50cmltKCkudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIGFsbG93ZWRIZWFkZXJzQ2FjaGUuc2V0KHRoaXMuaG9zdG5hbWUsIGFsbG93ZWRIZWFkZXJzKTtcbiAgICAgICAgcmV0dXJuIGFsbG93ZWRIZWFkZXJzO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHRoaXMudXBweS5sb2coYFtDb21wYW5pb25DbGllbnRdIHVuYWJsZSB0byBtYWtlIHByZWZsaWdodCByZXF1ZXN0ICR7ZXJyfWAsICd3YXJuaW5nJyk7IC8vIElmIHRoZSB1c2VyIGdldHMgYSBuZXR3b3JrIGVycm9yIG9yIHNpbWlsYXIsIHdlIHNob3VsZCB0cnkgcHJlZmxpZ2h0XG4gICAgICAgIC8vIGFnYWluIG5leHQgdGltZSwgb3IgZWxzZSB3ZSBtaWdodCBnZXQgaW5jb3JyZWN0IGJlaGF2aW91ci5cblxuICAgICAgICBhbGxvd2VkSGVhZGVyc0NhY2hlLmRlbGV0ZSh0aGlzLmhvc3RuYW1lKTsgLy8gcmUtZmV0Y2ggbmV4dCB0aW1lXG5cbiAgICAgICAgcmV0dXJuIGZhbGxiYWNrQWxsb3dlZEhlYWRlcnM7XG4gICAgICB9XG4gICAgfSkoKTtcblxuICAgIGFsbG93ZWRIZWFkZXJzQ2FjaGUuc2V0KHRoaXMuaG9zdG5hbWUsIHByb21pc2UpO1xuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cbiAgYXN5bmMgcHJlZmxpZ2h0QW5kSGVhZGVycyhwYXRoKSB7XG4gICAgY29uc3QgW2FsbG93ZWRIZWFkZXJzLCBoZWFkZXJzXSA9IGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLnByZWZsaWdodChwYXRoKSwgdGhpcy5oZWFkZXJzKCldKTsgLy8gZmlsdGVyIHRvIGtlZXAgb25seSBhbGxvd2VkIEhlYWRlcnNcblxuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoaGVhZGVycykuZmlsdGVyKF9yZWYyID0+IHtcbiAgICAgIGxldCBbaGVhZGVyXSA9IF9yZWYyO1xuXG4gICAgICBpZiAoIWFsbG93ZWRIZWFkZXJzLmluY2x1ZGVzKGhlYWRlci50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICB0aGlzLnVwcHkubG9nKGBbQ29tcGFuaW9uQ2xpZW50XSBleGNsdWRpbmcgZGlzYWxsb3dlZCBoZWFkZXIgJHtoZWFkZXJ9YCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSkpO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHBhdGgsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIC8vIFRPRE86IHJlbW92ZSBib29sZWFuIHN1cHBvcnQgZm9yIG9wdGlvbnMgdGhhdCB3YXMgYWRkZWQgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnYm9vbGVhbicpIG9wdGlvbnMgPSB7XG4gICAgICBza2lwUG9zdFJlc3BvbnNlOiBvcHRpb25zXG4gICAgfTtcbiAgICByZXR1cm4gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9yZXF1ZXN0KVtfcmVxdWVzdF0oeyAuLi5vcHRpb25zLFxuICAgICAgcGF0aFxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgcG9zdChwYXRoLCBkYXRhLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgICAgb3B0aW9ucyA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICAvLyBUT0RPOiByZW1vdmUgYm9vbGVhbiBzdXBwb3J0IGZvciBvcHRpb25zIHRoYXQgd2FzIGFkZGVkIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LlxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Jvb2xlYW4nKSBvcHRpb25zID0ge1xuICAgICAgc2tpcFBvc3RSZXNwb25zZTogb3B0aW9uc1xuICAgIH07XG4gICAgcmV0dXJuIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfcmVxdWVzdClbX3JlcXVlc3RdKHsgLi4ub3B0aW9ucyxcbiAgICAgIHBhdGgsXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGRhdGFcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGRlbGV0ZShwYXRoLCBkYXRhLCBvcHRpb25zKSB7XG4gICAgaWYgKGRhdGEgPT09IHZvaWQgMCkge1xuICAgICAgZGF0YSA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICAvLyBUT0RPOiByZW1vdmUgYm9vbGVhbiBzdXBwb3J0IGZvciBvcHRpb25zIHRoYXQgd2FzIGFkZGVkIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LlxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Jvb2xlYW4nKSBvcHRpb25zID0ge1xuICAgICAgc2tpcFBvc3RSZXNwb25zZTogb3B0aW9uc1xuICAgIH07XG4gICAgcmV0dXJuIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfcmVxdWVzdClbX3JlcXVlc3RdKHsgLi4ub3B0aW9ucyxcbiAgICAgIHBhdGgsXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgZGF0YVxuICAgIH0pO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gX2dldFVybDIodXJsKSB7XG4gIGlmICgvXihodHRwcz86fClcXC9cXC8vLnRlc3QodXJsKSkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICByZXR1cm4gYCR7dGhpcy5ob3N0bmFtZX0vJHt1cmx9YDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gX3JlcXVlc3QyKF9yZWYzKSB7XG4gIGxldCB7XG4gICAgcGF0aCxcbiAgICBtZXRob2QgPSAnR0VUJyxcbiAgICBkYXRhLFxuICAgIHNraXBQb3N0UmVzcG9uc2UsXG4gICAgc2lnbmFsXG4gIH0gPSBfcmVmMztcblxuICB0cnkge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBhd2FpdCB0aGlzLnByZWZsaWdodEFuZEhlYWRlcnMocGF0aCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaFdpdGhOZXR3b3JrRXJyb3IoX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9nZXRVcmwpW19nZXRVcmxdKHBhdGgpLCB7XG4gICAgICBtZXRob2QsXG4gICAgICBzaWduYWwsXG4gICAgICBoZWFkZXJzLFxuICAgICAgY3JlZGVudGlhbHM6IHRoaXMub3B0cy5jb21wYW5pb25Db29raWVzUnVsZSB8fCAnc2FtZS1vcmlnaW4nLFxuICAgICAgYm9keTogZGF0YSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogbnVsbFxuICAgIH0pO1xuICAgIGlmICghc2tpcFBvc3RSZXNwb25zZSkgdGhpcy5vblJlY2VpdmVSZXNwb25zZShyZXNwb25zZSk7XG4gICAgcmV0dXJuIGhhbmRsZUpTT05SZXNwb25zZShyZXNwb25zZSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChlcnIgIT0gbnVsbCAmJiBlcnIuaXNBdXRoRXJyb3IpIHRocm93IGVycjtcbiAgICB0aHJvdyBuZXcgRXJyb3JXaXRoQ2F1c2UoYENvdWxkIG5vdCAke21ldGhvZH0gJHtfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2dldFVybClbX2dldFVybF0ocGF0aCl9YCwge1xuICAgICAgY2F1c2U6IGVyclxuICAgIH0pO1xuICB9XG59XG5cblJlcXVlc3RDbGllbnQuVkVSU0lPTiA9IHBhY2thZ2VKc29uLnZlcnNpb247Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/RequestClient.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/SearchProvider.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/SearchProvider.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SearchProvider)\n/* harmony export */ });\n/* harmony import */ var _RequestClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestClient.js */ \"./node_modules/@uppy/companion-client/lib/RequestClient.js\");\n\n\n\n\nconst getName = id => {\n  return id.split('-').map(s => s.charAt(0).toUpperCase() + s.slice(1)).join(' ');\n};\n\nclass SearchProvider extends _RequestClient_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(uppy, opts) {\n    super(uppy, opts);\n    this.provider = opts.provider;\n    this.id = this.provider;\n    this.name = this.opts.name || getName(this.id);\n    this.pluginId = this.opts.pluginId;\n  }\n\n  fileUrl(id) {\n    return `${this.hostname}/search/${this.id}/get/${id}`;\n  }\n\n  search(text, queries) {\n    return this.get(`search/${this.id}/list?q=${encodeURIComponent(text)}${queries ? `&${queries}` : ''}`);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvU2VhcmNoUHJvdmlkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFa0M7O0FBRS9DO0FBQ0E7QUFDQTs7QUFFZSw2QkFBNkIseURBQWE7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLGNBQWMsVUFBVSxRQUFRLE9BQU8sR0FBRztBQUN4RDs7QUFFQTtBQUNBLDhCQUE4QixRQUFRLFVBQVUseUJBQXlCLEVBQUUsY0FBYyxRQUFRLE9BQU87QUFDeEc7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdXBweS9jb21wYW5pb24tY2xpZW50L2xpYi9TZWFyY2hQcm92aWRlci5qcz81MzhkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IFJlcXVlc3RDbGllbnQgZnJvbSAnLi9SZXF1ZXN0Q2xpZW50LmpzJztcblxuY29uc3QgZ2V0TmFtZSA9IGlkID0+IHtcbiAgcmV0dXJuIGlkLnNwbGl0KCctJykubWFwKHMgPT4gcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSkpLmpvaW4oJyAnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlYXJjaFByb3ZpZGVyIGV4dGVuZHMgUmVxdWVzdENsaWVudCB7XG4gIGNvbnN0cnVjdG9yKHVwcHksIG9wdHMpIHtcbiAgICBzdXBlcih1cHB5LCBvcHRzKTtcbiAgICB0aGlzLnByb3ZpZGVyID0gb3B0cy5wcm92aWRlcjtcbiAgICB0aGlzLmlkID0gdGhpcy5wcm92aWRlcjtcbiAgICB0aGlzLm5hbWUgPSB0aGlzLm9wdHMubmFtZSB8fCBnZXROYW1lKHRoaXMuaWQpO1xuICAgIHRoaXMucGx1Z2luSWQgPSB0aGlzLm9wdHMucGx1Z2luSWQ7XG4gIH1cblxuICBmaWxlVXJsKGlkKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuaG9zdG5hbWV9L3NlYXJjaC8ke3RoaXMuaWR9L2dldC8ke2lkfWA7XG4gIH1cblxuICBzZWFyY2godGV4dCwgcXVlcmllcykge1xuICAgIHJldHVybiB0aGlzLmdldChgc2VhcmNoLyR7dGhpcy5pZH0vbGlzdD9xPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRleHQpfSR7cXVlcmllcyA/IGAmJHtxdWVyaWVzfWAgOiAnJ31gKTtcbiAgfVxuXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/SearchProvider.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/Socket.js":
/*!***********************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/Socket.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UppySocket)\n/* harmony export */ });\n/* harmony import */ var namespace_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! namespace-emitter */ \"./node_modules/namespace-emitter/index.js\");\nlet _Symbol$for, _Symbol$for2;\n\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\n\n\nvar _queued = /*#__PURE__*/_classPrivateFieldLooseKey(\"queued\");\n\nvar _emitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"emitter\");\n\nvar _isOpen = /*#__PURE__*/_classPrivateFieldLooseKey(\"isOpen\");\n\nvar _socket = /*#__PURE__*/_classPrivateFieldLooseKey(\"socket\");\n\nvar _handleMessage = /*#__PURE__*/_classPrivateFieldLooseKey(\"handleMessage\");\n\n_Symbol$for = Symbol.for('uppy test: getSocket');\n_Symbol$for2 = Symbol.for('uppy test: getQueued');\nclass UppySocket {\n  constructor(opts) {\n    Object.defineProperty(this, _queued, {\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, _emitter, {\n      writable: true,\n      value: namespace_emitter__WEBPACK_IMPORTED_MODULE_0__()\n    });\n    Object.defineProperty(this, _isOpen, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _socket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handleMessage, {\n      writable: true,\n      value: e => {\n        try {\n          const message = JSON.parse(e.data);\n          this.emit(message.action, message.payload);\n        } catch (err) {\n          // TODO: use a more robust error handler.\n          console.log(err); // eslint-disable-line no-console\n        }\n      }\n    });\n    this.opts = opts;\n\n    if (!opts || opts.autoOpen !== false) {\n      this.open();\n    }\n  }\n\n  get isOpen() {\n    return _classPrivateFieldLooseBase(this, _isOpen)[_isOpen];\n  }\n\n  [_Symbol$for]() {\n    return _classPrivateFieldLooseBase(this, _socket)[_socket];\n  }\n\n  [_Symbol$for2]() {\n    return _classPrivateFieldLooseBase(this, _queued)[_queued];\n  }\n\n  open() {\n    _classPrivateFieldLooseBase(this, _socket)[_socket] = new WebSocket(this.opts.target);\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onopen = () => {\n      _classPrivateFieldLooseBase(this, _isOpen)[_isOpen] = true;\n\n      while (_classPrivateFieldLooseBase(this, _queued)[_queued].length > 0 && _classPrivateFieldLooseBase(this, _isOpen)[_isOpen]) {\n        const first = _classPrivateFieldLooseBase(this, _queued)[_queued].shift();\n\n        this.send(first.action, first.payload);\n      }\n    };\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onclose = () => {\n      _classPrivateFieldLooseBase(this, _isOpen)[_isOpen] = false;\n    };\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].onmessage = _classPrivateFieldLooseBase(this, _handleMessage)[_handleMessage];\n  }\n\n  close() {\n    var _classPrivateFieldLoo;\n\n    (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _socket)[_socket]) == null ? void 0 : _classPrivateFieldLoo.close();\n  }\n\n  send(action, payload) {\n    // attach uuid\n    if (!_classPrivateFieldLooseBase(this, _isOpen)[_isOpen]) {\n      _classPrivateFieldLooseBase(this, _queued)[_queued].push({\n        action,\n        payload\n      });\n\n      return;\n    }\n\n    _classPrivateFieldLooseBase(this, _socket)[_socket].send(JSON.stringify({\n      action,\n      payload\n    }));\n  }\n\n  on(action, handler) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].on(action, handler);\n  }\n\n  emit(action, payload) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].emit(action, payload);\n  }\n\n  once(action, handler) {\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter].once(action, handler);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvU29ja2V0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBRUEsNkRBQTZELG1FQUFtRSx5RUFBeUU7O0FBRXpNOztBQUVBLDRDQUE0Qzs7QUFFVDs7QUFFbkM7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGFBQWEsOENBQUU7QUFDZixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdXBweS9jb21wYW5pb24tY2xpZW50L2xpYi9Tb2NrZXQuanM/NzY2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgX1N5bWJvbCRmb3IsIF9TeW1ib2wkZm9yMjtcblxuZnVuY3Rpb24gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHJlY2VpdmVyLCBwcml2YXRlS2V5KSB7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlY2VpdmVyLCBwcml2YXRlS2V5KSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXR0ZW1wdGVkIHRvIHVzZSBwcml2YXRlIGZpZWxkIG9uIG5vbi1pbnN0YW5jZVwiKTsgfSByZXR1cm4gcmVjZWl2ZXI7IH1cblxudmFyIGlkID0gMDtcblxuZnVuY3Rpb24gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkobmFtZSkgeyByZXR1cm4gXCJfX3ByaXZhdGVfXCIgKyBpZCsrICsgXCJfXCIgKyBuYW1lOyB9XG5cbmltcG9ydCBlZSBmcm9tICduYW1lc3BhY2UtZW1pdHRlcic7XG5cbnZhciBfcXVldWVkID0gLyojX19QVVJFX18qL19jbGFzc1ByaXZhdGVGaWVsZExvb3NlS2V5KFwicXVldWVkXCIpO1xuXG52YXIgX2VtaXR0ZXIgPSAvKiNfX1BVUkVfXyovX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkoXCJlbWl0dGVyXCIpO1xuXG52YXIgX2lzT3BlbiA9IC8qI19fUFVSRV9fKi9fY2xhc3NQcml2YXRlRmllbGRMb29zZUtleShcImlzT3BlblwiKTtcblxudmFyIF9zb2NrZXQgPSAvKiNfX1BVUkVfXyovX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkoXCJzb2NrZXRcIik7XG5cbnZhciBfaGFuZGxlTWVzc2FnZSA9IC8qI19fUFVSRV9fKi9fY2xhc3NQcml2YXRlRmllbGRMb29zZUtleShcImhhbmRsZU1lc3NhZ2VcIik7XG5cbl9TeW1ib2wkZm9yID0gU3ltYm9sLmZvcigndXBweSB0ZXN0OiBnZXRTb2NrZXQnKTtcbl9TeW1ib2wkZm9yMiA9IFN5bWJvbC5mb3IoJ3VwcHkgdGVzdDogZ2V0UXVldWVkJyk7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVcHB5U29ja2V0IHtcbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfcXVldWVkLCB7XG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBbXVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfZW1pdHRlciwge1xuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogZWUoKVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfaXNPcGVuLCB7XG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBmYWxzZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBfc29ja2V0LCB7XG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgX2hhbmRsZU1lc3NhZ2UsIHtcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgdmFsdWU6IGUgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBKU09OLnBhcnNlKGUuZGF0YSk7XG4gICAgICAgICAgdGhpcy5lbWl0KG1lc3NhZ2UuYWN0aW9uLCBtZXNzYWdlLnBheWxvYWQpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAvLyBUT0RPOiB1c2UgYSBtb3JlIHJvYnVzdCBlcnJvciBoYW5kbGVyLlxuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5vcHRzID0gb3B0cztcblxuICAgIGlmICghb3B0cyB8fCBvcHRzLmF1dG9PcGVuICE9PSBmYWxzZSkge1xuICAgICAgdGhpcy5vcGVuKCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGlzT3BlbigpIHtcbiAgICByZXR1cm4gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9pc09wZW4pW19pc09wZW5dO1xuICB9XG5cbiAgW19TeW1ib2wkZm9yXSgpIHtcbiAgICByZXR1cm4gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9zb2NrZXQpW19zb2NrZXRdO1xuICB9XG5cbiAgW19TeW1ib2wkZm9yMl0oKSB7XG4gICAgcmV0dXJuIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfcXVldWVkKVtfcXVldWVkXTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9zb2NrZXQpW19zb2NrZXRdID0gbmV3IFdlYlNvY2tldCh0aGlzLm9wdHMudGFyZ2V0KTtcblxuICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfc29ja2V0KVtfc29ja2V0XS5vbm9wZW4gPSAoKSA9PiB7XG4gICAgICBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2lzT3BlbilbX2lzT3Blbl0gPSB0cnVlO1xuXG4gICAgICB3aGlsZSAoX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9xdWV1ZWQpW19xdWV1ZWRdLmxlbmd0aCA+IDAgJiYgX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9pc09wZW4pW19pc09wZW5dKSB7XG4gICAgICAgIGNvbnN0IGZpcnN0ID0gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9xdWV1ZWQpW19xdWV1ZWRdLnNoaWZ0KCk7XG5cbiAgICAgICAgdGhpcy5zZW5kKGZpcnN0LmFjdGlvbiwgZmlyc3QucGF5bG9hZCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfc29ja2V0KVtfc29ja2V0XS5vbmNsb3NlID0gKCkgPT4ge1xuICAgICAgX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9pc09wZW4pW19pc09wZW5dID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfc29ja2V0KVtfc29ja2V0XS5vbm1lc3NhZ2UgPSBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2hhbmRsZU1lc3NhZ2UpW19oYW5kbGVNZXNzYWdlXTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHZhciBfY2xhc3NQcml2YXRlRmllbGRMb287XG5cbiAgICAoX2NsYXNzUHJpdmF0ZUZpZWxkTG9vID0gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9zb2NrZXQpW19zb2NrZXRdKSA9PSBudWxsID8gdm9pZCAwIDogX2NsYXNzUHJpdmF0ZUZpZWxkTG9vLmNsb3NlKCk7XG4gIH1cblxuICBzZW5kKGFjdGlvbiwgcGF5bG9hZCkge1xuICAgIC8vIGF0dGFjaCB1dWlkXG4gICAgaWYgKCFfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2lzT3BlbilbX2lzT3Blbl0pIHtcbiAgICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfcXVldWVkKVtfcXVldWVkXS5wdXNoKHtcbiAgICAgICAgYWN0aW9uLFxuICAgICAgICBwYXlsb2FkXG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfc29ja2V0KVtfc29ja2V0XS5zZW5kKEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIGFjdGlvbixcbiAgICAgIHBheWxvYWRcbiAgICB9KSk7XG4gIH1cblxuICBvbihhY3Rpb24sIGhhbmRsZXIpIHtcbiAgICBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2VtaXR0ZXIpW19lbWl0dGVyXS5vbihhY3Rpb24sIGhhbmRsZXIpO1xuICB9XG5cbiAgZW1pdChhY3Rpb24sIHBheWxvYWQpIHtcbiAgICBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2VtaXR0ZXIpW19lbWl0dGVyXS5lbWl0KGFjdGlvbiwgcGF5bG9hZCk7XG4gIH1cblxuICBvbmNlKGFjdGlvbiwgaGFuZGxlcikge1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfZW1pdHRlcilbX2VtaXR0ZXJdLm9uY2UoYWN0aW9uLCBoYW5kbGVyKTtcbiAgfVxuXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/Socket.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Provider\": () => (/* reexport safe */ _Provider_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"RequestClient\": () => (/* reexport safe */ _RequestClient_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"SearchProvider\": () => (/* reexport safe */ _SearchProvider_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"Socket\": () => (/* reexport safe */ _Socket_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _RequestClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestClient.js */ \"./node_modules/@uppy/companion-client/lib/RequestClient.js\");\n/* harmony import */ var _Provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Provider.js */ \"./node_modules/@uppy/companion-client/lib/Provider.js\");\n/* harmony import */ var _SearchProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SearchProvider.js */ \"./node_modules/@uppy/companion-client/lib/SearchProvider.js\");\n/* harmony import */ var _Socket_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Socket.js */ \"./node_modules/@uppy/companion-client/lib/Socket.js\");\n\n/**\n * Manages communications with Companion\n */\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFOEQ7QUFDVjtBQUNZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvaW5kZXguanM/ZTVkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vKipcbiAqIE1hbmFnZXMgY29tbXVuaWNhdGlvbnMgd2l0aCBDb21wYW5pb25cbiAqL1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIFJlcXVlc3RDbGllbnQgfSBmcm9tICcuL1JlcXVlc3RDbGllbnQuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQcm92aWRlciB9IGZyb20gJy4vUHJvdmlkZXIuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTZWFyY2hQcm92aWRlciB9IGZyb20gJy4vU2VhcmNoUHJvdmlkZXIuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTb2NrZXQgfSBmcm9tICcuL1NvY2tldC5qcyc7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/index.js\n");

/***/ }),

/***/ "./node_modules/@uppy/companion-client/lib/tokenStorage.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@uppy/companion-client/lib/tokenStorage.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getItem\": () => (/* binding */ getItem),\n/* harmony export */   \"removeItem\": () => (/* binding */ removeItem),\n/* harmony export */   \"setItem\": () => (/* binding */ setItem)\n/* harmony export */ });\n\n/**\n * This module serves as an Async wrapper for LocalStorage\n */\n\nfunction setItem(key, value) {\n  return new Promise(resolve => {\n    localStorage.setItem(key, value);\n    resolve();\n  });\n}\nfunction getItem(key) {\n  return Promise.resolve(localStorage.getItem(key));\n}\nfunction removeItem(key) {\n  return new Promise(resolve => {\n    localStorage.removeItem(key);\n    resolve();\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvY29tcGFuaW9uLWNsaWVudC9saWIvdG9rZW5TdG9yYWdlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdXBweS9jb21wYW5pb24tY2xpZW50L2xpYi90b2tlblN0b3JhZ2UuanM/YWY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vKipcbiAqIFRoaXMgbW9kdWxlIHNlcnZlcyBhcyBhbiBBc3luYyB3cmFwcGVyIGZvciBMb2NhbFN0b3JhZ2VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcbiAgICByZXNvbHZlKCk7XG4gIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEl0ZW0oa2V5KSB7XG4gIHJldHVybiBQcm9taXNlLnJlc29sdmUobG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlSXRlbShrZXkpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgcmVzb2x2ZSgpO1xuICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@uppy/companion-client/lib/tokenStorage.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/AbortController.js":
/*!*********************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/AbortController.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbortController\": () => (/* binding */ AbortController),\n/* harmony export */   \"AbortSignal\": () => (/* binding */ AbortSignal),\n/* harmony export */   \"createAbortError\": () => (/* binding */ createAbortError)\n/* harmony export */ });\n/* harmony import */ var _hasProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasProperty.js */ \"./node_modules/@uppy/utils/lib/hasProperty.js\");\n\n/**\n * Little AbortController proxy module so we can swap out the implementation easily later.\n */\n\nconst {\n  AbortController\n} = globalThis;\nconst {\n  AbortSignal\n} = globalThis;\nconst createAbortError = function (message, options) {\n  if (message === void 0) {\n    message = 'Aborted';\n  }\n\n  const err = new DOMException(message, 'AbortError');\n\n  if (options != null && (0,_hasProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options, 'cause')) {\n    Object.defineProperty(err, 'cause', {\n      __proto__: null,\n      configurable: true,\n      writable: true,\n      value: options.cause\n    });\n  }\n\n  return err;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL0Fib3J0Q29udHJvbGxlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBQzlDO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0EsRUFBRTtBQUNLO0FBQ1A7QUFDQSxFQUFFO0FBQ0s7QUFDUDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEseUJBQXlCLDJEQUFjO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B1cHB5L3V0aWxzL2xpYi9BYm9ydENvbnRyb2xsZXIuanM/MDAxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaGFzT3duUHJvcGVydHkgZnJvbSAnLi9oYXNQcm9wZXJ0eS5qcyc7XG4vKipcbiAqIExpdHRsZSBBYm9ydENvbnRyb2xsZXIgcHJveHkgbW9kdWxlIHNvIHdlIGNhbiBzd2FwIG91dCB0aGUgaW1wbGVtZW50YXRpb24gZWFzaWx5IGxhdGVyLlxuICovXG5cbmV4cG9ydCBjb25zdCB7XG4gIEFib3J0Q29udHJvbGxlclxufSA9IGdsb2JhbFRoaXM7XG5leHBvcnQgY29uc3Qge1xuICBBYm9ydFNpZ25hbFxufSA9IGdsb2JhbFRoaXM7XG5leHBvcnQgY29uc3QgY3JlYXRlQWJvcnRFcnJvciA9IGZ1bmN0aW9uIChtZXNzYWdlLCBvcHRpb25zKSB7XG4gIGlmIChtZXNzYWdlID09PSB2b2lkIDApIHtcbiAgICBtZXNzYWdlID0gJ0Fib3J0ZWQnO1xuICB9XG5cbiAgY29uc3QgZXJyID0gbmV3IERPTUV4Y2VwdGlvbihtZXNzYWdlLCAnQWJvcnRFcnJvcicpO1xuXG4gIGlmIChvcHRpb25zICE9IG51bGwgJiYgaGFzT3duUHJvcGVydHkob3B0aW9ucywgJ2NhdXNlJykpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXJyLCAnY2F1c2UnLCB7XG4gICAgICBfX3Byb3RvX186IG51bGwsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBvcHRpb25zLmNhdXNlXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZXJyO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/AbortController.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/ErrorWithCause.js":
/*!********************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/ErrorWithCause.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _hasProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasProperty.js */ \"./node_modules/@uppy/utils/lib/hasProperty.js\");\n\n\nclass ErrorWithCause extends Error {\n  constructor(message, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    super(message);\n    this.cause = options.cause;\n\n    if (this.cause && (0,_hasProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.cause, 'isNetworkError')) {\n      this.isNetworkError = this.cause.isNetworkError;\n    }\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ErrorWithCause);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL0Vycm9yV2l0aENhdXNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsc0JBQXNCLDJEQUFXO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxpRUFBZSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL0Vycm9yV2l0aENhdXNlLmpzPzA5MmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGhhc1Byb3BlcnR5IGZyb20gJy4vaGFzUHJvcGVydHkuanMnO1xuXG5jbGFzcyBFcnJvcldpdGhDYXVzZSBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLmNhdXNlID0gb3B0aW9ucy5jYXVzZTtcblxuICAgIGlmICh0aGlzLmNhdXNlICYmIGhhc1Byb3BlcnR5KHRoaXMuY2F1c2UsICdpc05ldHdvcmtFcnJvcicpKSB7XG4gICAgICB0aGlzLmlzTmV0d29ya0Vycm9yID0gdGhpcy5jYXVzZS5pc05ldHdvcmtFcnJvcjtcbiAgICB9XG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBFcnJvcldpdGhDYXVzZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/ErrorWithCause.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/EventTracker.js":
/*!******************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/EventTracker.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventTracker)\n/* harmony export */ });\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nvar _emitter = /*#__PURE__*/_classPrivateFieldLooseKey(\"emitter\");\n\nvar _events = /*#__PURE__*/_classPrivateFieldLooseKey(\"events\");\n\n/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nclass EventTracker {\n  constructor(emitter) {\n    Object.defineProperty(this, _emitter, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _events, {\n      writable: true,\n      value: []\n    });\n    _classPrivateFieldLooseBase(this, _emitter)[_emitter] = emitter;\n  }\n\n  on(event, fn) {\n    _classPrivateFieldLooseBase(this, _events)[_events].push([event, fn]);\n\n    return _classPrivateFieldLooseBase(this, _emitter)[_emitter].on(event, fn);\n  }\n\n  remove() {\n    for (const [event, fn] of _classPrivateFieldLooseBase(this, _events)[_events].splice(0)) {\n      _classPrivateFieldLooseBase(this, _emitter)[_emitter].off(event, fn);\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL0V2ZW50VHJhY2tlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNkRBQTZELG1FQUFtRSx5RUFBeUU7O0FBRXpNOztBQUVBLDRDQUE0Qzs7QUFFNUM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL0V2ZW50VHJhY2tlci5qcz9jMzEzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZShyZWNlaXZlciwgcHJpdmF0ZUtleSkgeyBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyZWNlaXZlciwgcHJpdmF0ZUtleSkpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byB1c2UgcHJpdmF0ZSBmaWVsZCBvbiBub24taW5zdGFuY2VcIik7IH0gcmV0dXJuIHJlY2VpdmVyOyB9XG5cbnZhciBpZCA9IDA7XG5cbmZ1bmN0aW9uIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlS2V5KG5hbWUpIHsgcmV0dXJuIFwiX19wcml2YXRlX1wiICsgaWQrKyArIFwiX1wiICsgbmFtZTsgfVxuXG52YXIgX2VtaXR0ZXIgPSAvKiNfX1BVUkVfXyovX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VLZXkoXCJlbWl0dGVyXCIpO1xuXG52YXIgX2V2ZW50cyA9IC8qI19fUFVSRV9fKi9fY2xhc3NQcml2YXRlRmllbGRMb29zZUtleShcImV2ZW50c1wiKTtcblxuLyoqXG4gKiBDcmVhdGUgYSB3cmFwcGVyIGFyb3VuZCBhbiBldmVudCBlbWl0dGVyIHdpdGggYSBgcmVtb3ZlYCBtZXRob2QgdG8gcmVtb3ZlXG4gKiBhbGwgZXZlbnRzIHRoYXQgd2VyZSBhZGRlZCB1c2luZyB0aGUgd3JhcHBlZCBlbWl0dGVyLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudFRyYWNrZXIge1xuICBjb25zdHJ1Y3RvcihlbWl0dGVyKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIF9lbWl0dGVyLCB7XG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgX2V2ZW50cywge1xuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICB2YWx1ZTogW11cbiAgICB9KTtcbiAgICBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2VtaXR0ZXIpW19lbWl0dGVyXSA9IGVtaXR0ZXI7XG4gIH1cblxuICBvbihldmVudCwgZm4pIHtcbiAgICBfY2xhc3NQcml2YXRlRmllbGRMb29zZUJhc2UodGhpcywgX2V2ZW50cylbX2V2ZW50c10ucHVzaChbZXZlbnQsIGZuXSk7XG5cbiAgICByZXR1cm4gX2NsYXNzUHJpdmF0ZUZpZWxkTG9vc2VCYXNlKHRoaXMsIF9lbWl0dGVyKVtfZW1pdHRlcl0ub24oZXZlbnQsIGZuKTtcbiAgfVxuXG4gIHJlbW92ZSgpIHtcbiAgICBmb3IgKGNvbnN0IFtldmVudCwgZm5dIG9mIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfZXZlbnRzKVtfZXZlbnRzXS5zcGxpY2UoMCkpIHtcbiAgICAgIF9jbGFzc1ByaXZhdGVGaWVsZExvb3NlQmFzZSh0aGlzLCBfZW1pdHRlcilbX2VtaXR0ZXJdLm9mZihldmVudCwgZm4pO1xuICAgIH1cbiAgfVxuXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/EventTracker.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/NetworkError.js":
/*!******************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/NetworkError.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass NetworkError extends Error {\n  constructor(error, xhr) {\n    if (xhr === void 0) {\n      xhr = null;\n    }\n\n    super(`This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.`);\n    this.cause = error;\n    this.isNetworkError = true;\n    this.request = xhr;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NetworkError);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL05ldHdvcmtFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGlFQUFlLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdXBweS91dGlscy9saWIvTmV0d29ya0Vycm9yLmpzPzMzOTAiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTmV0d29ya0Vycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihlcnJvciwgeGhyKSB7XG4gICAgaWYgKHhociA9PT0gdm9pZCAwKSB7XG4gICAgICB4aHIgPSBudWxsO1xuICAgIH1cblxuICAgIHN1cGVyKGBUaGlzIGxvb2tzIGxpa2UgYSBuZXR3b3JrIGVycm9yLCB0aGUgZW5kcG9pbnQgbWlnaHQgYmUgYmxvY2tlZCBieSBhbiBpbnRlcm5ldCBwcm92aWRlciBvciBhIGZpcmV3YWxsLmApO1xuICAgIHRoaXMuY2F1c2UgPSBlcnJvcjtcbiAgICB0aGlzLmlzTmV0d29ya0Vycm9yID0gdHJ1ZTtcbiAgICB0aGlzLnJlcXVlc3QgPSB4aHI7XG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBOZXR3b3JrRXJyb3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/NetworkError.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/RateLimitedQueue.js":
/*!**********************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/RateLimitedQueue.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RateLimitedQueue\": () => (/* binding */ RateLimitedQueue),\n/* harmony export */   \"internalRateLimitedQueue\": () => (/* binding */ internalRateLimitedQueue)\n/* harmony export */ });\nfunction _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\n\nvar id = 0;\n\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\n\nfunction createCancelError(cause) {\n  return new Error('Cancelled', {\n    cause\n  });\n}\n\nfunction abortOn(signal) {\n  if (signal != null) {\n    const abortPromise = () => this.abort(signal.reason);\n\n    signal.addEventListener('abort', abortPromise, {\n      once: true\n    });\n\n    const removeAbortListener = () => {\n      signal.removeEventListener('abort', abortPromise);\n    };\n\n    this.then(removeAbortListener, removeAbortListener);\n  }\n\n  return this;\n}\n\nvar _activeRequests = /*#__PURE__*/_classPrivateFieldLooseKey(\"activeRequests\");\n\nvar _queuedHandlers = /*#__PURE__*/_classPrivateFieldLooseKey(\"queuedHandlers\");\n\nvar _paused = /*#__PURE__*/_classPrivateFieldLooseKey(\"paused\");\n\nvar _pauseTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"pauseTimer\");\n\nvar _downLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"downLimit\");\n\nvar _upperLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"upperLimit\");\n\nvar _rateLimitingTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"rateLimitingTimer\");\n\nvar _call = /*#__PURE__*/_classPrivateFieldLooseKey(\"call\");\n\nvar _queueNext = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueNext\");\n\nvar _next = /*#__PURE__*/_classPrivateFieldLooseKey(\"next\");\n\nvar _queue = /*#__PURE__*/_classPrivateFieldLooseKey(\"queue\");\n\nvar _dequeue = /*#__PURE__*/_classPrivateFieldLooseKey(\"dequeue\");\n\nvar _resume = /*#__PURE__*/_classPrivateFieldLooseKey(\"resume\");\n\nvar _increaseLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"increaseLimit\");\n\nclass RateLimitedQueue {\n  constructor(limit) {\n    Object.defineProperty(this, _dequeue, {\n      value: _dequeue2\n    });\n    Object.defineProperty(this, _queue, {\n      value: _queue2\n    });\n    Object.defineProperty(this, _next, {\n      value: _next2\n    });\n    Object.defineProperty(this, _queueNext, {\n      value: _queueNext2\n    });\n    Object.defineProperty(this, _call, {\n      value: _call2\n    });\n    Object.defineProperty(this, _activeRequests, {\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, _queuedHandlers, {\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, _paused, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _pauseTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _downLimit, {\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, _upperLimit, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _rateLimitingTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _resume, {\n      writable: true,\n      value: () => this.resume()\n    });\n    Object.defineProperty(this, _increaseLimit, {\n      writable: true,\n      value: () => {\n        if (_classPrivateFieldLooseBase(this, _paused)[_paused]) {\n          _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], 0);\n          return;\n        }\n\n        _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] = this.limit;\n        this.limit = Math.ceil((_classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] + _classPrivateFieldLooseBase(this, _downLimit)[_downLimit]) / 2);\n\n        for (let i = _classPrivateFieldLooseBase(this, _downLimit)[_downLimit]; i <= this.limit; i++) {\n          _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n        }\n\n        if (_classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] - _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] > 3) {\n          _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], 2000);\n        } else {\n          _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] = Math.floor(_classPrivateFieldLooseBase(this, _downLimit)[_downLimit] / 2);\n        }\n      }\n    });\n\n    if (typeof limit !== 'number' || limit === 0) {\n      this.limit = Infinity;\n    } else {\n      this.limit = limit;\n    }\n  }\n\n  run(fn, queueOptions) {\n    if (!_classPrivateFieldLooseBase(this, _paused)[_paused] && _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] < this.limit) {\n      return _classPrivateFieldLooseBase(this, _call)[_call](fn);\n    }\n\n    return _classPrivateFieldLooseBase(this, _queue)[_queue](fn, queueOptions);\n  }\n\n  wrapPromiseFunction(fn, queueOptions) {\n    var _this = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      let queuedRequest;\n      const outerPromise = new Promise((resolve, reject) => {\n        queuedRequest = _this.run(() => {\n          let cancelError;\n          let innerPromise;\n\n          try {\n            innerPromise = Promise.resolve(fn(...args));\n          } catch (err) {\n            innerPromise = Promise.reject(err);\n          }\n\n          innerPromise.then(result => {\n            if (cancelError) {\n              reject(cancelError);\n            } else {\n              queuedRequest.done();\n              resolve(result);\n            }\n          }, err => {\n            if (cancelError) {\n              reject(cancelError);\n            } else {\n              queuedRequest.done();\n              reject(err);\n            }\n          });\n          return cause => {\n            cancelError = createCancelError(cause);\n          };\n        }, queueOptions);\n      });\n\n      outerPromise.abort = cause => {\n        queuedRequest.abort(cause);\n      };\n\n      outerPromise.abortOn = abortOn;\n      return outerPromise;\n    };\n  }\n\n  resume() {\n    _classPrivateFieldLooseBase(this, _paused)[_paused] = false;\n    clearTimeout(_classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer]);\n\n    for (let i = 0; i < this.limit; i++) {\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    }\n  }\n\n  /**\n   * Freezes the queue for a while or indefinitely.\n   *\n   * @param {number | null } [duration] Duration for the pause to happen, in milliseconds.\n   *                                    If omitted, the queue won't resume automatically.\n   */\n  pause(duration) {\n    if (duration === void 0) {\n      duration = null;\n    }\n\n    _classPrivateFieldLooseBase(this, _paused)[_paused] = true;\n    clearTimeout(_classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer]);\n\n    if (duration != null) {\n      _classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer] = setTimeout(_classPrivateFieldLooseBase(this, _resume)[_resume], duration);\n    }\n  }\n  /**\n   * Pauses the queue for a duration, and lower the limit of concurrent requests\n   * when the queue resumes. When the queue resumes, it tries to progressively\n   * increase the limit in `this.#increaseLimit` until another call is made to\n   * `this.rateLimit`.\n   * Call this function when using the RateLimitedQueue for network requests and\n   * the remote server responds with 429 HTTP code.\n   *\n   * @param {number} duration in milliseconds.\n   */\n\n\n  rateLimit(duration) {\n    clearTimeout(_classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer]);\n    this.pause(duration);\n\n    if (this.limit > 1 && Number.isFinite(this.limit)) {\n      _classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] = this.limit - 1;\n      this.limit = _classPrivateFieldLooseBase(this, _downLimit)[_downLimit];\n      _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], duration);\n    }\n  }\n\n  get isPaused() {\n    return _classPrivateFieldLooseBase(this, _paused)[_paused];\n  }\n\n}\n\nfunction _call2(fn) {\n  _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] += 1;\n  let done = false;\n  let cancelActive;\n\n  try {\n    cancelActive = fn();\n  } catch (err) {\n    _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n    throw err;\n  }\n\n  return {\n    abort: cause => {\n      if (done) return;\n      done = true;\n      _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n      cancelActive(cause);\n\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    },\n    done: () => {\n      if (done) return;\n      done = true;\n      _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    }\n  };\n}\n\nfunction _queueNext2() {\n  // Do it soon but not immediately, this allows clearing out the entire queue synchronously\n  // one by one without continuously _advancing_ it (and starting new tasks before immediately\n  // aborting them)\n  queueMicrotask(() => _classPrivateFieldLooseBase(this, _next)[_next]());\n}\n\nfunction _next2() {\n  if (_classPrivateFieldLooseBase(this, _paused)[_paused] || _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] >= this.limit) {\n    return;\n  }\n\n  if (_classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].length === 0) {\n    return;\n  } // Dispatch the next request, and update the abort/done handlers\n  // so that cancelling it does the Right Thing (and doesn't just try\n  // to dequeue an already-running request).\n\n\n  const next = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].shift();\n\n  const handler = _classPrivateFieldLooseBase(this, _call)[_call](next.fn);\n\n  next.abort = handler.abort;\n  next.done = handler.done;\n}\n\nfunction _queue2(fn, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const handler = {\n    fn,\n    priority: options.priority || 0,\n    abort: () => {\n      _classPrivateFieldLooseBase(this, _dequeue)[_dequeue](handler);\n    },\n    done: () => {\n      throw new Error('Cannot mark a queued request as done: this indicates a bug');\n    }\n  };\n\n  const index = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].findIndex(other => {\n    return handler.priority > other.priority;\n  });\n\n  if (index === -1) {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].push(handler);\n  } else {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].splice(index, 0, handler);\n  }\n\n  return handler;\n}\n\nfunction _dequeue2(handler) {\n  const index = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].indexOf(handler);\n\n  if (index !== -1) {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].splice(index, 1);\n  }\n}\n\nconst internalRateLimitedQueue = Symbol('__queue');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/RateLimitedQueue.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/emitSocketProgress.js":
/*!************************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/emitSocketProgress.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.throttle */ \"./node_modules/lodash.throttle/index.js\");\n\n\nfunction emitSocketProgress(uploader, progressData, file) {\n  const {\n    progress,\n    bytesUploaded,\n    bytesTotal\n  } = progressData;\n\n  if (progress) {\n    uploader.uppy.log(`Upload progress: ${progress}`);\n    uploader.uppy.emit('upload-progress', file, {\n      uploader,\n      bytesUploaded,\n      bytesTotal\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lodash_throttle__WEBPACK_IMPORTED_MODULE_0__(emitSocketProgress, 300, {\n  leading: true,\n  trailing: true\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL2VtaXRTb2NrZXRQcm9ncmVzcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1Qzs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7QUFDQSwwQ0FBMEMsU0FBUztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLGlFQUFlLDRDQUFRO0FBQ3ZCO0FBQ0E7QUFDQSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdXBweS91dGlscy9saWIvZW1pdFNvY2tldFByb2dyZXNzLmpzPzk3MDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRocm90dGxlIGZyb20gJ2xvZGFzaC50aHJvdHRsZSc7XG5cbmZ1bmN0aW9uIGVtaXRTb2NrZXRQcm9ncmVzcyh1cGxvYWRlciwgcHJvZ3Jlc3NEYXRhLCBmaWxlKSB7XG4gIGNvbnN0IHtcbiAgICBwcm9ncmVzcyxcbiAgICBieXRlc1VwbG9hZGVkLFxuICAgIGJ5dGVzVG90YWxcbiAgfSA9IHByb2dyZXNzRGF0YTtcblxuICBpZiAocHJvZ3Jlc3MpIHtcbiAgICB1cGxvYWRlci51cHB5LmxvZyhgVXBsb2FkIHByb2dyZXNzOiAke3Byb2dyZXNzfWApO1xuICAgIHVwbG9hZGVyLnVwcHkuZW1pdCgndXBsb2FkLXByb2dyZXNzJywgZmlsZSwge1xuICAgICAgdXBsb2FkZXIsXG4gICAgICBieXRlc1VwbG9hZGVkLFxuICAgICAgYnl0ZXNUb3RhbFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRocm90dGxlKGVtaXRTb2NrZXRQcm9ncmVzcywgMzAwLCB7XG4gIGxlYWRpbmc6IHRydWUsXG4gIHRyYWlsaW5nOiB0cnVlXG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/emitSocketProgress.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/fetchWithNetworkError.js":
/*!***************************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/fetchWithNetworkError.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fetchWithNetworkError)\n/* harmony export */ });\n/* harmony import */ var _NetworkError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NetworkError.js */ \"./node_modules/@uppy/utils/lib/NetworkError.js\");\n\n/**\n * Wrapper around window.fetch that throws a NetworkError when appropriate\n */\n\nfunction fetchWithNetworkError() {\n  return fetch(...arguments).catch(err => {\n    if (err.name === 'AbortError') {\n      throw err;\n    } else {\n      throw new _NetworkError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](err);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL2ZldGNoV2l0aE5ldHdvcmtFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2QztBQUM3QztBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sZ0JBQWdCLHdEQUFZO0FBQzVCO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL2ZldGNoV2l0aE5ldHdvcmtFcnJvci5qcz8zOWJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOZXR3b3JrRXJyb3IgZnJvbSAnLi9OZXR3b3JrRXJyb3IuanMnO1xuLyoqXG4gKiBXcmFwcGVyIGFyb3VuZCB3aW5kb3cuZmV0Y2ggdGhhdCB0aHJvd3MgYSBOZXR3b3JrRXJyb3Igd2hlbiBhcHByb3ByaWF0ZVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZldGNoV2l0aE5ldHdvcmtFcnJvcigpIHtcbiAgcmV0dXJuIGZldGNoKC4uLmFyZ3VtZW50cykuY2F0Y2goZXJyID0+IHtcbiAgICBpZiAoZXJyLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgTmV0d29ya0Vycm9yKGVycik7XG4gICAgfVxuICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/fetchWithNetworkError.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/getSocketHost.js":
/*!*******************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/getSocketHost.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getSocketHost)\n/* harmony export */ });\nfunction getSocketHost(url) {\n  // get the host domain\n  const regex = /^(?:https?:\\/\\/|\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^\\n]+)/i;\n  const host = regex.exec(url)[1];\n  const socketProtocol = /^http:\\/\\//i.test(url) ? 'ws' : 'wss';\n  return `${socketProtocol}://${host}`;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL2dldFNvY2tldEhvc3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGVBQWUsS0FBSyxLQUFLO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL2dldFNvY2tldEhvc3QuanM/ODE3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRTb2NrZXRIb3N0KHVybCkge1xuICAvLyBnZXQgdGhlIGhvc3QgZG9tYWluXG4gIGNvbnN0IHJlZ2V4ID0gL14oPzpodHRwcz86XFwvXFwvfFxcL1xcLyk/KD86W15AXFxuXStAKT8oPzp3d3dcXC4pPyhbXlxcbl0rKS9pO1xuICBjb25zdCBob3N0ID0gcmVnZXguZXhlYyh1cmwpWzFdO1xuICBjb25zdCBzb2NrZXRQcm90b2NvbCA9IC9eaHR0cDpcXC9cXC8vaS50ZXN0KHVybCkgPyAnd3MnIDogJ3dzcyc7XG4gIHJldHVybiBgJHtzb2NrZXRQcm90b2NvbH06Ly8ke2hvc3R9YDtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/getSocketHost.js\n");

/***/ }),

/***/ "./node_modules/@uppy/utils/lib/hasProperty.js":
/*!*****************************************************!*\
  !*** ./node_modules/@uppy/utils/lib/hasProperty.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ has)\n/* harmony export */ });\nfunction has(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHVwcHkvdXRpbHMvbGliL2hhc1Byb3BlcnR5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdXBweS91dGlscy9saWIvaGFzUHJvcGVydHkuanM/NDUwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYXMob2JqZWN0LCBrZXkpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@uppy/utils/lib/hasProperty.js\n");

/***/ })

}]);