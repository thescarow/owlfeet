"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_socket_event-handler_message-socket_index_js"],{

/***/ "./dev-javascripts/socket/event-handler/message-socket/index.js":
/*!**********************************************************************!*\
  !*** ./dev-javascripts/socket/event-handler/message-socket/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMessageSocket\": () => (/* binding */ createMessageSocket)\n/* harmony export */ });\nasync function createMessageSocket(socket) {\n  try {\n    // console.log(\"insideMessageSocket\")\n    let {\n      createMainNotification\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../common/mainNotification.dev.js */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n    let activeChatSection = document.getElementById(\"activeChatSection\");\n    let activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\n    let activeChatHeaderStatus = document.getElementById(\"activeChatHeaderStatus\");\n    socket.on(\"message:create-user-message-res\", async data => {\n      let {\n        isSuccess,\n        clientMessageId,\n        chatId\n      } = data;\n      let {\n        updateClientUserMessageStatus\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev.js */ \"./dev-javascripts/chat/js/message.dev.js\"));\n\n      if (activeChatSection.dataset.chatId.toString() !== \"\" && chatId.toString() === activeChatSection.dataset.chatId.toString()) {\n        if (isSuccess) {\n          let {\n            messageId\n          } = data;\n          updateClientUserMessageStatus(clientMessageId, \"sent\", messageId);\n        } else {\n          let {\n            error\n          } = data;\n          updateClientUserMessageStatus(clientMessageId, \"error\");\n          createMainNotification(error, \"error\");\n        }\n      }\n    }); // socket.on(\"message:client-user-message-sent\", async data => {\n    //   let { clientMessageId, messageId, chatId } = data\n    //   if (\n    //     activeChatSection.dataset.chatId.toString() !== \"\" &&\n    //     chatId.toString() === activeChatSection.dataset.chatId.toString()\n    //   ) {\n    //     let { updateClientUserMessageStatus } = await import(\n    //       \"../../../chat/js/message.dev.js\"\n    //     )\n    //     updateClientUserMessageStatus(clientMessageId, \"sent\", messageId)\n    //   }\n    // })\n\n    socket.on(\"message:user-message-delivered\", async data => {\n      let {\n        clientMessageId,\n        messageId,\n        chatId,\n        deliveredTime\n      } = data;\n\n      if (chatId.toString() === activeChatSection.dataset.chatId.toString()) {\n        let {\n          changeUserMessageStatusToDelivered\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n        changeUserMessageStatusToDelivered(clientMessageId, messageId);\n        let {\n          updateMessageInfoModalDeliveryStatus\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_userMessageOptionModal_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/userMessageOptionModal.dev */ \"./dev-javascripts/chat/js/userMessageOptionModal.dev.js\"));\n        updateMessageInfoModalDeliveryStatus(messageId, deliveredTime);\n      }\n    });\n    socket.on(\"message:replace-client-user-message-to-server-user-message\", async data => {\n      let clientMessageId = data.clientMessageId;\n      let message = data.message;\n      let chatId = activeChatSection.dataset.chatId;\n      let {\n        updateAllChatSection\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      updateAllChatSection(message); // let { increaseUnseenMessagesCountInChatBox } = await import(\n      //   \"../../../chat/js/updateAllChatSection.dev\"\n      // )\n      // increaseUnseenMessagesCountInChatBox(message.chat._id)\n\n      if (chatId.toString() !== \"\" && chatId.toString() === message.chat._id.toString()) {\n        let {\n          replaceClientUserMessageToServerMessage\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n        replaceClientUserMessageToServerMessage(clientMessageId, message, false);\n      }\n    }); // socket.on(\"message:create-user-media-message-request-res\", async data => {\n    //   if (data.isSuccess) {\n    //     let message = data.message\n    //     let chatId = activeChatSection.dataset.chatId\n    //     let { updateAllChatSection } = await import(\n    //       \"../../../chat/js/updateAllChatSection.dev\"\n    //     )\n    //     updateAllChatSection(message)\n    //     // let { increaseUnseenMessagesCountInChatBox } = await import(\n    //     //   \"../../../chat/js/updateAllChatSection.dev\"\n    //     // )\n    //     // increaseUnseenMessagesCountInChatBox(message.chat._id)\n    //     if (\n    //       chatId.toString() !== \"\" &&\n    //       chatId.toString() === message.chat._id.toString()\n    //     ) {\n    //       let { replaceClientUserMessageToServerMessage } = await import(\n    //         \"../../../chat/js/message.dev\"\n    //       )\n    //       replaceClientUserMessageToServerMessage(\n    //         data.clientMessageId,\n    //         message,\n    //         true,\n    //         false\n    //       )\n    //     }\n    //   } else {\n    //     let { updateClientUserMessageStatus } = await import(\n    //       \"../../../chat/js/message.dev.js\"\n    //     )\n    //     updateClientUserMessageStatus(data.clientMessageId, \"error\")\n    //     createMainNotification(data.error, \"error\")\n    //   }\n    // })\n\n    socket.on(\"message:new-user-message\", async data => {\n      let message = data.message;\n      let chatId = activeChatSection.dataset.chatId;\n      let {\n        updateAllChatSection\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      updateAllChatSection(message);\n      let {\n        increaseUnseenMessagesCountInChatBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      increaseUnseenMessagesCountInChatBox(message.chat._id);\n\n      if (chatId.toString() !== \"\" && chatId.toString() === message.chat._id.toString()) {\n        let {\n          checkTimeAndCreateNewMessage\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n        checkTimeAndCreateNewMessage(message, true, true, false);\n      }\n    }); ////////////////////////////////////////////\n\n    socket.on(\"message:new-info-message\", async data => {\n      let message = data.message;\n      let chatId = activeChatSection.dataset.chatId;\n      let {\n        updateAllChatSection\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      updateAllChatSection(message);\n      let {\n        increaseUnseenMessagesCountInChatBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      increaseUnseenMessagesCountInChatBox(message.chat._id);\n\n      if (chatId !== \"\" && chatId === message.chat._id) {\n        let {\n          createInfoMessage\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n        let infoMessageBox = createInfoMessage(message);\n        activeChatMessageContainer.insertAdjacentElement(\"beforeend\", infoMessageBox);\n        activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n      }\n    }); //////////////////////////////////////////\n\n    socket.on(\"message:delete-message-for-all\", async data => {\n      let {\n        convertUserMessageToDeletedForAllMessage\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n      convertUserMessageToDeletedForAllMessage(data.deletedForAllMessage);\n\n      if (data.isLatestMessageChanged) {\n        let {\n          updateChatBoxLatestMessage\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n        updateChatBoxLatestMessage(data.latestMessage);\n      }\n    });\n    socket.on(\"message:update-message-seen-status\", async data => {\n      let {\n        messageId,\n        chatId,\n        pushedUser,\n        pushedUserTime,\n        messageSeenStatusCount,\n        messageReaderCount\n      } = data;\n\n      if (chatId.toString() === activeChatSection.dataset.chatId.toString()) {\n        let {\n          changeUserMessageStatusWithMessageSeenStatusCount\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n        changeUserMessageStatusWithMessageSeenStatusCount(messageId, messageSeenStatusCount, messageReaderCount);\n        let {\n          addUserToMessageInfoModalSeenStatus\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_userMessageOptionModal_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/userMessageOptionModal.dev */ \"./dev-javascripts/chat/js/userMessageOptionModal.dev.js\"));\n        addUserToMessageInfoModalSeenStatus(messageId, pushedUser, pushedUserTime);\n      }\n    });\n    socket.on(\"message:message-seen-by-self\", async data => {\n      let {\n        decreaseUnseenMessagesCountInChatBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n      decreaseUnseenMessagesCountInChatBox(data.chatId);\n    });\n  } catch (e) {\n    console.log(\"socket problem\", e.message);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/socket/event-handler/message-socket/index.js\n");

/***/ })

}]);