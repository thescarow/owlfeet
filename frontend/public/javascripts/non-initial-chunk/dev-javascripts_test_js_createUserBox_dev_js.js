"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_test_js_createUserBox_dev_js"],{

/***/ "./dev-javascripts/test/js/createUserBox.dev.js":
/*!******************************************************!*\
  !*** ./dev-javascripts/test/js/createUserBox.dev.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUserBox\": () => (/* binding */ createUserBox),\n/* harmony export */   \"fetchUserAndCreateUserBox\": () => (/* binding */ fetchUserAndCreateUserBox)\n/* harmony export */ });\n/* harmony import */ var _common_mainNotification_dev__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\");\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '../css/createUserBox.dev.css'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\nlet svg_defaultUserImageIcon = ` \n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><g data-name=\"Layer 2\"><circle cx=\"16\" cy=\"6.96\" r=\"6\"/><path d=\"M30.86,26.84a15.07,15.07,0,0,0-4.11-7.47A12.47,12.47,0,0,0,25.13,18,15,15,0,0,0,16,15,15.24,15.24,0,0,0,5.24,19.37a15.07,15.07,0,0,0-4.11,7.47,3.42,3.42,0,0,0,.69,2.88A3.52,3.52,0,0,0,4.58,31H27.42a3.52,3.52,0,0,0,2.75-1.32A3.42,3.42,0,0,0,30.86,26.84Z\"/></g></svg>\n`;\n\n\nlet profileUserReceivedFollowRequestCount = document.getElementById(\"profileUserReceivedFollowRequestCount\");\nlet profileUserFollowingCount = document.getElementById(\"profileUserFollowingCount\");\nlet profileUserFollowerCount = document.getElementById(\"profileUserFollowerCount\");\n\nfunction attachEventListenerToUserBoxBtn(userBox, btnType, userBoxUserId) {\n  // let fetchMethod =\n  //   btnType === \"delete-received-follow-request\" ? \"DELETE\" : \"PATCH\"\n  fetch(`/follow/${btnType}/${userBoxUserId}`, {\n    method: \"PATCH\",\n    // or 'PATCH'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response);\n  }).then(data => {\n    console.log(data);\n\n    if (data.isSuccess === true) {\n      if (data.userFollowStatus) {\n        if (data.userFollowStatus === \"send-follow-request\") {\n          profileUserFollowingCount.textContent = (parseInt(profileUserFollowingCount.textContent) - 1).toString();\n        } else if (data.userFollowStatus === \"unfollow\") {\n          profileUserFollowingCount.textContent = (parseInt(profileUserFollowingCount.textContent) + 1).toString();\n        } // else if (data.userFollowStatus === \"cancel-sent-follow-request\") {\n        // }\n\n\n        createUserBoxBtnWithUserFollowStatus(userBox, data.userFollowStatus, userBoxUserId);\n      } else {\n        userBox.parentNode.removeChild(userBox);\n\n        if (btnType === \"accept-received-follow-request\") {\n          /// increase follower count and decrease received follow request count\n          profileUserFollowerCount.textContent = (parseInt(profileUserFollowerCount.textContent) + 1).toString();\n          profileUserReceivedFollowRequestCount.textContent = (parseInt(profileUserReceivedFollowRequestCount.textContent) - 1).toString(); ///\n\n          let followerUserBoxContainer = document.getElementById(\"followerUserBoxContainer\");\n          createUserBox(followerUserBoxContainer, \"follower\", data.acceptReceivedFollowRequestUser);\n        }\n\n        if (btnType === \"delete-received-follow-request\") {\n          profileUserReceivedFollowRequestCount.textContent = (parseInt(profileUserReceivedFollowRequestCount.textContent) - 1).toString();\n        }\n\n        if (btnType === \"remove-follower\") {\n          profileUserFollowerCount.textContent = (parseInt(profileUserFollowerCount.textContent) - 1).toString();\n        } // if (btnType === \"cancel-sent-follow-request\") {\n        // }\n\n      }\n    } else {\n      (0,_common_mainNotification_dev__WEBPACK_IMPORTED_MODULE_0__.createMainNotification)(data.error, \"error\");\n    }\n  });\n} // create btns for user box  according to user Follow Status\n\n\nfunction createUserBoxBtnWithUserFollowStatus(userBox, userFollowStatus, userBoxUserId) {\n  let userBoxBtnsContainer = userBox.getElementsByClassName(\"user-box__btns\")[0];\n  userBoxBtnsContainer.innerHTML = \"\";\n  let btn = document.createElement(\"button\");\n  btn.classList.add(\"user-box__btn\");\n\n  if (userFollowStatus === \"send-follow-request\") {\n    btn.textContent = \"Follow\";\n    btn.classList.add(\"user-box__btn--send-follow-request\");\n  }\n\n  if (userFollowStatus === \"cancel-sent-follow-request\") {\n    btn.textContent = \"Cancel Request\";\n    btn.classList.add(\"user-box__btn--cancel-sent-follow-request\");\n  }\n\n  if (userFollowStatus === \"unfollow\") {\n    btn.textContent = \"Unfollow\";\n    btn.classList.add(\"user-box__btn--unfollow\");\n  }\n\n  btn.addEventListener(\"click\", () => {\n    attachEventListenerToUserBoxBtn(userBox, userFollowStatus, userBoxUserId);\n  });\n  userBoxBtnsContainer.insertAdjacentElement(\"beforeend\", btn);\n} //create btn for remove Follower\n\n\nfunction createRemoveFollowerBtn(userBox, userBoxUserId) {\n  let userBoxBtnsContainer = userBox.getElementsByClassName(\"user-box__btns\")[0];\n  userBoxBtnsContainer.innerHTML = \"\";\n  let removeFollowerBtn = document.createElement(\"button\");\n  removeFollowerBtn.classList.add(\"user-box__btn\", \"user-box__btn--remove-follower\");\n  removeFollowerBtn.textContent = \"Remove\";\n  removeFollowerBtn.addEventListener(\"click\", () => {\n    attachEventListenerToUserBoxBtn(userBox, \"remove-follower\", userBoxUserId);\n  });\n  userBoxBtnsContainer.insertAdjacentElement(\"beforeend\", removeFollowerBtn);\n} //create btns for received follow requests, one for accepting and other for deleting\n\n\nfunction createReceivedFollowRequestBtns(userBox, userBoxUserId) {\n  let userBoxBtnsContainer = userBox.getElementsByClassName(\"user-box__btns\")[0];\n  userBoxBtnsContainer.innerHTML = \"\";\n  let acceptReceivedFollowRequestBtn = document.createElement(\"button\");\n  acceptReceivedFollowRequestBtn.classList.add(\"user-box__btn\", \"user-box__btn--accept-received-follow-request\");\n  acceptReceivedFollowRequestBtn.textContent = \"Accept\";\n  acceptReceivedFollowRequestBtn.addEventListener(\"click\", () => {\n    attachEventListenerToUserBoxBtn(userBox, \"accept-received-follow-request\", userBoxUserId);\n  });\n  userBoxBtnsContainer.insertAdjacentElement(\"beforeend\", acceptReceivedFollowRequestBtn); //create btn for deleting received follow request\n\n  let deleteReceivedFollowRequestBtn = document.createElement(\"button\");\n  deleteReceivedFollowRequestBtn.classList.add(\"user-box__btn\", \"user-box__btn--delete-received-follow-request\");\n  deleteReceivedFollowRequestBtn.textContent = \"Cancel\";\n  deleteReceivedFollowRequestBtn.addEventListener(\"click\", () => {\n    attachEventListenerToUserBoxBtn(userBox, \"delete-received-follow-request\", userBoxUserId);\n  });\n  userBoxBtnsContainer.insertAdjacentElement(\"beforeend\", deleteReceivedFollowRequestBtn);\n} //this function is not used because of createUserBoxBtnWithUserFollowStatus function\n// function createUnfollowBtn(userBox, userBoxUserId) {\n//   let userBoxBtnsContainer = userBox.getElementsByClassName(\"user-box__btns\")[0]\n//   userBoxBtnsContainer.innerHTML = \"\"\n//   let unfollowBtn = document.createElement(\"button\")\n//   unfollowBtn.classList.add(\"user-box__btn\", \"unfollow-btn\")\n//   unfollowBtn.textContent = \"Following\"\n//   unfollowBtn.addEventListener(\"click\", () => {\n//     attachEventListenerToUserBoxBtn(userBox, \"unfollow\", userBoxUserId)\n//   })\n//   userBoxBtnsContainer.insertAdjacentElement(\"beforeend\", unfollowBtn)\n// }\n//this function is not used because of createUserBoxBtnWithUserFollowStatus function\n// function createCancelSentFollowRequestBtn(userBox, userBoxUserId) {\n//   let userBoxBtnsContainer = userBox.getElementsByClassName(\"user-box__btns\")[0]\n//   userBoxBtnsContainer.innerHTML = \"\"\n//   let cancelSentFollowRequestBtn = document.createElement(\"button\")\n//   cancelSentFollowRequestBtn.classList.add(\n//     \"user-box__btn\",\n//     \"cancle-sent-follow-request-btn\"\n//   )\n//   cancelSentFollowRequestBtn.textContent = \"Cancel-sent-follow-request\"\n//   cancelSentFollowRequestBtn.addEventListener(\"click\", () => {\n//     attachEventListenerToUserBoxBtn(\n//       userBox,\n//       \"cancel-sent-follow-request\",\n//       userBoxUserId\n//     )\n//   })\n//   userBoxBtnsContainer.insertAdjacentElement(\n//     \"beforeend\",\n//     cancelSentFollowRequestBtn\n//   )\n// }\n\n\nfunction createUserBox(userBoxContainer, userBoxType, userBoxUser) {\n  let userBox = document.createElement(\"div\");\n  userBox.classList.add(\"user-box\");\n  userBox.setAttribute(\"data-user-id\", userBoxUser._id);\n  let userBoxInnerHtml = `\n    <div class=\"user-box__column\">\n\n      <div class='user-box__pic  ${userBoxUser.hasOwnProperty(\"profile\") && userBoxUser.profile !== \"\" ? \"user-box__pic--img\" : \"user-box__pic--svg\"}' >\n           <a class=\"user-box__link\" href=\"/user/${userBoxUser.username}\">\n           \n           ${svg_defaultUserImageIcon}\n           <img src=\"${userBoxUser.profile}\" alt=\"${userBoxUser.firstName}'s pic}\">\n\n          </a>\n      </div>\n\n    </div>\n\n    <div class=\"user-box__column user-box__column--left-margin\">\n      <div class=\"user-box__username\">${userBoxUser.username}</div>\n      <div class=\"user-box__full-name\">${userBoxUser.firstName} ${userBoxUser.lastName}</div>\n    </div>\n    <div class=\"user-box__column\">\n      <div class=\"user-box__btns\">\n\n      \n\n      </div>\n    </div>`;\n  userBox.insertAdjacentHTML(\"beforeend\", userBoxInnerHtml);\n\n  if (isOwnerProfile === true) {\n    if (userBoxType === \"follower\") {\n      createRemoveFollowerBtn(userBox, userBoxUser._id);\n    } else if (userBoxType === \"following\") {\n      createUserBoxBtnWithUserFollowStatus(userBox, \"unfollow\", userBoxUser._id);\n    } else if (userBoxType === \"sent-follow-request\") {\n      createUserBoxBtnWithUserFollowStatus(userBox, \"cancel-sent-follow-request\", userBoxUser._id);\n    } else if (userBoxType === \"received-follow-request\") {\n      createReceivedFollowRequestBtns(userBox, userBoxUser._id);\n    }\n  }\n\n  userBoxContainer.insertAdjacentElement(\"beforeend\", userBox);\n}\nfunction fetchUserAndCreateUserBox(userBoxContainer, userBoxType) {\n  let userId = isOwnerProfile === true ? \"\" : profileUser._id;\n  let skipNumber = userBoxContainer.childElementCount;\n  fetch(`/follow/${userBoxType}/${userId}?skipNumber=${skipNumber}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response);\n  }).then(data => {\n    console.log(data); //delete this\n\n    if (data.isSuccess === true) {\n      data.user.forEach(user => {\n        createUserBox(userBoxContainer, userBoxType, user);\n      });\n    } else {\n      if (data.error) {\n        console.log(\"error:\" + data.error);\n        (0,_common_mainNotification_dev__WEBPACK_IMPORTED_MODULE_0__.createMainNotification)(data.error, \"error\");\n      }\n    }\n  }).catch(error => {\n    console.log(error);\n    (0,_common_mainNotification_dev__WEBPACK_IMPORTED_MODULE_0__.createMainNotification)(\"Server Error,Please try again\");\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/test/js/createUserBox.dev.js\n");

/***/ })

}]);