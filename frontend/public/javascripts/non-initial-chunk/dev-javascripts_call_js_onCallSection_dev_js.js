"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_call_js_onCallSection_dev_js"],{

/***/ "./dev-javascripts/call/js/onCallSection.dev.js":
/*!******************************************************!*\
  !*** ./dev-javascripts/call/js/onCallSection.dev.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createOnCallSection\": () => (/* binding */ createOnCallSection)\n/* harmony export */ });\n/* harmony import */ var _css_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/onCallSection.dev.css */ \"./dev-javascripts/call/css/onCallSection.dev.css\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var peerjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! peerjs */ \"./node_modules/peerjs/dist/bundler.mjs\");\nlet svg_callAudioOffIcon = `\n<svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M62.8859 53.6463C64.2407 50.9209 64.9585 47.9218 64.9848 44.8767V19.8206C64.9295 14.8705 63.0496 10.116 59.7071 6.47296C56.3647 2.82991 51.7961 0.556018 46.8815 0.089318C41.9668 -0.377382 37.0538 0.996121 33.0888 3.94525C29.1238 6.89437 26.3873 11.2105 25.4065 16.0622M79.9765 44.8767C79.9765 43.5476 79.45 42.273 78.5129 41.3332C77.5757 40.3934 76.3046 39.8655 74.9793 39.8655C73.6539 39.8655 72.3828 40.3934 71.4457 41.3332C70.5085 42.273 69.982 43.5476 69.982 44.8767C69.9675 49.2548 68.7763 53.548 66.5339 57.3045L73.8799 64.9215C77.9014 59.0189 80.0286 52.0252 79.9765 44.8767ZM44.9957 64.9215H45.7953L25.0067 44.0248V44.8767C25.0067 50.1929 27.1127 55.2914 30.8614 59.0505C34.61 62.8097 39.6943 64.9215 44.9957 64.9215ZM88.5218 86.4196L8.56575 6.24022C8.09982 5.77299 7.54667 5.40235 6.93789 5.14949C6.32912 4.89662 5.67664 4.76647 5.0177 4.76647C4.35877 4.76647 3.70629 4.89662 3.09751 5.14949C2.48874 5.40235 1.93559 5.77299 1.46965 6.24022C0.52865 7.18385 0 8.46369 0 9.79818C0 11.1327 0.52865 12.4125 1.46965 13.3561L81.4257 93.5355C81.8903 94.0052 82.443 94.378 83.0519 94.6324C83.6609 94.8869 84.3141 95.0178 84.9738 95.0178C85.6335 95.0178 86.2866 94.8869 86.8956 94.6324C87.5046 94.378 88.0573 94.0052 88.5218 93.5355C88.9902 93.0697 89.362 92.5154 89.6157 91.9048C89.8694 91.2941 90 90.6391 90 89.9776C90 89.316 89.8694 88.661 89.6157 88.0504C89.362 87.4397 88.9902 86.8855 88.5218 86.4196Z\" />\n<path d=\"M59.9875 89.9776H49.993V79.5543C52.8209 79.1595 55.59 78.419 58.2385 77.3493L50.2429 69.3314C48.5229 69.7346 46.7621 69.9364 44.9957 69.9327C38.369 69.9327 32.0136 67.2929 27.3278 62.594C22.6419 57.8951 20.0095 51.5219 20.0095 44.8767C20.0095 43.5476 19.483 42.273 18.5458 41.3332C17.6086 40.3934 16.3376 39.8655 15.0122 39.8655C13.6869 39.8655 12.4158 40.3934 11.4786 41.3332C10.5415 42.273 10.015 43.5476 10.015 44.8767C10.0248 53.3048 13.0603 61.4476 18.5662 67.8154C24.072 74.1832 31.6801 78.3502 39.9985 79.5543V89.9776H30.004C28.6786 89.9776 27.4076 90.5055 26.4704 91.4453C25.5332 92.3851 25.0067 93.6597 25.0067 94.9888C25.0067 96.3178 25.5332 97.5925 26.4704 98.5323C27.4076 99.472 28.6786 100 30.004 100H59.9875C61.3129 100 62.5839 99.472 63.5211 98.5323C64.4583 97.5925 64.9848 96.3178 64.9848 94.9888C64.9848 93.6597 64.4583 92.3851 63.5211 91.4453C62.5839 90.5055 61.3129 89.9776 59.9875 89.9776Z\" />\n</svg>\n`;\nlet svg_callAudioOnIcon = `\n<svg width=\"70\" height=\"100\" viewBox=\"0 0 70 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M35 65C40.3043 65 45.3914 62.8929 49.1421 59.1421C52.8929 55.3914 55 50.3043 55 45V20C55 14.6957 52.8929 9.60859 49.1421 5.85786C45.3914 2.10714 40.3043 0 35 0C29.6957 0 24.6086 2.10714 20.8579 5.85786C17.1071 9.60859 15 14.6957 15 20V45C15 50.3043 17.1071 55.3914 20.8579 59.1421C24.6086 62.8929 29.6957 65 35 65Z\" />\n<path d=\"M70 45C70 43.6739 69.4732 42.4021 68.5355 41.4645C67.5979 40.5268 66.3261 40 65 40C63.6739 40 62.4021 40.5268 61.4645 41.4645C60.5268 42.4021 60 43.6739 60 45C60 51.6304 57.3661 57.9893 52.6777 62.6777C47.9893 67.3661 41.6304 70 35 70C28.3696 70 22.0107 67.3661 17.3223 62.6777C12.6339 57.9893 10 51.6304 10 45C10 43.6739 9.47321 42.4021 8.53553 41.4645C7.59785 40.5268 6.32608 40 5 40C3.67392 40 2.40215 40.5268 1.46447 41.4645C0.526785 42.4021 0 43.6739 0 45C0.00985554 53.4092 3.04704 61.5338 8.5559 67.8874C14.0648 74.2409 21.677 78.3987 30 79.6V90H19.45C18.2698 90 17.1379 90.4688 16.3034 91.3034C15.4688 92.1379 15 93.2698 15 94.45V95.55C15 96.7302 15.4688 97.8621 16.3034 98.6966C17.1379 99.5312 18.2698 100 19.45 100H50.55C51.7302 100 52.8621 99.5312 53.6966 98.6966C54.5312 97.8621 55 96.7302 55 95.55V94.45C55 93.2698 54.5312 92.1379 53.6966 91.3034C52.8621 90.4688 51.7302 90 50.55 90H40V79.6C48.323 78.3987 55.9352 74.2409 61.4441 67.8874C66.953 61.5338 69.9901 53.4092 70 45Z\" />\n</svg>\n`;\nlet svg_callSwitchViewToMultipleIcon = `\n<svg width=\"100\" height=\"90\" viewBox=\"0 0 100 90\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M82.2562 4.75573e-07C79.9255 4.24627e-07 77.6176 0.476164 75.4644 1.40131C73.3111 2.32645 71.3546 3.68246 69.7066 5.3919C68.0585 7.10134 66.7512 9.13073 65.8593 11.3642C64.9674 13.5977 64.5083 15.9916 64.5083 18.4091C64.5083 20.8266 64.9674 23.2204 65.8593 25.4539C66.7512 27.6874 68.0585 29.7168 69.7066 31.4263C71.3546 33.1357 73.3111 34.4917 75.4644 35.4169C77.6176 36.342 79.9255 36.8182 82.2562 36.8182C86.9632 36.8171 91.477 34.8765 94.8046 31.4233C98.1322 27.9702 100.001 23.2873 100 18.4049C99.9989 13.5225 98.128 8.84053 94.7989 5.38894C91.4698 1.93735 86.9551 -0.00110851 82.2481 4.75573e-07H82.2562ZM17.7479 4.75573e-07C15.4172 4.24627e-07 13.1093 0.476164 10.956 1.40131C8.80278 2.32645 6.84627 3.68246 5.19822 5.3919C3.55018 7.10134 2.24289 9.13073 1.35098 11.3642C0.459063 13.5977 0 15.9916 0 18.4091C0 20.8266 0.459063 23.2204 1.35098 25.4539C2.24289 27.6874 3.55018 29.7168 5.19822 31.4263C6.84627 33.1357 8.80278 34.4917 10.956 35.4169C13.1093 36.342 15.4172 36.8182 17.7479 36.8182C22.4549 36.8171 26.9687 34.8765 30.2963 31.4233C33.6239 27.9702 35.4927 23.2873 35.4917 18.4049C35.4906 13.5225 33.6197 8.84053 30.2906 5.38894C26.9615 1.93735 22.4549 -0.00110851 17.7479 4.75573e-07Z\" />\n<path d=\"M82.2562 53.1818C79.9255 53.1818 77.6176 53.658 75.4644 54.5831C73.3111 55.5083 71.3546 56.8643 69.7066 58.5737C68.0585 60.2831 66.7512 62.3125 65.8593 64.546C64.9674 66.7795 64.5083 69.1734 64.5083 71.5909C64.5083 74.0084 64.9674 76.4022 65.8593 78.6357C66.7512 80.8692 68.0585 82.8986 69.7066 84.6081C71.3546 86.3175 73.3111 87.6735 75.4644 88.5987C77.6176 89.5238 79.9255 90 82.2562 90C86.9632 89.9989 91.477 88.0583 94.8046 84.6051C98.1322 81.152 100.001 76.4691 100 71.5867C99.9989 66.7043 98.128 62.0223 94.7989 58.5707C91.4698 55.1192 86.9551 53.1807 82.2481 53.1818H82.2562ZM17.7479 53.1818C15.4172 53.1818 13.1093 53.658 10.956 54.5831C8.80278 55.5083 6.84627 56.8643 5.19822 58.5737C3.55018 60.2831 2.24289 62.3125 1.35098 64.546C0.459063 66.7795 0 69.1734 0 71.5909C0 74.0084 0.459063 76.4022 1.35098 78.6357C2.24289 80.8692 3.55018 82.8986 5.19822 84.6081C6.84627 86.3175 8.80278 87.6735 10.956 88.5987C13.1093 89.5238 15.4172 90 17.7479 90C22.4549 89.9989 26.9687 88.0583 30.2963 84.6051C33.6239 81.152 35.4927 76.4691 35.4917 71.5867C35.4906 66.7043 33.6197 62.0223 30.2906 58.5707C26.9615 55.1192 22.4549 53.1807 17.7479 53.1818Z\" />\n</svg>\n`;\nlet svg_callSwitchViewToSingleIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0 50C2.79451e-07 63.2608 5.26785 75.9785 14.6447 85.3553C24.0215 94.7321 36.7392 100 50 100C63.2608 100 75.9785 94.7321 85.3553 85.3553C94.7321 75.9785 100 63.2608 100 50C100 36.7392 94.7321 24.0215 85.3553 14.6447C75.9785 5.26785 63.2608 0 50 0C36.7392 0 24.0215 5.26785 14.6447 14.6447C5.26785 24.0215 0 36.7392 0 50Z\" />\n</svg>\n`;\nlet svg_callSecureRoomIcon = `\n<svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M45 99.9988C43.2528 100.027 41.5289 99.5894 40 98.7309L38.5001 97.8687C26.8165 91.1641 17.0966 81.4344 10.3327 69.6734C3.5688 57.9124 0.00335021 44.5413 0.000400756 30.9255V30.2155C-0.0154488 28.4196 0.439089 26.6517 1.31756 25.0924C2.19603 23.5331 3.46692 22.2383 5.00036 21.3404L40 1.35889C41.5202 0.468667 43.2447 0 45 0C46.7554 0 48.4798 0.468667 50 1.35889L84.9996 21.3404C86.5331 22.2383 87.804 23.5331 88.6824 25.0924C89.5609 26.6517 90.0155 28.4196 89.9996 30.2155V30.9255C89.9866 44.5513 86.4061 57.9292 79.6241 69.6912C72.8422 81.4531 63.1021 91.1771 51.3999 97.8687L49.9 98.7309C48.4007 99.5723 46.7134 100.009 45 99.9988Z\" />\n</svg>\n`;\nlet svg_callDefaultRoomPicIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0_1_4)\">\n<path d=\"M89.3125 0.25H33.0625C31.6496 0.241762 30.2491 0.51293 28.9414 1.04791C27.6337 1.58289 26.4447 2.37112 25.4428 3.36727C24.4408 4.36342 23.6457 5.54783 23.1031 6.85237C22.5605 8.15692 22.2812 9.55587 22.2812 10.9687V67.2188C22.2521 68.6406 22.5071 70.0539 23.0311 71.3759C23.5552 72.6979 24.3378 73.9021 25.3331 74.9178C26.3285 75.9335 27.5165 76.7403 28.8277 77.2911C30.1388 77.8418 31.5466 78.1253 32.9687 78.125H90.0937C92.8097 77.9187 95.3452 76.6862 97.1852 74.6779C99.0252 72.6696 100.032 70.0361 100 67.3125V11.0625C100.012 9.64965 99.7453 8.2483 99.2141 6.93904C98.6829 5.62978 97.8981 4.43846 96.9049 3.4336C95.9116 2.42873 94.7295 1.63015 93.4265 1.08379C92.1236 0.537428 90.7254 0.254065 89.3125 0.25ZM90.1875 58.5313C90.1103 59.0091 89.8542 59.4397 89.4712 59.7357C89.0882 60.0317 88.6069 60.1709 88.125 60.125H80.3125C79.88 55.339 77.6731 50.8879 74.1254 47.6464C70.5778 44.4049 65.9461 42.6075 61.1406 42.6075C56.3351 42.6075 51.7034 44.4049 48.1558 47.6464C44.6082 50.8879 42.4013 55.339 41.9688 60.125H34.1563C33.6744 60.1709 33.1931 60.0317 32.81 59.7357C32.427 59.4397 32.1709 59.0091 32.0938 58.5313V11.6562C32.1637 11.175 32.418 10.7397 32.8028 10.4424C33.1876 10.145 33.6729 10.0088 34.1563 10.0625H88.125C88.6084 10.0088 89.0937 10.145 89.4785 10.4424C89.8633 10.7397 90.1175 11.175 90.1875 11.6562V58.5313Z\" />\n<path d=\"M19.0625 67.3125V21.25L8.28125 23.75C5.52227 24.3898 3.13004 26.0985 1.63004 28.5009C0.130032 30.9032 -0.355083 33.8027 0.28125 36.5625L12.9688 91.4688C13.6085 94.2277 15.3173 96.62 17.7196 98.12C20.122 99.62 23.0215 100.105 25.7813 99.4687L80.6875 86.7813C82.2073 86.4364 83.633 85.7623 84.8641 84.8067C86.0952 83.851 87.1016 82.6369 87.8125 81.25H32.9688C31.1399 81.25 29.3291 80.8893 27.6398 80.1885C25.9506 79.4877 24.4162 78.4605 23.1245 77.1659C21.8328 75.8713 20.8091 74.3346 20.1121 72.6438C19.4151 70.953 19.0584 69.1413 19.0625 67.3125ZM61.1563 22.5312C59.3502 22.5251 57.5829 23.055 56.0782 24.0539C54.5735 25.0528 53.399 26.4757 52.7036 28.1426C52.0082 29.8094 51.823 31.6451 52.1715 33.4172C52.5201 35.1893 53.3867 36.8182 54.6616 38.0975C55.9365 39.3767 57.5624 40.2489 59.3333 40.6036C61.1042 40.9582 62.9405 40.7793 64.6097 40.0896C66.2789 39.3999 67.7059 38.2303 68.71 36.7291C69.714 35.2278 70.25 33.4623 70.25 31.6562C70.25 29.2416 69.2929 26.9253 67.5884 25.2149C65.8839 23.5046 63.5709 22.5395 61.1563 22.5312Z\" />\n</g>\n<defs>\n<clipPath id=\"clip0_1_4\">\n<rect width=\"100\" height=\"100\" />\n</clipPath>\n</defs>\n</svg>\n`;\nlet svg_callDefaultRoomUserPicIcon = `\n<svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path opacity=\"0.4\" d=\"M44.9994 55.56C60.5321 55.56 73.124 43.1225 73.124 27.78C73.124 12.4375 60.5321 0 44.9994 0C29.4666 0 16.8748 12.4375 16.8748 27.78C16.8748 43.1225 29.4666 55.56 44.9994 55.56Z\" />\n<path d=\"M89.9499 83.379C89.9753 82.9836 89.9753 82.5872 89.9499 82.1918C89.8386 80.7306 89.424 79.3037 88.7293 77.9909C85.9953 72.6484 78.3302 70.2283 71.9344 68.8584C67.3713 67.9085 62.735 67.2978 58.0689 67.032L53.1866 66.6667H50.9896H48.2556H41.7134H38.9793H36.7823L31.9001 67.032C27.2339 67.2978 22.5976 67.9085 18.0345 68.8584C11.6388 70.0457 3.97364 72.5114 1.23959 77.9909C0.544908 79.3037 0.130334 80.7306 0.0190286 82.1918C-0.00634286 82.5872 -0.00634286 82.9836 0.0190286 83.379C-0.00439641 83.7744 -0.00439641 84.1708 0.0190286 84.5662C0.151826 86.0149 0.582864 87.4258 1.28841 88.7215C4.02247 94.0639 11.6876 96.484 18.0833 97.8539C22.6549 98.7594 27.2877 99.3696 31.9489 99.6804L36.8311 100H38.0029H39.0281H51.0384H52.0637H53.2354L58.1177 99.6804C62.7789 99.3696 67.4116 98.7594 71.9832 97.8539C78.379 96.621 86.0441 94.2009 88.7782 88.7215C89.4508 87.3848 89.8641 85.9469 89.9987 84.4749C90.0049 84.109 89.9886 83.7431 89.9499 83.379Z\" />\n</svg>\n`;\nlet svg_callLeftArrowIcon = `\n<svg width=\"50\" height=\"100\" viewBox=\"0 0 50 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M19.3369 49.7901L47.6724 16.1905C49.1632 14.4121 50 12.0065 50 9.49901C50 6.99151 49.1632 4.58589 47.6724 2.80755C46.9283 1.91793 46.043 1.21182 45.0676 0.729955C44.0922 0.248087 43.046 0 41.9893 0C40.9326 0 39.8864 0.248087 38.911 0.729955C37.9356 1.21182 37.0503 1.91793 36.3062 2.80755L2.36768 43.0512C1.61744 43.9336 1.02196 44.9833 0.615593 46.14C0.209222 47.2966 0 48.5372 0 49.7901C0 51.0431 0.209222 52.2837 0.615593 53.4403C1.02196 54.5969 1.61744 55.6467 2.36768 56.5291L36.3062 97.2473C37.0541 98.127 37.9411 98.8229 38.9164 99.2953C39.8916 99.7676 40.9359 100.007 41.9893 99.9998C43.0427 100.007 44.087 99.7676 45.0622 99.2953C46.0374 98.8229 46.9245 98.127 47.6724 97.2473C49.1632 95.469 50 93.0633 50 90.5558C50 88.0483 49.1632 85.6427 47.6724 83.8644L19.3369 49.7901Z\" />\n</svg>\n`;\nlet svg_callRightArrowIcon = `\n<svg width=\"50\" height=\"100\" viewBox=\"0 0 50 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M47.6323 43.2565L13.6938 2.82094C12.9497 1.92708 12.0644 1.2176 11.089 0.733435C10.1136 0.24927 9.06738 0 8.01071 0C6.95404 0 5.90782 0.24927 4.93242 0.733435C3.95701 1.2176 3.07172 1.92708 2.32761 2.82094C0.836789 4.60776 0 7.02485 0 9.54431C0 12.0638 0.836789 14.4809 2.32761 16.2677L30.6631 50.0276L2.32761 83.7875C0.836789 85.5743 0 87.9914 0 90.5108C0 93.0303 0.836789 95.4474 2.32761 97.2342C3.07554 98.1181 3.96255 98.8174 4.93778 99.2919C5.91301 99.7665 6.95728 100.007 8.01071 99.9998C9.06414 100.007 10.1084 99.7665 11.0836 99.2919C12.0589 98.8174 12.9459 98.1181 13.6938 97.2342L47.6323 56.7986C48.3826 55.9121 48.978 54.8573 49.3844 53.6952C49.7908 52.533 50 51.2865 50 50.0276C50 48.7686 49.7908 47.5221 49.3844 46.36C48.978 45.1978 48.3826 44.1431 47.6323 43.2565Z\" />\n</svg>\n`;\nlet svg_callPinUserBoxIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M73.2111 1.83971C72.0439 0.666444 70.4584 0.00470624 68.8033 2.50056e-05C67.1481 -0.00465623 65.5589 0.648104 64.3851 1.81475C63.7658 2.4459 63.2872 3.20093 62.9807 4.03021C57.7874 14.8641 52.0698 20.9738 44.8542 24.5809C36.7585 28.575 27.4643 31.3521 12.4838 31.3521C11.2515 31.3579 10.0482 31.7261 9.02377 32.4108C7.99931 33.0955 7.19899 34.0664 6.72251 35.2026C6.25081 36.3434 6.12772 37.5983 6.36879 38.809C6.60985 40.0197 7.20428 41.1318 8.077 42.005L28.3194 62.2436L0 100L37.7634 71.6859L57.9996 91.9183C58.5793 92.5026 59.2716 92.9633 60.0345 93.2725C60.796 93.5908 61.6074 93.7593 62.4189 93.7593C63.2303 93.7593 64.0418 93.5908 64.8033 93.2725C65.9447 92.8044 66.9211 92.0072 67.608 90.9826C68.2949 89.9579 68.6614 88.7521 68.6608 87.5186C68.6608 72.5408 71.4322 63.2484 75.4207 55.279C79.0223 48.0647 85.1331 42.3482 95.9753 37.156C96.8043 36.8523 97.558 36.3733 98.1849 35.7518C99.3518 34.5782 100.005 32.9892 100 31.3344C99.9953 29.6796 99.3334 28.0944 98.1599 26.9274L73.2111 1.83971Z\" />\n</svg>\n\n`;\nlet svg_callUnpinUserBoxIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M73.0585 2.15144C71.8937 0.981899 70.3115 0.322263 68.6599 0.317597C67.0082 0.31293 65.4223 0.963618 64.2509 2.12656C63.6329 2.75571 63.1553 3.50834 62.8494 4.33498C57.667 15.1345 51.9613 21.2247 44.7607 24.8204C36.6819 28.8018 27.4071 31.5701 12.4578 31.5701C11.2281 31.5759 10.0273 31.9429 9.00496 32.6254C7.98264 33.3079 7.18399 34.2758 6.7085 35.4084C6.23778 36.5455 6.11494 37.7965 6.35551 39.0033C6.59608 40.2102 7.18926 41.3188 8.06017 42.1892L28.2604 62.3635L0 100L37.6847 71.7758L57.8787 91.9439C58.4572 92.5264 59.148 92.9857 59.9094 93.2939C60.6693 93.6111 61.479 93.7791 62.2888 93.7791C63.0985 93.7791 63.9083 93.6111 64.6682 93.2939C65.8073 92.8272 66.7816 92.0326 67.4671 91.0112C68.1526 89.9898 68.5183 88.7878 68.5177 87.5582C68.5177 72.628 71.2833 63.3651 75.2635 55.421C78.8576 48.2297 84.9557 42.5313 95.7752 37.3555C96.6025 37.0528 97.3546 36.5754 97.9803 35.9558C99.1447 34.7859 99.7962 33.2021 99.7915 31.5525C99.7869 29.9029 99.1264 28.3228 97.9553 27.1595L73.0585 2.15144Z\" />\n<path d=\"M15.2712 1.40169C14.8701 1.78317 14.5521 2.23667 14.3355 2.73604C14.119 3.2354 14.0081 3.77074 14.0093 4.31118C14.0105 4.85161 14.1238 5.38645 14.3427 5.88483C14.5615 6.38321 14.8815 6.83527 15.2843 7.21494L92.6395 80.73C93.039 81.1128 93.514 81.4163 94.037 81.623C94.56 81.8296 95.1208 81.9354 95.6869 81.9341C96.253 81.9328 96.8132 81.8245 97.3353 81.6155C97.8574 81.4065 98.331 81.1009 98.7288 80.7163C99.1299 80.3348 99.4479 79.8813 99.6645 79.3819C99.881 78.8826 99.9919 78.3472 99.9907 77.8068C99.9895 77.2663 99.8762 76.7315 99.6573 76.2331C99.4385 75.7348 99.1185 75.2827 98.7157 74.903L21.3605 1.38795C20.961 1.00514 20.486 0.701647 19.963 0.494986C19.44 0.288326 18.8792 0.182588 18.3131 0.183865C17.747 0.185142 17.1868 0.293409 16.6647 0.502427C16.1426 0.711445 15.669 1.01708 15.2712 1.40169Z\" />\n</svg>\n`;\nconst callMainContainer = document.getElementById(\"callMainContainer\");\nconst waitingSection = document.getElementById(\"waitingSection\");\nconst beforeCallSection = document.getElementById(\"beforeCallSection\");\nconst onCallSection = document.getElementById(\"onCallSection\");\nconst onCallMainView = document.getElementById(\"onCallMainView\");\nconst onCallUserBoxSlider = document.getElementById(\"onCallUserBoxSlider\");\nconst onCallMainViewUserBoxContainer = document.getElementById(\"onCallMainViewUserBoxContainer\");\nconst onCallSliderUserBoxContainer = document.getElementById(\"onCallSliderUserBoxContainer\");\nconst onCallCallStatus = document.getElementById(\"onCallCallStatus\");\nconst onCallMainBtnContainer = document.getElementById(\"onCallMainBtnContainer\");\nlet callRoom;\nlet ownCallRoomMemberData;\nlet isNonGroupChatCall = false;\nlet isNonGroupChatCallConnected = false;\nlet myMediaStream;\nlet isScreenShareOn = false;\nlet isCameraOn = true;\nlet isAudioOn = true;\nlet myPeer;\nlet allMediaConnections = {};\nlet bestScreenWidth;\nlet bestScreenWidthRatio = 4 / 3;\nlet mainViewCss = window.getComputedStyle(onCallMainView);\n\n\n\nasync function createOnCallSection(callRoomData, mediaStream, streamTypeData) {\n  callRoom = callRoomData;\n  myMediaStream = mediaStream;\n  isScreenShareOn = streamTypeData.isScreenShareOn;\n  isCameraOn = streamTypeData.isCameraOn;\n  isAudioOn = streamTypeData.isAudioOn;\n  console.log(\"oginal callRoomData:\", callRoom);\n  waitingSection.classList.remove(\"waiting-section--hide\");\n  let onCallUserBoxSliderHtml = `\n     <div class=\"on-call-user-box-slider-btn on-call-user-box-slider-btn--unselected\">\n           <div class=\"on-call-user-box-slider-btn__icon on-call-user-box-slider-btn__icon--unselected\">\n           ${svg_callRightArrowIcon}\n           </div>\n           <div class=\"on-call-user-box-slider-btn__icon on-call-user-box-slider-btn__icon--selected\">\n           ${svg_callLeftArrowIcon}\n           </div>\n     </div>\n`;\n  onCallUserBoxSlider.insertAdjacentHTML(\"beforeend\", onCallUserBoxSliderHtml);\n  let onCallMainBtnContainerHtml;\n\n  if (callRoom.isChatRoom) {\n    if (callRoom.roomChat.isGroupChat) {\n      let {\n        groupChatCallRoomBtns\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallSectionBtns_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallSectionBtns.dev */ \"./dev-javascripts/call/js/onCallSectionBtns.dev.js\"));\n      onCallMainBtnContainerHtml = groupChatCallRoomBtns;\n    } else {\n      let {\n        nonGroupChatCallRoomBtns\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallSectionBtns_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallSectionBtns.dev */ \"./dev-javascripts/call/js/onCallSectionBtns.dev.js\"));\n      onCallMainBtnContainerHtml = nonGroupChatCallRoomBtns;\n    }\n  } else {\n    let {\n      nonChatCallRoomBtns\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallSectionBtns_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallSectionBtns.dev */ \"./dev-javascripts/call/js/onCallSectionBtns.dev.js\"));\n    onCallMainBtnContainerHtml = nonChatCallRoomBtns;\n  }\n\n  onCallMainBtnContainer.insertAdjacentHTML(\"beforeend\", onCallMainBtnContainerHtml);\n\n  if (isScreenShareOn) {\n    let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n    if (cameraBtn) cameraBtn.classList.add(\"on-call-btn--disable\");\n  }\n\n  if (callRoom.hasOwnProperty(\"members\")) {\n    console.log(\"Members count:\", callRoom.members.length);\n    ownCallRoomMemberData = callRoom.members.find(member => {\n      return member.user._id.toString() === callRoom.ownMemberUserId.toString();\n    });\n\n    if (callRoom.members.length > 1) {\n      callRoom.members.forEach(member => {\n        if (member.user._id.toString() === callRoom.ownMemberUserId.toString()) {\n          let onCallUserBox = createOnCallUserBox(member);\n          changeOnCallUserBoxBtn(onCallUserBox, \"main-view\");\n          onCallMainViewUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        } else {\n          let onCallUserBox = createOnCallUserBox(member);\n          changeOnCallUserBoxBtn(onCallUserBox, \"slider\");\n          onCallSliderUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        }\n      });\n      showOnCallMainViewUserBoxContainer();\n      changeHeightAndWidthOfOnCallUserBoxInMainView();\n    } else {\n      if (callRoom.members.length === 1) {\n        let onCallUserBox = createOnCallUserBox(callRoom.members[0]);\n        changeOnCallUserBoxBtn(onCallUserBox, \"slider\");\n        onCallSliderUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n      }\n\n      if (callRoom.isChatRoom) {\n        if (callRoom.roomChat.isGroupChat === false) {\n          isNonGroupChatCall = true;\n          createOnCallCallStatus(\"Connecting\");\n        } else {\n          createOnCallCallStatus(\"Waiting for others to join\");\n        }\n      } else {\n        createOnCallCallStatus(\"Send this link to others so they can join\");\n      }\n    }\n  }\n\n  await initialiseCall();\n  initialiseOnCallMainViewResizeObserver();\n  initialiseEventForOnCallSection();\n  setTimeout(() => {\n    beforeCallSection.classList.add(\"before-call-section--hide\");\n    waitingSection.classList.add(\"waiting-section--hide\");\n    onCallSection.classList.remove(\"on-call-section--hide\");\n  }, 2000);\n}\n\nfunction initialiseOnCallMainViewResizeObserver() {\n  bestScreenWidth = parseFloat(mainViewCss.width);\n  const resizeObserverForMainView = new ResizeObserver(entries => {\n    let elementWidth = entries[0].contentBoxSize[0].inlineSize;\n    let elementHeight = entries[0].contentBoxSize[0].blockSize;\n\n    if (elementWidth > elementHeight * bestScreenWidthRatio) {\n      bestScreenWidth = elementHeight * bestScreenWidthRatio;\n    } else {\n      bestScreenWidth = parseFloat(mainViewCss.width);\n    }\n\n    changeHeightAndWidthOfOnCallUserBoxInMainView(entries[0].contentBoxSize[0].inlineSize, entries[0].contentBoxSize[0].blockSize);\n  });\n  resizeObserverForMainView.observe(onCallMainView);\n}\n\nasync function initialiseCall() {\n  try {\n    if (isCameraOn) {\n      onCallCameraOn();\n    } else {\n      onCallCameraOff();\n    }\n\n    if (isScreenShareOn) {\n      onCallSwitchCameraToScreenShare();\n    } else {\n      onCallSwitchScreenShareToCamera();\n    }\n\n    if (isAudioOn) {\n      onCallAudioOn();\n    } else {\n      onCallAudioOff();\n    }\n\n    myPeer = new peerjs__WEBPACK_IMPORTED_MODULE_1__.Peer((0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), {\n      debug: 0\n    });\n    fetch(\"/call-room-member/update-peer-id\", {\n      method: \"Put\",\n      // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: loginUser._id.toString(),\n        callRoomId: callRoom._id.toString(),\n        peerId: myPeer.id\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(response);\n    }).then(async data => {\n      if (data.isSuccess) {} else {\n        let {\n          createMainNotification\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n        createMainNotification(data.error, \"error\");\n      }\n    }).catch(async err => {\n      console.log(err);\n      let {\n        createMainNotification\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n      createMainNotification(\"Server error in updating peer,please refresh your page\", \"error\");\n    });\n    addStreamToOnCallUserBox(loginUser._id.toString(), myMediaStream);\n    myPeer.on(\"open\", id => {\n      let eventData = {\n        callRoomId: callRoom._id,\n        userId: loginUser._id,\n        peerId: myPeer.id\n      };\n      socket.emit(\"call:join-call-room\", eventData);\n    });\n    myPeer.on(\"call\", mediaConnection => {\n      mediaConnection.answer(myMediaStream);\n      mediaConnection.once(\"stream\", otherMediaStream => {\n        addStreamToOnCallUserBox(mediaConnection.metadata.userId, otherMediaStream);\n      });\n      allMediaConnections[mediaConnection.peer] = mediaConnection;\n    });\n    myPeer.on(\"error\", err => {\n      if (!myPeer.destroyed) myPeer.destroy();\n      console.log(\"Error in peer: \", err.type);\n    });\n    myPeer.on(\"disconnected\", () => {\n      myPeer.reconnect();\n    });\n    myPeer.on(\"close\", () => {\n      let data = {\n        callRoomId: callRoom._Id\n      };\n      fetch(\"/call/left-call-room\", {\n        method: \"POST\",\n        // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(response);\n      }).then(async data => {\n        if (data.isSuccess) {\n          onCallMainViewUserBoxContainer.innerHTML = \"\";\n          onCallSliderUserBoxContainer.innerHTML = \"\";\n          let {\n            createAfterCallSection\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n          createAfterCallSection(callRoom, data.isCallEnded);\n        } else {\n          myPeer.destroy();\n        }\n      }).catch(async err => {\n        console.log(err);\n        myPeer.destroy();\n      });\n\n      for (let peer in allMediaConnections) {\n        allMediaConnections[peer].close();\n        delete allMediaConnections.peer;\n      }\n    });\n\n    if (isNonGroupChatCall === true) {\n      setTimeout(() => {\n        if (isNonGroupChatCallConnected === false) {\n          onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-effect\")[0].classList.add(\"on-call-call-status__room-status-effect--hide\");\n          updateOnCallCallStatus(\"Time out\");\n          onCallMainBtnContainer.classList.add(\"on-call-main-btn-container--hide\");\n          onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\");\n          setTimeout(() => {\n            sendRequestToEndCall();\n          }, 3000);\n        }\n      }, 1000 * 90);\n    }\n  } catch (e) {\n    console.log(\"error in calling:\", e);\n  }\n}\n\nfunction initialiseEventForOnCallSection() {\n  onCallMainBtnContainer.addEventListener(\"click\", async e => {\n    let onCallBtn = e.target.closest(`.on-call-btn`);\n\n    if (onCallBtn && onCallMainBtnContainer.contains(onCallBtn)) {\n      if (onCallBtn.dataset.btnType === \"call-video\") {\n        if (isScreenShareOn === false) {\n          if (onCallBtn.dataset.btnWorkingState === \"call-video-off\") {\n            onCallCameraOff();\n          } else if (onCallBtn.dataset.btnWorkingState === \"call-video-on\") {\n            onCallCameraOn();\n          }\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-audio\") {\n        if (onCallBtn.dataset.btnWorkingState === \"call-audio-off\") {\n          onCallAudioOff();\n        } else if (onCallBtn.dataset.btnWorkingState === \"call-audio-on\") {\n          onCallAudioOn();\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-share-screen\") {\n        if (onCallBtn.dataset.btnWorkingState === \"call-share-screen-on\") {\n          let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n          if (cameraBtn) cameraBtn.classList.add(\"on-call-btn--disable\");\n          onCallSwitchCameraToScreenShare();\n        } else if (onCallBtn.dataset.btnWorkingState === \"call-share-screen-off\") {\n          let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n          if (cameraBtn) cameraBtn.classList.remove(\"on-call-btn--disable\");\n          onCallSwitchScreenShareToCamera();\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-share-room\") {\n        if (onCallBtn.dataset.btnWorkingState === \"open-modal\") {\n          onCallBtn.classList.remove(\"on-call-btn--unselected\");\n          onCallBtn.classList.add(\"on-call-btn--selected\");\n          onCallBtn.dataset.btnWorkingState = \"close-modal\";\n          let {\n            createOnCallRoomShareModal\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallRoomShareModal_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallRoomShareModal.dev */ \"./dev-javascripts/call/js/onCallRoomShareModal.dev.js\"));\n          createOnCallRoomShareModal();\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-room-info\") {\n        if (onCallBtn.dataset.btnWorkingState === \"open-modal\") {\n          onCallBtn.classList.remove(\"on-call-btn--unselected\");\n          onCallBtn.classList.add(\"on-call-btn--selected\");\n          onCallBtn.dataset.btnWorkingState = \"close-modal\";\n          let {\n            createOnCallRoomInfoModal\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallRoomInfoModal_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallRoomInfoModal.dev */ \"./dev-javascripts/call/js/onCallRoomInfoModal.dev.js\"));\n          createOnCallRoomInfoModal(callRoom);\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-end\") {\n        if (onCallBtn.dataset.btnWorkingState === \"end-call\") {\n          sendRequestToEndCall();\n        }\n      }\n    }\n  });\n  let onCallUserBoxSliderBtn = onCallUserBoxSlider.getElementsByClassName(\"on-call-user-box-slider-btn\")[0];\n\n  if (onCallUserBoxSliderBtn) {\n    onCallUserBoxSliderBtn.addEventListener(\"click\", async e => {\n      if (!onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--slide\")) {\n        onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--slide\");\n        onCallUserBoxSliderBtn.classList.remove(\"on-call-user-box-slider-btn--unselected\");\n        onCallUserBoxSliderBtn.classList.add(\"on-call-user-box-slider-btn--selected\");\n      } else {\n        onCallUserBoxSlider.classList.remove(\"on-call-user-box-slider--slide\");\n        onCallUserBoxSliderBtn.classList.remove(\"on-call-user-box-slider-btn--selected\");\n        onCallUserBoxSliderBtn.classList.add(\"on-call-user-box-slider-btn--unselected\");\n      }\n    });\n  }\n\n  if (onCallMainView) onCallMainView.addEventListener(\"click\", e => {\n    if (!onCallMainViewUserBoxContainer.classList.contains(\"on-call-main-view-user-box-container--hide\")) {\n      let onCallUserBoxBtn = e.target.closest(`.on-call-user-box__btn`);\n\n      if (onCallUserBoxBtn && onCallMainView.contains(onCallUserBoxBtn)) {\n        let onCallUserBox = onCallUserBoxBtn.closest(\".on-call-user-box\");\n\n        if (onCallUserBoxBtn.dataset.btnType === \"user-pin-unpin\") {\n          if (onCallUserBoxBtn.dataset.btnWorkingState === \"pin-user-box\") {\n            if (onCallSliderUserBoxContainer.contains(onCallUserBox)) {\n              onCallMainViewUserBoxContainer.appendChild(onCallUserBox);\n              changeHeightAndWidthOfOnCallUserBoxInMainView();\n              let leftSliderUserBoxCount = onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length;\n\n              if (leftSliderUserBoxCount === 0) {\n                if (!onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")) onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\");\n              }\n\n              onCallUserBoxBtn.classList.remove(\"on-call-user-box__btn--main-view\");\n              onCallUserBoxBtn.classList.add(\"on-call-user-box__btn--slider\");\n              onCallUserBoxBtn.dataset.btnWorkingState = \"unpin-user-box\";\n            }\n          } else if (onCallUserBoxBtn.dataset.btnWorkingState === \"unpin-user-box\") {\n            if (onCallMainViewUserBoxContainer.contains(onCallUserBox)) {\n              let mainViewUserBoxCount = onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length;\n\n              if (mainViewUserBoxCount > 1) {\n                onCallSliderUserBoxContainer.appendChild(onCallUserBox);\n                let sliderUserBoxCount = onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length;\n\n                if (sliderUserBoxCount > 0) {\n                  if (onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")) onCallUserBoxSlider.classList.remove(\"on-call-user-box-slider--hide\");\n                }\n\n                resetHeightAndWidthOfOnCallUserBox();\n                changeHeightAndWidthOfOnCallUserBoxInMainView();\n                onCallUserBoxBtn.classList.remove(\"on-call-user-box__btn--slider\");\n                onCallUserBoxBtn.classList.add(\"on-call-user-box__btn--main-view\");\n                onCallUserBoxBtn.dataset.btnWorkingState = \"pin-user-box\";\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction connectToNewJoinedMember(otherUserId, otherPeerId, myStream) {\n  const mediaConnection = myPeer.call(otherPeerId, myStream, {\n    metadata: {\n      userId: loginUser._id.toString(),\n      callRoomId: callRoom._id\n    }\n  });\n  mediaConnection.once(\"stream\", otherMediaStream => {\n    fetchCallRoomMemberAndCreateUserBoxWithStream(mediaConnection.peer, callRoom._id, otherMediaStream);\n  });\n  mediaConnection.on(\"close\", () => {\n    removeOnCallUserBox(otherUserId);\n  });\n  mediaConnection.on(\"error\", function (err) {\n    console.log(\"Error in media connection:\", err.type);\n  });\n  allMediaConnections[mediaConnection.peer] = mediaConnection;\n}\n\nfunction createOnCallUserBox(member) {\n  let onCallUserBox = document.createElement(\"div\");\n  onCallUserBox.classList.add(\"on-call-user-box\");\n  onCallUserBox.dataset.userId = member.user._id;\n  let onCallUserBoxHtml = `\n          <div class=\"on-call-user-box__video\">\n                        </div>\n\n          <div class=\"on-call-user-box__audio\">\n             <div class=\"on-call-user-box__audio-icon on-call-user-box__audio-icon--on\">\n               ${svg_callAudioOnIcon}\n             </div>\n             <div class=\"on-call-user-box__audio-icon on-call-user-box__audio-icon--off\">\n               ${svg_callAudioOffIcon}\n             </div>\n         </div>\n\n   <div class=\"on-call-user-box__info\">\n       <div class='on-call-user-box__pic ${member.user.hasOwnProperty(\"profile\") && member.user.profile !== \"\" ? \"on-call-user-box__pic--img\" : \"on-call-user-box__pic--svg\"}'>\n\n         ${svg_callDefaultRoomUserPicIcon}\n         <img src='${member.user.hasOwnProperty(\"profile\") && member.user.profile !== \"\" ? member.user.profile : \"\"}' alt=\"\">   \n      </div>\n\n      <div class=\"on-call-user-box__name\"></div>\n    </div>\n\n\n    <div class=\"on-call-user-box__btn-container\">\n       <div class=\"on-call-user-box__btn\"\n       data-btn-type=\"user-pin-unpin\" data-btn-working-state=\"\"\n       >\n             <div class=\"on-call-user-box__btn-icon on-call-user-box__btn-icon--slider\">\n             ${svg_callPinUserBoxIcon}\n             </div>\n\n             <div class=\"on-call-user-box__btn-icon on-call-user-box__btn-icon--main-view\">\n             ${svg_callUnpinUserBoxIcon}\n             </div>\n         </div>\n    </div>\n    `;\n  onCallUserBox.insertAdjacentHTML(\"beforeend\", onCallUserBoxHtml);\n  let name;\n\n  if (member.user._id.toString() === loginUser._id.toString()) {\n    name = \"(You)\";\n  } else {\n    name = member.user.firstName + \" \" + member.user.lastName;\n  }\n\n  onCallUserBox.getElementsByClassName(\"on-call-user-box__name\")[0].textContent = name;\n\n  if (member.isAudioOn) {\n    onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0].classList.add(\"on-call-user-box__audio--on\");\n  } else {\n    onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0].classList.add(\"on-call-user-box__audio--off\");\n  }\n\n  if (!(member.isCameraOn || member.isScreenShareOn)) {\n    onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n  }\n\n  if (member.isCameraOn) {\n    onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0].classList.add(\"on-call-user-box__video--camera\");\n  }\n\n  return onCallUserBox;\n}\n\nfunction changeOnCallUserBoxBtn(userBox, position) {\n  let userBoxPinUnpinBtn = userBox.querySelector(`.on-call-user-box__btn[data-btn-type=\"user-pin-unpin\"]`);\n\n  if (userBoxPinUnpinBtn) {\n    if (position === \"main-view\") {\n      userBoxPinUnpinBtn.classList.add(\"on-call-user-box__btn--main-view\");\n      userBoxPinUnpinBtn.dataset.btnWorkingState = \"unpin-user-box\";\n    }\n\n    if (position === \"slider\") {\n      userBoxPinUnpinBtn.classList.add(\"on-call-user-box__btn--slider\");\n      userBoxPinUnpinBtn.dataset.btnWorkingState = \"pin-user-box\";\n    }\n  }\n}\n\nfunction fetchCallRoomMemberAndCreateUserBoxWithStream(peerId, callRoomId, stream) {\n  fetch(\"/call-room-member/data/member\", {\n    method: \"POST\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      peerId: peerId,\n      callRoomId: callRoomId\n    })\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response);\n  }).then(async data => {\n    if (data.isSuccess) {\n      let mainViewUserBoxCount = onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length; // let sliderUserBoxCount =\n      //   onCallSliderUserBoxContainer.getElementsByClassName(\n      //     \"on-call-user-box\"\n      //   ).length\n\n      let onCallUserBox = createOnCallUserBox(data.callRoomMember);\n\n      if (mainViewUserBoxCount === 0) {\n        changeOnCallUserBoxBtn(onCallUserBox, \"main-view\");\n        onCallMainViewUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        changeHeightAndWidthOfOnCallUserBoxInMainView();\n      } else {\n        changeOnCallUserBoxBtn(onCallUserBox, \"slider\");\n        onCallSliderUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        resetHeightAndWidthOfOnCallUserBox();\n        changeHeightAndWidthOfOnCallUserBoxInMainView();\n      }\n\n      addStreamToOnCallUserBox(data.callRoomMember.user._id, stream);\n    } else {\n      let {\n        createMainNotification\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n      createMainNotification(data.error, \"error\");\n    }\n  }).catch(async err => {\n    console.log(err);\n    let {\n      createMainNotification\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n    createMainNotification(\"Server error in fetching room member,please refresh your page\", \"error\");\n  });\n}\n\nfunction addStreamToOnCallUserBox(userId, stream) {\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${userId}\"]`);\n\n  if (onCallUserBox) {\n    // onCallUserBoxVideo.innerHTML = \"\"\n    let video = document.createElement(\"video\");\n\n    if (userId.toString() === loginUser._id.toString()) {\n      video.muted = true;\n    }\n\n    video.srcObject = stream;\n    video.addEventListener(\"loadedmetadata\", () => {\n      video.play();\n    });\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n    onCallUserBoxVideo.insertAdjacentElement(\"beforeend\", video);\n  }\n}\n\nfunction removeOnCallUserBox(userId) {\n  let onCallUserBoxs = [...document.querySelectorAll(`.on-call-user-box[data-user-id=\"${userId}\"]`)];\n\n  if (onCallUserBoxs.length > 0) {\n    onCallUserBoxs.forEach(userBox => {\n      userBox.remove();\n    });\n    changeHeightAndWidthOfOnCallUserBoxInMainView();\n  }\n}\n\nfunction createOnCallCallStatus(callStatus) {\n  onCallCallStatus.innerHTML = `\n        <div class='on-call-call-status__room-pic ${callRoom.hasOwnProperty(\"roomPic\") && callRoom.roomPic !== \"\" ? \"on-call-call-status__room-pic--img\" : \"on-call-call-status__room-pic--svg\"}'>\n      \n            ${svg_callDefaultRoomPicIcon}\n              <img src='${callRoom.hasOwnProperty(\"roomPic\") && callRoom.roomPic !== \"\" ? callRoom.roomPic : \"\"}'\n             alt=\"\">\n         </div>\n         \n         <div class=\"on-call-call-status__room-status\">\n         <div class=\"on-call-call-status__room-status-text\" id=\"onCallRoomStatusText\">\n         </div>\n         <div class=\"on-call-call-status__room-status-effect\">\n         </div>\n\n         </div>\n      `;\n  onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-effect\")[0].innerHTML = `<span>.</span> <span>.</span> <span>.</span>`;\n  updateOnCallCallStatus(callStatus);\n}\n\nfunction updateOnCallCallStatus(callStatus) {\n  let onCallCallStatus = document.getElementsByClassName(\"on-call-call-status\")[0];\n\n  if (onCallCallStatus) {\n    onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-text\")[0].textContent = callStatus;\n  }\n\n  if (onCallCallStatus.classList.contains(\"on-call-call-status--hide\")) onCallCallStatus.classList.remove(\"on-call-call-status--hide\");\n}\n\nfunction hideOnCallCallStatus() {\n  let onCallCallStatus = document.getElementsByClassName(\"on-call-call-status\")[0];\n  if (!onCallCallStatus.classList.contains(\"on-call-call-status--hide\")) onCallCallStatus.classList.add(\"on-call-call-status--hide\");\n}\n\nfunction changeHeightAndWidthOfOnCallUserBoxInMainView(mainViewWidth, mainViewHeight) {\n  let onCallUserBoxs = [...onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\")];\n  if (mainViewWidth === undefined) mainViewWidth = parseFloat(mainViewCss.width);\n  if (mainViewHeight === undefined) mainViewHeight = parseFloat(mainViewCss.height);\n  let noOfUsers = onCallUserBoxs.length;\n  let column = Math.ceil(Math.sqrt(noOfUsers));\n  let percent = 100 / column - 1;\n  let bestHeightPercent = mainViewWidth / mainViewHeight * (1 / bestScreenWidthRatio) * percent;\n\n  if (column <= 3) {\n    if (noOfUsers <= column * (column - 1)) {\n      onCallUserBoxs.forEach(userBox => {\n        userBox.style.width = percent + \"%\";\n        userBox.style.height = bestHeightPercent + \"%\";\n        userBox.style.maxHeight = 100 + \"%\";\n        userBox.style.maxWidth = percent + \"%\";\n      });\n    } else {\n      onCallUserBoxs.forEach(userBox => {\n        userBox.style.width = percent + \"%\";\n        userBox.style.height = bestHeightPercent + \"%\";\n        userBox.style.maxHeight = 100 + \"%\";\n        userBox.style.maxWidth = bestScreenWidth / column + \"px\";\n      });\n    }\n  } else {\n    onCallUserBoxs.forEach(userBox => {\n      userBox.style.width = percent + \"%\";\n      userBox.style.height = bestHeightPercent + \"%\";\n      userBox.style.maxHeight = 100 + \"%\";\n      userBox.style.maxWidth = bestScreenWidth / column + \"px\";\n    });\n  }\n}\n\nfunction resetHeightAndWidthOfOnCallUserBox() {\n  let onCallUserBoxs = [...document.getElementsByClassName(\"on-call-user-box\")];\n  onCallUserBoxs.forEach(userBox => {\n    userBox.style = \"\";\n  });\n}\n\nfunction onCallCameraOff() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--selected\");\n    onCallBtn.classList.remove(\"on-call-btn--unselected\");\n    onCallBtn.dataset.btnWorkingState = \"call-video-on\";\n  }\n\n  if (isCameraOn === true) {\n    isCameraOn = false;\n    changeCameraStream(false, loginUser._id.toString());\n  }\n}\n\nfunction onCallCameraOn() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--unselected\");\n    onCallBtn.classList.remove(\"on-call-btn--selected\");\n    onCallBtn.dataset.btnWorkingState = \"call-video-off\";\n  }\n\n  if (isCameraOn === false) {\n    isCameraOn = true;\n    changeCameraStream(true, loginUser._id.toString());\n  }\n}\n\nasync function changeCameraStream(isEnabled, userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    if (isScreenShareOn === false) {\n      if (isEnabled === true) {\n        let {\n          getCameraVideoTrack\n        } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../call.dev */ \"./dev-javascripts/call/call.dev.js\"));\n        let callVideoTrack = await getCameraVideoTrack();\n        let trackKind = \"video\";\n\n        if (callVideoTrack) {\n          isCameraOn = true;\n          trackKind = callVideoTrack.kind;\n          let videoTracks = myMediaStream.getVideoTracks();\n          videoTracks.forEach(track => {\n            track.stop();\n            myMediaStream.removeTrack(track);\n          });\n          myMediaStream.addTrack(callVideoTrack);\n          let peerId;\n\n          for (peerId in allMediaConnections) {\n            let otherUserConnection = allMediaConnections[peerId].peerConnection;\n            otherUserConnection.getSenders().forEach(function (sender) {\n              if (sender.track.kind === trackKind) {\n                sender.replaceTrack(callVideoTrack);\n              }\n            });\n          }\n        }\n      } else {\n        isCameraOn = false;\n        let videoTracks = myMediaStream.getVideoTracks();\n        videoTracks.forEach(track => {\n          track.stop();\n        });\n      }\n    } else {// myMediaStream.getVideoTracks()[0].isEnabled = isEnabled\n    }\n\n    let eventData = {\n      isEnabled: isEnabled,\n      callRoomId: callRoom._id,\n      userId: loginUser._id\n    };\n    socket.emit(\"call:toggle-camera-stream\", eventData);\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${userId.toString()}\"]`);\n\n  if (onCallUserBox) {\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n\n    if (isEnabled) {\n      if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n    } else {\n      if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n      if (onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.remove(\"on-call-user-box__video--camera\");\n    }\n  }\n}\n\nfunction onCallAudioOff() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-audio\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.remove(\"on-call-btn--unselected\");\n    onCallBtn.classList.add(\"on-call-btn--selected\");\n    onCallBtn.dataset.btnWorkingState = \"call-audio-on\";\n  }\n\n  if (isAudioOn === true) {\n    isAudioOn = false;\n    changeAudioStream(false, loginUser._id.toString());\n  }\n}\n\nfunction onCallAudioOn() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-audio\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.remove(\"on-call-btn--selected\");\n    onCallBtn.classList.add(\"on-call-btn--unselected\");\n    onCallBtn.dataset.btnWorkingState = \"call-audio-off\";\n  }\n\n  if (isAudioOn === false) {\n    isAudioOn = true;\n    changeAudioStream(true, loginUser._id.toString());\n  }\n}\n\nasync function changeAudioStream(isEnabled, userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    if (isEnabled === true) {\n      let {\n        getCallAudioTrack\n      } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../call.dev */ \"./dev-javascripts/call/call.dev.js\"));\n      let callAudioTrack = await getCallAudioTrack();\n      let trackKind = \"audio\";\n\n      if (callAudioTrack) {\n        trackKind = callAudioTrack.kind;\n        let audioTracks = myMediaStream.getAudioTracks();\n        audioTracks.forEach(track => {\n          track.stop();\n          myMediaStream.removeTrack(track);\n        });\n        myMediaStream.addTrack(callAudioTrack);\n        let peerId;\n\n        for (peerId in allMediaConnections) {\n          let otherUserConnection = allMediaConnections[peerId].peerConnection;\n          otherUserConnection.getSenders().forEach(function (sender) {\n            if (sender.track.kind === trackKind) {\n              sender.replaceTrack(callAudioTrack);\n            }\n          });\n        }\n      }\n    } else {\n      let audioTracks = myMediaStream.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.stop();\n      });\n    }\n\n    let eventData = {\n      isEnabled: isEnabled,\n      callRoomId: callRoom._id,\n      userId: loginUser._id\n    };\n    socket.emit(\"call:toggle-audio-stream\", eventData);\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${userId.toString()}\"]`);\n\n  if (onCallUserBox) {\n    if (isEnabled) {\n      let onCallUserBoxAudio = onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0];\n\n      while (onCallUserBoxAudio.classList.contains(\"on-call-user-box__audio--off\")) {\n        onCallUserBoxAudio.classList.remove(\"on-call-user-box__audio--off\");\n      }\n\n      onCallUserBoxAudio.classList.add(\"on-call-user-box__audio--on\");\n    } else {\n      let onCallUserBoxAudio = onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0];\n\n      while (onCallUserBoxAudio.classList.contains(\"on-call-user-box__audio--on\")) {\n        onCallUserBoxAudio.classList.remove(\"on-call-user-box__audio--on\");\n      }\n\n      onCallUserBoxAudio.classList.add(\"on-call-user-box__audio--off\");\n    }\n  }\n}\n\nfunction onCallSwitchCameraToScreenShare() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--selected\");\n    onCallBtn.classList.remove(\"on-call-btn--unselected\");\n    onCallBtn.dataset.btnWorkingState = \"call-share-screen-off\";\n  }\n\n  if (isScreenShareOn === false) {\n    isScreenShareOn = true;\n    switchCameraToScreenShareStream(loginUser._id.toString());\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n  if (onCallUserBox) {\n    if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n      onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n    }\n\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n    if (onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.remove(\"on-call-user-box__video--camera\");\n  }\n}\n\nasync function switchCameraToScreenShareStream(userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    let {\n      getScreenShareVideoTrack\n    } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../call.dev */ \"./dev-javascripts/call/call.dev.js\"));\n    let screenShareVideoTrack = await getScreenShareVideoTrack();\n    let trackKind = \"video\";\n\n    if (screenShareVideoTrack) {\n      isScreenShareOn = true;\n      trackKind = screenShareVideoTrack.kind;\n      let videoTracks = myMediaStream.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.stop();\n        myMediaStream.removeTrack(track);\n      });\n      myMediaStream.addTrack(screenShareVideoTrack);\n      let peerId;\n\n      for (peerId in allMediaConnections) {\n        let otherUserConnection = allMediaConnections[peerId].peerConnection;\n        otherUserConnection.getSenders().forEach(function (sender) {\n          if (sender.track.kind === trackKind) {\n            sender.replaceTrack(screenShareVideoTrack);\n          }\n        });\n      }\n\n      let eventData = {\n        isEnabled: true,\n        isCameraOn: isCameraOn,\n        callRoomId: callRoom._id,\n        userId: loginUser._id\n      };\n      socket.emit(\"call:toggle-screen-share-stream\", eventData);\n\n      screenShareVideoTrack.onended = () => {\n        isScreenShareOn = false;\n        let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n        if (cameraBtn) cameraBtn.classList.remove(\"on-call-btn--disable\");\n        let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n        if (onCallBtn) {\n          if (onCallBtn.dataset.btnWorkingState === \"call-share-screen-off\") {\n            onCallBtn.classList.add(\"on-call-btn--unselected\");\n            onCallBtn.classList.remove(\"on-call-btn--selected\");\n            onCallBtn.dataset.btnWorkingState = \"call-share-screen-on\";\n\n            if (isCameraOn) {\n              changeCameraStream(true, loginUser._id.toString());\n            } else {\n              changeCameraStream(false, loginUser._id.toString());\n            }\n          }\n        }\n\n        let eventData = {\n          isEnabled: false,\n          isCameraOn: isCameraOn,\n          callRoomId: callRoom._id,\n          userId: loginUser._id\n        };\n        socket.emit(\"call:toggle-screen-share-stream\", eventData);\n        let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n        if (onCallUserBox) {\n          if (isCameraOn) {\n            if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n              onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n            }\n          } else {\n            if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n              onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n            }\n          }\n\n          let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n          if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n        }\n      };\n\n      screenShareVideoTrack.onmute = () => {};\n\n      screenShareVideoTrack.onunmute = () => {};\n    } else {\n      isScreenShareOn = false;\n      let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n      if (cameraBtn) cameraBtn.classList.remove(\"on-call-btn--disable\");\n      let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n      if (onCallBtn) {\n        onCallBtn.classList.add(\"on-call-btn--unselected\");\n        onCallBtn.classList.remove(\"on-call-btn--selected\");\n        onCallBtn.dataset.btnWorkingState = \"call-share-screen-on\";\n      }\n\n      let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n      if (onCallUserBox) {\n        if (isCameraOn) {\n          if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n            onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n          }\n        } else {\n          if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n            onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n          }\n        }\n      }\n\n      let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n      if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n    }\n  }\n}\n\nfunction onCallSwitchScreenShareToCamera() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--unselected\");\n    onCallBtn.classList.remove(\"on-call-btn--selected\");\n    onCallBtn.dataset.btnWorkingState = \"call-share-screen-on\";\n  }\n\n  if (isScreenShareOn === true) {\n    isScreenShareOn = false;\n    switchScreenShareToCameraStream(loginUser._id.toString());\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n  if (onCallUserBox) {\n    if (isCameraOn) {\n      if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n        onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      }\n    } else {\n      if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n        onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n      }\n    }\n\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n    if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n  }\n}\n\nasync function switchScreenShareToCameraStream(userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    isScreenShareOn = false;\n\n    if (isCameraOn) {\n      changeCameraStream(true, loginUser._id.toString());\n    } else {\n      changeCameraStream(false, loginUser._id.toString());\n    }\n\n    let eventData = {\n      isEnabled: false,\n      isCameraOn: isCameraOn,\n      callRoomId: callRoom._id,\n      userId: loginUser._id\n    };\n    socket.emit(\"call:toggle-screen-share-stream\", eventData);\n  }\n}\n\nfunction showOnCallMainViewUserBoxContainer() {\n  if (onCallMainViewUserBoxContainer.classList.contains(\"on-call-main-view-user-box-container--hide\")) {\n    let mainViewUserBoxs = onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\");\n    let sliderUserBoxs = onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\");\n\n    if (mainViewUserBoxs.length === 0) {\n      if (sliderUserBoxs.length > 1) {\n        onCallMainViewUserBoxContainer.appendChild(sliderUserBoxs[0]);\n      }\n    }\n\n    onCallMainViewUserBoxContainer.classList.remove(\"on-call-main-view-user-box-container--hide\");\n  }\n}\n\nfunction sendRequestToEndCall() {\n  let data = {\n    callRoomId: callRoom._id\n  };\n  fetch(\"/call/left-call-room\", {\n    method: \"POST\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response);\n  }).then(async data => {\n    if (data.isSuccess) {\n      onCallMainViewUserBoxContainer.innerHTML = \"\";\n      onCallSliderUserBoxContainer.innerHTML = \"\";\n      let videoTracks = myMediaStream.getVideoTracks();\n      videoTracks.forEach(track => track.stop());\n      let audioTrack = myMediaStream.getAudioTracks();\n      audioTrack.forEach(track => track.stop());\n      let {\n        createAfterCallSection\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n      createAfterCallSection(callRoom, data.isCallEnded);\n    } else {\n      let {\n        createMainNotification\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n      createMainNotification(data.error, \"error\");\n    }\n  }).catch(async err => {\n    console.log(err);\n    let {\n      createMainNotification\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n    createMainNotification(\"Server error, Please try again\", \"error\");\n  });\n}\n\nsocket.on(\"call:joined-new-member\", data => {\n  isNonGroupChatCallConnected = true;\n  hideOnCallCallStatus();\n  showOnCallMainViewUserBoxContainer();\n  connectToNewJoinedMember(data.userId, data.peerId, myMediaStream);\n});\nsocket.on(\"call:disconnect-call-room-member\", data => {\n  allMediaConnections[data.peerId.toString()].close();\n  delete allMediaConnections[data.peerId.toString()];\n  removeOnCallUserBox(data.userId.toString());\n});\nsocket.on(\"call:end-call-room\", async data => {\n  onCallMainViewUserBoxContainer.innerHTML = \"\";\n  onCallSliderUserBoxContainer.innerHTML = \"\";\n  let videoTracks = myMediaStream.getVideoTracks();\n  videoTracks.forEach(track => track.stop());\n  let audioTrack = myMediaStream.getAudioTracks();\n  audioTrack.forEach(track => track.stop());\n  let {\n    createAfterCallSection\n  } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n  createAfterCallSection(data.callRoom, true);\n});\nsocket.on(\"call:toggle-camera-stream\", data => {\n  changeCameraStream(data.isEnabled, data.userId);\n});\nsocket.on(\"call:toggle-audio-stream\", data => {\n  changeAudioStream(data.isEnabled, data.userId);\n});\nsocket.on(\"call:toggle-screen-share-stream\", data => {\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${data.userId.toString()}\"]`);\n\n  if (onCallUserBox) {\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n\n    if (data.isEnabled) {\n      if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n        onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      }\n\n      if (onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.remove(\"on-call-user-box__video--camera\");\n    } else {\n      if (data.isCameraOn) {\n        if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      } else {\n        if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n      }\n\n      if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n    }\n  }\n});\nsocket.on(\"call:call-ringging\", async data => {\n  if (data.callRoomId === callRoom._id.toString()) {\n    updateOnCallCallStatus(\"Ringging\");\n  }\n});\nsocket.on(\"call:call-cancelled\", async data => {\n  if (data.callRoomId === callRoom._id.toString()) {\n    onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-effect\")[0].classList.add(\"on-call-call-status__room-status-effect--hide\");\n    updateOnCallCallStatus(\"Call ended\");\n    onCallMainBtnContainer.classList.add(\"on-call-main-btn-container--hide\");\n    onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\");\n    onCallMainViewUserBoxContainer.innerHTML = \"\";\n    onCallSliderUserBoxContainer.innerHTML = \"\";\n    let videoTracks = myMediaStream.getVideoTracks();\n    videoTracks.forEach(track => track.stop());\n    let audioTrack = myMediaStream.getAudioTracks();\n    audioTrack.forEach(track => track.stop());\n    let {\n      createAfterCallSection\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n    setTimeout(() => {\n      createAfterCallSection(callRoom, true);\n    }, 3000);\n  }\n}); // function switchViewToSingle() {\n//   let onCallUserBoxs = [\n//     ...onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\")\n//   ]\n//   let noOfOnCallUserBoxs = onCallUserBoxs.length\n//   if (noOfOnCallUserBoxs > 1) {\n//     // onCallUserBoxs[0].classList.add(\"on-call-user-box--main-view-info\")\n//     for (let i = 1; i < noOfOnCallUserBoxs; i++) {\n//       onCallSliderUserBoxContainer.appendChild(onCallUserBoxs[i])\n//     }\n//   } else {\n//     if (noOfOnCallUserBoxs === 1) {\n//       onCallSliderUserBoxContainer.appendChild(onCallUserBoxs[0])\n//     }\n//   }\n//   resetHeightAndWidthOfOnCallUserBox()\n//   changeHeightAndWidthOfOnCallUserBoxInMainView()\n//   if (onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")) {\n//     onCallUserBoxSlider.classList.remove(\"on-call-user-box-slider--hide\")\n//   }\n//   let onCallChangeViewBtn = document.getElementById(\"onCallChangeViewBtn\")\n//   if (onCallChangeViewBtn) {\n//     if (onCallChangeViewBtn.dataset.btnWorkingState === \"switch-to-single\") {\n//       onCallChangeViewBtn.classList.remove(\"on-call-btn--selected\")\n//       onCallChangeViewBtn.classList.add(\"on-call-btn--unselected\")\n//       onCallChangeViewBtn.dataset.btnWorkingState = \"switch-to-multiple\"\n//     }\n//   }\n// }\n// function switchViewToMultiple() {\n//   let onCallUserBoxs = [\n//     ...onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\")\n//   ]\n//   for (let i = 0; i < onCallUserBoxs.length; i++) {\n//     onCallMainViewUserBoxContainer.appendChild(onCallUserBoxs[i])\n//   }\n//   changeHeightAndWidthOfOnCallUserBoxInMainView()\n//   if (\n//     !onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")\n//   ) {\n//     onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\")\n//   }\n//   let onCallChangeViewBtn = document.getElementById(\"onCallChangeViewBtn\")\n//   if (onCallChangeViewBtn) {\n//     if (onCallChangeViewBtn.dataset.btnWorkingState === \"switch-to-multiple\") {\n//       onCallChangeViewBtn.classList.remove(\"on-call-btn--unselected\")\n//       onCallChangeViewBtn.classList.add(\"on-call-btn--selected\")\n//       onCallChangeViewBtn.dataset.btnWorkingState = \"switch-to-single\"\n//     }\n//   }\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9qcy9vbkNhbGxTZWN0aW9uLmRldi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBSUEsb0JBQW9CLEdBQUk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUxBO0FBTUEsSUFBSUMsbUJBQW1CLEdBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUxBO0FBTUEsSUFBSUMsZ0NBQWdDLEdBQUk7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUxBO0FBTUEsSUFBSUMsOEJBQThCLEdBQUk7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsQ0FKQTtBQU1BLElBQUlDLHNCQUFzQixHQUFJO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLENBSkE7QUFLQSxJQUFJQywwQkFBMEIsR0FBSTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FaQTtBQWFBLElBQUlDLDhCQUE4QixHQUFJO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FMQTtBQU1BLElBQUlDLHFCQUFxQixHQUFJO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLENBSkE7QUFLQSxJQUFJQyxzQkFBc0IsR0FBSTtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxDQUpBO0FBS0EsSUFBSUMsc0JBQXNCLEdBQUk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUxBO0FBTUEsSUFBSUMsd0JBQXdCLEdBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUxBO0FBTUEsTUFBTUMsaUJBQWlCLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixtQkFBeEIsQ0FBMUI7QUFDQSxNQUFNQyxjQUFjLEdBQUdGLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixnQkFBeEIsQ0FBdkI7QUFDQSxNQUFNRSxpQkFBaUIsR0FBR0gsUUFBUSxDQUFDQyxjQUFULENBQXdCLG1CQUF4QixDQUExQjtBQUNBLE1BQU1HLGFBQWEsR0FBR0osUUFB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QXNCLENBQUMsWUFBRCxDQUF0QjtJQUNBMUgsc0JBQXNCLENBQUN5QixTQUF2QixDQUFpQ2EsR0FBakMsQ0FBcUMsa0NBQXJDO0lBQ0ExQyxtQkFBbUIsQ0FBQzZCLFNBQXBCLENBQThCYSxHQUE5QixDQUFrQywrQkFBbEM7SUFDQXpDLDhCQUE4QixDQUFDd0gsU0FBL0IsR0FBMkMsRUFBM0M7SUFDQXZILDRCQUE0QixDQUFDdUgsU0FBN0IsR0FBeUMsRUFBekM7SUFFQSxJQUFJMEUsV0FBVyxHQUFHMUwsYUFBYSxDQUFDMkwsY0FBZCxFQUFsQjtJQUNBRCxXQUFXLENBQUMvSSxPQUFaLENBQW9CaUosS0FBSyxJQUFJQSxLQUFLLENBQUNDLElBQU4sRUFBN0I7SUFFQSxJQUFJdUIsVUFBVSxHQUFHcE4sYUFBYSxDQUFDeU0sY0FBZCxFQUFqQjtJQUNBVyxVQUFVLENBQUN6SyxPQUFYLENBQW1CaUosS0FBSyxJQUFJQSxLQUFLLENBQUNDLElBQU4sRUFBNUI7SUFDQSxJQUFJO01BQUU1RTtJQUFGLElBQTZCLE1BQU0sK05BQXZDO0lBRUEzRCxVQUFVLENBQUMsTUFBTTtNQUNmMkQsc0JBQXNCLENBQUNySCxRQUFELEVBQVcsSUFBWCxDQUF0QjtJQUNELENBRlMsRUFFUCxJQUZPLENBQVY7RUFHRDtBQUNGLENBdEJELEdBd0JBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vZGV2LWphdmFzY3JpcHRzL2NhbGwvanMvb25DYWxsU2VjdGlvbi5kZXYuanM/YWRiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgc3ZnX2NhbGxBdWRpb09mZkljb24gPSBgXHJcbjxzdmcgd2lkdGg9XCI5MFwiIGhlaWdodD1cIjEwMFwiIHZpZXdCb3g9XCIwIDAgOTAgMTAwXCIgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuPHBhdGggZD1cIk02Mi44ODU5IDUzLjY0NjNDNjQuMjQwNyA1MC45MjA5IDY0Ljk1ODUgNDcuOTIxOCA2NC45ODQ4IDQ0Ljg3NjdWMTkuODIwNkM2NC45Mjk1IDE0Ljg3MDUgNjMuMDQ5NiAxMC4xMTYgNTkuNzA3MSA2LjQ3Mjk2QzU2LjM2NDcgMi44Mjk5MSA1MS43OTYxIDAuNTU2MDE4IDQ2Ljg4MTUgMC4wODkzMThDNDEuOTY2OCAtMC4zNzczODIgMzcuMDUzOCAwLjk5NjEyMSAzMy4wODg4IDMuOTQ1MjVDMjkuMTIzOCA2Ljg5NDM3IDI2LjM4NzMgMTEuMjEwNSAyNS40MDY1IDE2LjA2MjJNNzkuOTc2NSA0NC44NzY3Qzc5Ljk3NjUgNDMuNTQ3NiA3OS40NSA0Mi4yNzMgNzguNTEyOSA0MS4zMzMyQzc3LjU3NTcgNDAuMzkzNCA3Ni4zMDQ2IDM5Ljg2NTUgNzQuOTc5MyAzOS44NjU1QzczLjY1MzkgMzkuODY1NSA3Mi4zODI4IDQwLjM5MzQgNzEuNDQ1NyA0MS4zMzMyQzcwLjUwODUgNDIuMjczIDY5Ljk4MiA0My41NDc2IDY5Ljk4MiA0NC44NzY3QzY5Ljk2NzUgNDkuMjU0OCA2OC43NzYzIDUzLjU0OCA2Ni41MzM5IDU3LjMwNDVMNzMuODc5OSA2NC45MjE1Qzc3LjkwMTQgNTkuMDE4OSA4MC4wMjg2IDUyLjAyNTIgNzkuOTc2NSA0NC44NzY3Wk00NC45OTU3IDY0LjkyMTVINDUuNzk1M0wyNS4wMDY3IDQ0LjAyNDhWNDQuODc2N0MyNS4wMDY3IDUwLjE5MjkgMjcuMTEyNyA1NS4yOTE0IDMwLjg2MTQgNTkuMDUwNUMzNC42MSA2Mi44MDk3IDM5LjY5NDMgNjQuOTIxNSA0NC45OTU3IDY0LjkyMTVaTTg4LjUyMTggODYuNDE5Nkw4LjU2NTc1IDYuMjQwMjJDOC4wOTk4MiA1Ljc3Mjk5IDcuNTQ2NjcgNS40MDIzNSA2LjkzNzg5IDUuMTQ5NDlDNi4zMjkxMiA0Ljg5NjYyIDUuNjc2NjQgNC43NjY0NyA1LjAxNzcgNC43NjY0N0M0LjM1ODc3IDQuNzY2NDcgMy43MDYyOSA0Ljg5NjYyIDMuMDk3NTEgNS4xNDk0OUMyLjQ4ODc0IDUuNDAyMzUgMS45MzU1OSA1Ljc3Mjk5IDEuNDY5NjUgNi4yNDAyMkMwLjUyODY1IDcuMTgzODUgMCA4LjQ2MzY5IDAgOS43OTgxOEMwIDExLjEzMjcgMC41Mjg2NSAxMi40MTI1IDEuNDY5NjUgMTMuMzU2MUw4MS40MjU3IDkzLjUzNTVDODEuODkwMyA5NC4wMDUyIDgyLjQ0MyA5NC4zNzggODMuMDUxOSA5NC42MzI0QzgzLjY2MDkgOTQuODg2OSA4NC4zMTQxIDk1LjAxNzggODQuOTczOCA5NS4wMTc4Qzg1LjYzMzUgOTUuMDE3OCA4Ni4yODY2IDk0Ljg4NjkgODYuODk1NiA5NC42MzI0Qzg3LjUwNDYgOTQuMzc4IDg4LjA1NzMgOTQuMDA1MiA4OC41MjE4IDkzLjUzNTVDODguOTkwMiA5My4wNjk3IDg5LjM2MiA5Mi41MTU0IDg5LjYxNTcgOTEuOTA0OEM4OS44Njk0IDkxLjI5NDEgOTAgOTAuNjM5MSA5MCA4OS45Nzc2QzkwIDg5LjMxNiA4OS44Njk0IDg4LjY2MSA4OS42MTU3IDg4LjA1MDRDODkuMzYyIDg3LjQzOTcgODguOTkwMiA4Ni44ODU1IDg4LjUyMTggODYuNDE5NlpcIiAvPlxyXG48cGF0aCBkPVwiTTU5Ljk4NzUgODkuOTc3Nkg0OS45OTNWNzkuNTU0M0M1Mi44MjA5IDc5LjE1OTUgNTUuNTkgNzguNDE5IDU4LjIzODUgNzcuMzQ5M0w1MC4yNDI5IDY5LjMzMTRDNDguNTIyOSA2OS43MzQ2IDQ2Ljc2MjEgNjkuOTM2NCA0NC45OTU3IDY5LjkzMjdDMzguMzY5IDY5LjkzMjcgMzIuMDEzNiA2Ny4yOTI5IDI3LjMyNzggNjIuNTk0QzIyLjY0MTkgNTcuODk1MSAyMC4wMDk1IDUxLjUyMTkgMjAuMDA5NSA0NC44NzY3QzIwLjAwOTUgNDMuNTQ3NiAxOS40ODMgNDIuMjczIDE4LjU0NTggNDEuMzMzMkMxNy42MDg2IDQwLjM5MzQgMTYuMzM3NiAzOS44NjU1IDE1LjAxMjIgMzkuODY1NUMxMy42ODY5IDM5Ljg2NTUgMTIuNDE1OCA0MC4zOTM0IDExLjQ3ODYgNDEuMzMzMkMxMC41NDE1IDQyLjI3MyAxMC4wMTUgNDMuNTQ3NiAxMC4wMTUgNDQuODc2N0MxMC4wMjQ4IDUzLjMwNDggMTMuMDYwMyA2MS40NDc2IDE4LjU2NjIgNjcuODE1NEMyNC4wNzIgNzQuMTgzMiAzMS42ODAxIDc4LjM1MDIgMzkuOTk4NSA3OS41NTQzVjg5Ljk3NzZIMzAuMDA0QzI4LjY3ODYgODkuOTc3NiAyNy40MDc2IDkwLjUwNTUgMjYuNDcwNCA5MS40NDUzQzI1LjUzMzIgOTIuMzg1MSAyNS4wMDY3IDkzLjY1OTcgMjUuMDA2NyA5NC45ODg4QzI1LjAwNjcgOTYuMzE3OCAyNS41MzMyIDk3LjU5MjUgMjYuNDcwNCA5OC41MzIzQzI3LjQwNzYgOTkuNDcyIDI4LjY3ODYgMTAwIDMwLjAwNCAxMDBINTkuOTg3NUM2MS4zMTI5IDEwMCA2Mi41ODM5IDk5LjQ3MiA2My41MjExIDk4LjUzMjNDNjQuNDU4MyA5Ny41OTI1IDY0Ljk4NDggOTYuMzE3OCA2NC45ODQ4IDk0Ljk4ODhDNjQuOTg0OCA5My42NTk3IDY0LjQ1ODMgOTIuMzg1MSA2My41MjExIDkxLjQ0NTNDNjIuNTgzOSA5MC41MDU1IDYxLjMxMjkgODkuOTc3NiA1OS45ODc1IDg5Ljk3NzZaXCIgLz5cclxuPC9zdmc+XHJcbmBcclxubGV0IHN2Z19jYWxsQXVkaW9Pbkljb24gPSBgXHJcbjxzdmcgd2lkdGg9XCI3MFwiIGhlaWdodD1cIjEwMFwiIHZpZXdCb3g9XCIwIDAgNzAgMTAwXCIgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuPHBhdGggZD1cIk0zNSA2NUM0MC4zMDQzIDY1IDQ1LjM5MTQgNjIuODkyOSA0OS4xNDIxIDU5LjE0MjFDNTIuODkyOSA1NS4zOTE0IDU1IDUwLjMwNDMgNTUgNDVWMjBDNTUgMTQuNjk1NyA1Mi44OTI5IDkuNjA4NTkgNDkuMTQyMSA1Ljg1Nzg2QzQ1LjM5MTQgMi4xMDcxNCA0MC4zMDQzIDAgMzUgMEMyOS42OTU3IDAgMjQuNjA4NiAyLjEwNzE0IDIwLjg1NzkgNS44NTc4NkMxNy4xMDcxIDkuNjA4NTkgMTUgMTQuNjk1NyAxNSAyMFY0NUMxNSA1MC4zMDQzIDE3LjEwNzEgNTUuMzkxNCAyMC44NTc5IDU5LjE0MjFDMjQuNjA4NiA2Mi44OTI5IDI5LjY5NTcgNjUgMzUgNjVaXCIgLz5cclxuPHBhdGggZD1cIk03MCA0NUM3MCA0My42NzM5IDY5LjQ3MzIgNDIuNDAyMSA2OC41MzU1IDQxLjQ2NDVDNjcuNTk3OSA0MC41MjY4IDY2LjMyNjEgNDAgNjUgNDBDNjMuNjczOSA0MCA2Mi40MDIxIDQwLjUyNjggNjEuNDY0NSA0MS40NjQ1QzYwLjUyNjggNDIuNDAyMSA2MCA0My42NzM5IDYwIDQ1QzYwIDUxLjYzMDQgNTcuMzY2MSA1Ny45ODkzIDUyLjY3NzcgNjIuNjc3N0M0Ny45ODkzIDY3LjM2NjEgNDEuNjMwNCA3MCAzNSA3MEMyOC4zNjk2IDcwIDIyLjAxMDcgNjcuMzY2MSAxNy4zMjIzIDYyLjY3NzdDMTIuNjMzOSA1Ny45ODkzIDEwIDUxLjYzMDQgMTAgNDVDMTAgNDMuNjczOSA5LjQ3MzIxIDQyLjQwMjEgOC41MzU1MyA0MS40NjQ1QzcuNTk3ODUgNDAuNTI2OCA2LjMyNjA4IDQwIDUgNDBDMy42NzM5MiA0MCAyLjQwMjE1IDQwLjUyNjggMS40NjQ0NyA0MS40NjQ1QzAuNTI2Nzg1IDQyLjQwMjEgMCA0My42NzM5IDAgNDVDMC4wMDk4NTU1NCA1My40MDkyIDMuMDQ3MDQgNjEuNTMzOCA4LjU1NTkgNjcuODg3NEMxNC4wNjQ4IDc0LjI0MDkgMjEuNjc3IDc4LjM5ODcgMzAgNzkuNlY5MEgxOS40NUMxOC4yNjk4IDkwIDE3LjEzNzkgOTAuNDY4OCAxNi4zMDM0IDkxLjMwMzRDMTUuNDY4OCA5Mi4xMzc5IDE1IDkzLjI2OTggMTUgOTQuNDVWOTUuNTVDMTUgOTYuNzMwMiAxNS40Njg4IDk3Ljg2MjEgMTYuMzAzNCA5OC42OTY2QzE3LjEzNzkgOTkuNTMxMiAxOC4yNjk4IDEwMCAxOS40NSAxMDBINTAuNTVDNTEuNzMwMiAxMDAgNTIuODYyMSA5OS41MzEyIDUzLjY5NjYgOTguNjk2NkM1NC41MzEyIDk3Ljg2MjEgNTUgOTYuNzMwMiA1NSA5NS41NVY5NC40NUM1NSA5My4yNjk4IDU0LjUzMTIgOTIuMTM3OSA1My42OTY2IDkxLjMwMzRDNTIuODYyMSA5MC40Njg4IDUxLjczMDIgOTAgNTAuNTUgOTBINDBWNzkuNkM0OC4zMjMgNzguMzk4NyA1NS45MzUyIDc0LjI0MDkgNjEuNDQ0MSA2Ny44ODc0QzY2Ljk1MyA2MS41MzM4IDY5Ljk5MDEgNTMuNDA5MiA3MCA0NVpcIiAvPlxyXG48L3N2Zz5cclxuYFxyXG5sZXQgc3ZnX2NhbGxTd2l0Y2hWaWV3VG9NdWx0aXBsZUljb24gPSBgXHJcbjxzdmcgd2lkdGg9XCIxMDBcIiBoZWlnaHQ9XCI5MFwiIHZpZXdCb3g9XCIwIDAgMTAwIDkwXCIgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuPHBhdGggZD1cIk04Mi4yNTYyIDQuNzU1NzNlLTA3Qzc5LjkyNTUgNC4yNDYyN2UtMDcgNzcuNjE3NiAwLjQ3NjE2NCA3NS40NjQ0IDEuNDAxMzFDNzMuMzExMSAyLjMyNjQ1IDcxLjM1NDYgMy42ODI0NiA2OS43MDY2IDUuMzkxOUM2OC4wNTg1IDcuMTAxMzQgNjYuNzUxMiA5LjEzMDczIDY1Ljg1OTMgMTEuMzY0MkM2NC45Njc0IDEzLjU5NzcgNjQuNTA4MyAxNS45OTE2IDY0LjUwODMgMTguNDA5MUM2NC41MDgzIDIwLjgyNjYgNjQuOTY3NCAyMy4yMjA0IDY1Ljg1OTMgMjUuNDUzOUM2Ni43NTEyIDI3LjY4NzQgNjguMDU4NSAyOS43MTY4IDY5LjcwNjYgMzEuNDI2M0M3MS4zNTQ2IDMzLjEzNTcgNzMuMzExMSAzNC40OTE3IDc1LjQ2NDQgMzUuNDE2OUM3Ny42MTc2IDM2LjM0MiA3OS45MjU1IDM2LjgxODIgODIuMjU2MiAzNi44MTgyQzg2Ljk2MzIgMzYuODE3MSA5MS40NzcgMzQuODc2NSA5NC44MDQ2IDMxLjQyMzNDOTguMTMyMiAyNy45NzAyIDEwMC4wMDEgMjMuMjg3MyAxMDAgMTguNDA0OUM5OS45OTg5IDEzLjUyMjUgOTguMTI4IDguODQwNTMgOTQuNzk4OSA1LjM4ODk0QzkxLjQ2OTggMS45MzczNSA4Ni45NTUxIC0wLjAwMTEwODUxIDgyLjI0ODEgNC43NTU3M2UtMDdIODIuMjU2MlpNMTcuNzQ3OSA0Ljc1NTczZS0wN0MxNS40MTcyIDQuMjQ2MjdlLTA3IDEzLjEwOTMgMC40NzYxNjQgMTAuOTU2IDEuNDAxMzFDOC44MDI3OCAyLjMyNjQ1IDYuODQ2MjcgMy42ODI0NiA1LjE5ODIyIDUuMzkxOUMzLjU1MDE4IDcuMTAxMzQgMi4yNDI4OSA5LjEzMDczIDEuMzUwOTggMTEuMzY0MkMwLjQ1OTA2MyAxMy41OTc3IDAgMTUuOTkxNiAwIDE4LjQwOTFDMCAyMC44MjY2IDAuNDU5MDYzIDIzLjIyMDQgMS4zNTA5OCAyNS40NTM5QzIuMjQyODkgMjcuNjg3NCAzLjU1MDE4IDI5LjcxNjggNS4xOTgyMiAzMS40MjYzQzYuODQ2MjcgMzMuMTM1NyA4LjgwMjc4IDM0LjQ5MTcgMTAuOTU2IDM1LjQxNjlDMTMuMTA5MyAzNi4zNDIgMTUuNDE3MiAzNi44MTgyIDE3Ljc0NzkgMzYuODE4MkMyMi40NTQ5IDM2LjgxNzEgMjYuOTY4NyAzNC44NzY1IDMwLjI5NjMgMzEuNDIzM0MzMy42MjM5IDI3Ljk3MDIgMzUuNDkyNyAyMy4yODczIDM1LjQ5MTcgMTguNDA0OUMzNS40OTA2IDEzLjUyMjUgMzMuNjE5NyA4Ljg0MDUzIDMwLjI5MDYgNS4zODg5NEMyNi45NjE1IDEuOTM3MzUgMjIuNDU0OSAtMC4wMDExMDg1MSAxNy43NDc5IDQuNzU1NzNlLTA3WlwiIC8+XHJcbjxwYXRoIGQ9XCJNODIuMjU2MiA1My4xODE4Qzc5LjkyNTUgNTMuMTgxOCA3Ny42MTc2IDUzLjY1OCA3NS40NjQ0IDU0LjU4MzFDNzMuMzExMSA1NS41MDgzIDcxLjM1NDYgNTYuODY0MyA2OS43MDY2IDU4LjU3MzdDNjguMDU4NSA2MC4yODMxIDY2Ljc1MTIgNjIuMzEyNSA2NS44NTkzIDY0LjU0NkM2NC45Njc0IDY2Ljc3OTUgNjQuNTA4MyA2OS4xNzM0IDY0LjUwODMgNzEuNTkwOUM2NC41MDgzIDc0LjAwODQgNjQuOTY3NCA3Ni40MDIyIDY1Ljg1OTMgNzguNjM1N0M2Ni43NTEyIDgwLjg2OTIgNjguMDU4NSA4Mi44OTg2IDY5LjcwNjYgODQuNjA4MUM3MS4zNTQ2IDg2LjMxNzUgNzMuMzExMSA4Ny42NzM1IDc1LjQ2NDQgODguNTk4N0M3Ny42MTc2IDg5LjUyMzggNzkuOTI1NSA5MCA4Mi4yNTYyIDkwQzg2Ljk2MzIgODkuOTk4OSA5MS40NzcgODguMDU4MyA5NC44MDQ2IDg0LjYwNTFDOTguMTMyMiA4MS4xNTIgMTAwLjAwMSA3Ni40NjkxIDEwMCA3MS41ODY3Qzk5Ljk5ODkgNjYuNzA0MyA5OC4xMjggNjIuMDIyMyA5NC43OTg5IDU4LjU3MDdDOTEuNDY5OCA1NS4xMTkyIDg2Ljk1NTEgNTMuMTgwNyA4Mi4yNDgxIDUzLjE4MThIODIuMjU2MlpNMTcuNzQ3OSA1My4xODE4QzE1LjQxNzIgNTMuMTgxOCAxMy4xMDkzIDUzLjY1OCAxMC45NTYgNTQuNTgzMUM4LjgwMjc4IDU1LjUwODMgNi44NDYyNyA1Ni44NjQzIDUuMTk4MjIgNTguNTczN0MzLjU1MDE4IDYwLjI4MzEgMi4yNDI4OSA2Mi4zMTI1IDEuMzUwOTggNjQuNTQ2QzAuNDU5MDYzIDY2Ljc3OTUgMCA2OS4xNzM0IDAgNzEuNTkwOUMwIDc0LjAwODQgMC40NTkwNjMgNzYuNDAyMiAxLjM1MDk4IDc4LjYzNTdDMi4yNDI4OSA4MC44NjkyIDMuNTUwMTggODIuODk4NiA1LjE5ODIyIDg0LjYwODFDNi44NDYyNyA4Ni4zMTc1IDguODAyNzggODcuNjczNSAxMC45NTYgODguNTk4N0MxMy4xMDkzIDg5LjUyMzggMTUuNDE3MiA5MCAxNy43NDc5IDkwQzIyLjQ1NDkgODkuOTk4OSAyNi45Njg3IDg4LjA1ODMgMzAuMjk2MyA4NC42MDUxQzMzLjYyMzkgODEuMTUyIDM1LjQ5MjcgNzYuNDY5MSAzNS40OTE3IDcxLjU4NjdDMzUuNDkwNiA2Ni43MDQzIDMzLjYxOTcgNjIuMDIyMyAzMC4yOTA2IDU4LjU3MDdDMjYuOTYxNSA1NS4xMTkyIDIyLjQ1NDkgNTMuMTgwNyAxNy43NDc5IDUzLjE4MThaXCIgLz5cclxuPC9zdmc+XHJcbmBcclxubGV0IHN2Z19jYWxsU3dpdGNoVmlld1RvU2luZ2xlSWNvbiA9IGBcclxuPHN2ZyB3aWR0aD1cIjEwMFwiIGhlaWdodD1cIjEwMFwiIHZpZXdCb3g9XCIwIDAgMTAwIDEwMFwiICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcbjxwYXRoIGQ9XCJNMCA1MEMyLjc5NDUxZS0wNyA2My4yNjA4IDUuMjY3ODUgNzUuOTc4NSAxNC42NDQ3IDg1LjM1NTNDMjQuMDIxNSA5NC43MzIxIDM2LjczOTIgMTAwIDUwIDEwMEM2My4yNjA4IDEwMCA3NS45Nzg1IDk0LjczMjEgODUuMzU1MyA4NS4zNTUzQzk0LjczMjEgNzUuOTc4NSAxMDAgNjMuMjYwOCAxMDAgNTBDMTAwIDM2LjczOTIgOTQuNzMyMSAyNC4wMjE1IDg1LjM1NTMgMTQuNjQ0N0M3NS45Nzg1IDUuMjY3ODUgNjMuMjYwOCAwIDUwIDBDMzYuNzM5MiAwIDI0LjAyMTUgNS4yNjc4NSAxNC42NDQ3IDE0LjY0NDdDNS4yNjc4NSAyNC4wMjE1IDAgMzYuNzM5MiAwIDUwWlwiIC8+XHJcbjwvc3ZnPlxyXG5gXHJcblxyXG5sZXQgc3ZnX2NhbGxTZWN1cmVSb29tSWNvbiA9IGBcclxuPHN2ZyB3aWR0aD1cIjkwXCIgaGVpZ2h0PVwiMTAwXCIgdmlld0JveD1cIjAgMCA5MCAxMDBcIiAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG48cGF0aCBkPVwiTTQ1IDk5Ljk5ODhDNDMuMjUyOCAxMDAuMDI3IDQxLjUyODkgOTkuNTg5NCA0MCA5OC43MzA5TDM4LjUwMDEgOTcuODY4N0MyNi44MTY1IDkxLjE2NDEgMTcuMDk2NiA4MS40MzQ0IDEwLjMzMjcgNjkuNjczNEMzLjU2ODggNTcuOTEyNCAwLjAwMzM1MDIxIDQ0LjU0MTMgMC4wMDA0MDA3NTYgMzAuOTI1NVYzMC4yMTU1Qy0wLjAxNTQ0ODggMjguNDE5NiAwLjQzOTA4OSAyNi42NTE3IDEuMzE3NTYgMjUuMDkyNEMyLjE5NjAzIDIzLjUzMzEgMy40NjY5MiAyMi4yMzgzIDUuMDAwMzYgMjEuMzQwNEw0MCAxLjM1ODg5QzQxLjUyMDIgMC40Njg2NjcgNDMuMjQ0NyAwIDQ1IDBDNDYuNzU1NCAwIDQ4LjQ3OTggMC40Njg2NjcgNTAgMS4zNTg4OUw4NC45OTk2IDIxLjM0MDRDODYuNTMzMSAyMi4yMzgzIDg3LjgwNCAyMy41MzMxIDg4LjY4MjQgMjUuMDkyNEM4OS41NjA5IDI2LjY1MTcgOTAuMDE1NSAyOC40MTk2IDg5Ljk5OTYgMzAuMjE1NVYzMC45MjU1Qzg5Ljk4NjYgNDQuNTUxMyA4Ni40MDYxIDU3LjkyOTIgNzkuNjI0MSA2OS42OTEyQzcyLjg0MjIgODEuNDUzMSA2My4xMDIxIDkxLjE3NzEgNTEuMzk5OSA5Ny44Njg3TDQ5LjkgOTguNzMwOUM0OC40MDA3IDk5LjU3MjMgNDYuNzEzNCAxMDAuMDA5IDQ1IDk5Ljk5ODhaXCIgLz5cclxuPC9zdmc+XHJcbmBcclxubGV0IHN2Z19jYWxsRGVmYXVsdFJvb21QaWNJY29uID0gYFxyXG48c3ZnIHdpZHRoPVwiMTAwXCIgaGVpZ2h0PVwiMTAwXCIgdmlld0JveD1cIjAgMCAxMDAgMTAwXCIgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuPGcgY2xpcC1wYXRoPVwidXJsKCNjbGlwMF8xXzQpXCI+XHJcbjxwYXRoIGQ9XCJNODkuMzEyNSAwLjI1SDMzLjA2MjVDMzEuNjQ5NiAwLjI0MTc2MiAzMC4yNDkxIDAuNTEyOTMgMjguOTQxNCAxLjA0NzkxQzI3LjYzMzcgMS41ODI4OSAyNi40NDQ3IDIuMzcxMTIgMjUuNDQyOCAzLjM2NzI3QzI0LjQ0MDggNC4zNjM0MiAyMy42NDU3IDUuNTQ3ODMgMjMuMTAzMSA2Ljg1MjM3QzIyLjU2MDUgOC4xNTY5MiAyMi4yODEyIDkuNTU1ODcgMjIuMjgxMiAxMC45Njg3VjY3LjIxODhDMjIuMjUyMSA2OC42NDA2IDIyLjUwNzEgNzAuMDUzOSAyMy4wMzExIDcxLjM3NTlDMjMuNTU1MiA3Mi42OTc5IDI0LjMzNzggNzMuOTAyMSAyNS4zMzMxIDc0LjkxNzhDMjYuMzI4NSA3NS45MzM1IDI3LjUxNjUgNzYuNzQwMyAyOC44Mjc3IDc3LjI5MTFDMzAuMTM4OCA3Ny44NDE4IDMxLjU0NjYgNzguMTI1MyAzMi45Njg3IDc4LjEyNUg5MC4wOTM3QzkyLjgwOTcgNzcuOTE4NyA5NS4zNDUyIDc2LjY4NjIgOTcuMTg1MiA3NC42Nzc5Qzk5LjAyNTIgNzIuNjY5NiAxMDAuMDMyIDcwLjAzNjEgMTAwIDY3LjMxMjVWMTEuMDYyNUMxMDAuMDEyIDkuNjQ5NjUgOTkuNzQ1MyA4LjI0ODMgOTkuMjE0MSA2LjkzOTA0Qzk4LjY4MjkgNS42Mjk3OCA5Ny44OTgxIDQuNDM4NDYgOTYuOTA0OSAzLjQzMzZDOTUuOTExNiAyLjQyODczIDk0LjcyOTUgMS42MzAxNSA5My40MjY1IDEuMDgzNzlDOTIuMTIzNiAwLjUzNzQyOCA5MC43MjU0IDAuMjU0MDY1IDg5LjMxMjUgMC4yNVpNOTAuMTg3NSA1OC41MzEzQzkwLjExMDMgNTkuMDA5MSA4OS44NTQyIDU5LjQzOTcgODkuNDcxMiA1OS43MzU3Qzg5LjA4ODIgNjAuMDMxNyA4OC42MDY5IDYwLjE3MDkgODguMTI1IDYwLjEyNUg4MC4zMTI1Qzc5Ljg4IDU1LjMzOSA3Ny42NzMxIDUwLjg4NzkgNzQuMTI1NCA0Ny42NDY0QzcwLjU3NzggNDQuNDA0OSA2NS45NDYxIDQyLjYwNzUgNjEuMTQwNiA0Mi42MDc1QzU2LjMzNTEgNDIuNjA3NSA1MS43MDM0IDQ0LjQwNDkgNDguMTU1OCA0Ny42NDY0QzQ0LjYwODIgNTAuODg3OSA0Mi40MDEzIDU1LjMzOSA0MS45Njg4IDYwLjEyNUgzNC4xNTYzQzMzLjY3NDQgNjAuMTcwOSAzMy4xOTMxIDYwLjAzMTcgMzIuODEgNTkuNzM1N0MzMi40MjcgNTkuNDM5NyAzMi4xNzA5IDU5LjAwOTEgMzIuMDkzOCA1OC41MzEzVjExLjY1NjJDMzIuMTYzNyAxMS4xNzUgMzIuNDE4IDEwLjczOTcgMzIuODAyOCAxMC40NDI0QzMzLjE4NzYgMTAuMTQ1IDMzLjY3MjkgMTAuMDA4OCAzNC4xNTYzIDEwLjA2MjVIODguMTI1Qzg4LjYwODQgMTAuMDA4OCA4OS4wOTM3IDEwLjE0NSA4OS40Nzg1IDEwLjQ0MjRDODkuODYzMyAxMC43Mzk3IDkwLjExNzUgMTEuMTc1IDkwLjE4NzUgMTEuNjU2MlY1OC41MzEzWlwiIC8+XHJcbjxwYXRoIGQ9XCJNMTkuMDYyNSA2Ny4zMTI1VjIxLjI1TDguMjgxMjUgMjMuNzVDNS41MjIyNyAyNC4zODk4IDMuMTMwMDQgMjYuMDk4NSAxLjYzMDA0IDI4LjUwMDlDMC4xMzAwMzIgMzAuOTAzMiAtMC4zNTUwODMgMzMuODAyNyAwLjI4MTI1IDM2LjU2MjVMMTIuOTY4OCA5MS40Njg4QzEzLjYwODUgOTQuMjI3NyAxNS4zMTczIDk2LjYyIDE3LjcxOTYgOTguMTJDMjAuMTIyIDk5LjYyIDIzLjAyMTUgMTAwLjEwNSAyNS43ODEzIDk5LjQ2ODdMODAuNjg3NSA4Ni43ODEzQzgyLjIwNzMgODYuNDM2NCA4My42MzMgODUuNzYyMyA4NC44NjQxIDg0LjgwNjdDODYuMDk1MiA4My44NTEgODcuMTAxNiA4Mi42MzY5IDg3LjgxMjUgODEuMjVIMzIuOTY4OEMzMS4xMzk5IDgxLjI1IDI5LjMyOTEgODAuODg5MyAyNy42Mzk4IDgwLjE4ODVDMjUuOTUwNiA3OS40ODc3IDI0LjQxNjIgNzguNDYwNSAyMy4xMjQ1IDc3LjE2NTlDMjEuODMyOCA3NS44NzEzIDIwLjgwOTEgNzQuMzM0NiAyMC4xMTIxIDcyLjY0MzhDMTkuNDE1MSA3MC45NTMgMTkuMDU4NCA2OS4xNDEzIDE5LjA2MjUgNjcuMzEyNVpNNjEuMTU2MyAyMi41MzEyQzU5LjM1MDIgMjIuNTI1MSA1Ny41ODI5IDIzLjA1NSA1Ni4wNzgyIDI0LjA1MzlDNTQuNTczNSAyNS4wNTI4IDUzLjM5OSAyNi40NzU3IDUyLjcwMzYgMjguMTQyNkM1Mi4wMDgyIDI5LjgwOTQgNTEuODIzIDMxLjY0NTEgNTIuMTcxNSAzMy40MTcyQzUyLjUyMDEgMzUuMTg5MyA1My4zODY3IDM2LjgxODIgNTQuNjYxNiAzOC4wOTc1QzU1LjkzNjUgMzkuMzc2NyA1Ny41NjI0IDQwLjI0ODkgNTkuMzMzMyA0MC42MDM2QzYxLjEwNDIgNDAuOTU4MiA2Mi45NDA1IDQwLjc3OTMgNjQuNjA5NyA0MC4wODk2QzY2LjI3ODkgMzkuMzk5OSA2Ny43MDU5IDM4LjIzMDMgNjguNzEgMzYuNzI5MUM2OS43MTQgMzUuMjI3OCA3MC4yNSAzMy40NjIzIDcwLjI1IDMxLjY1NjJDNzAuMjUgMjkuMjQxNiA2OS4yOTI5IDI2LjkyNTMgNjcuNTg4NCAyNS4yMTQ5QzY1Ljg4MzkgMjMuNTA0NiA2My41NzA5IDIyLjUzOTUgNjEuMTU2MyAyMi41MzEyWlwiIC8+XHJcbjwvZz5cclxuPGRlZnM+XHJcbjxjbGlwUGF0aCBpZD1cImNsaXAwXzFfNFwiPlxyXG48cmVjdCB3aWR0aD1cIjEwMFwiIGhlaWdodD1cIjEwMFwiIC8+XHJcbjwvY2xpcFBhdGg+XHJcbjwvZGVmcz5cclxuPC9zdmc+XHJcbmBcclxubGV0IHN2Z19jYWxsRGVmYXVsdFJvb21Vc2VyUGljSWNvbiA9IGBcclxuPHN2ZyB3aWR0aD1cIjkwXCIgaGVpZ2h0PVwiMTAwXCIgdmlld0JveD1cIjAgMCA5MCAxMDBcIiAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG48cGF0aCBvcGFjaXR5PVwiMC40XCIgZD1cIk00NC45OTk0IDU1LjU2QzYwLjUzMjEgNTUuNTYgNzMuMTI0IDQzLjEyMjUgNzMuMTI0IDI3Ljc4QzczLjEyNCAxMi40Mzc1IDYwLjUzMjEgMCA0NC45OTk0IDBDMjkuNDY2NiAwIDE2Ljg3NDggMTIuNDM3NSAxNi44NzQ4IDI3Ljc4QzE2Ljg3NDggNDMuMTIyNSAyOS40NjY2IDU1LjU2IDQ0Ljk5OTQgNTUuNTZaXCIgLz5cclxuPHBhdGggZD1cIk04OS45NDk5IDgzLjM3OUM4OS45NzUzIDgyLjk4MzYgODkuOTc1MyA4Mi41ODcyIDg5Ljk0OTkgODIuMTkxOEM4OS44Mzg2IDgwLjczMDYgODkuNDI0IDc5LjMwMzcgODguNzI5MyA3Ny45OTA5Qzg1Ljk5NTMgNzIuNjQ4NCA3OC4zMzAyIDcwLjIyODMgNzEuOTM0NCA2OC44NTg0QzY3LjM3MTMgNjcuOTA4NSA2Mi43MzUgNjcuMjk3OCA1OC4wNjg5IDY3LjAzMkw1My4xODY2IDY2LjY2NjdINTAuOTg5Nkg0OC4yNTU2SDQxLjcxMzRIMzguOTc5M0gzNi43ODIzTDMxLjkwMDEgNjcuMDMyQzI3LjIzMzkgNjcuMjk3OCAyMi41OTc2IDY3LjkwODUgMTguMDM0NSA2OC44NTg0QzExLjYzODggNzAuMDQ1NyAzLjk3MzY0IDcyLjUxMTQgMS4yMzk1OSA3Ny45OTA5QzAuNTQ0OTA4IDc5LjMwMzcgMC4xMzAzMzQgODAuNzMwNiAwLjAxOTAyODYgODIuMTkxOEMtMC4wMDYzNDI4NiA4Mi41ODcyIC0wLjAwNjM0Mjg2IDgyLjk4MzYgMC4wMTkwMjg2IDgzLjM3OUMtMC4wMDQzOTY0MSA4My43NzQ0IC0wLjAwNDM5NjQxIDg0LjE3MDggMC4wMTkwMjg2IDg0LjU2NjJDMC4xNTE4MjYgODYuMDE0OSAwLjU4Mjg2NCA4Ny40MjU4IDEuMjg4NDEgODguNzIxNUM0LjAyMjQ3IDk0LjA2MzkgMTEuNjg3NiA5Ni40ODQgMTguMDgzMyA5Ny44NTM5QzIyLjY1NDkgOTguNzU5NCAyNy4yODc3IDk5LjM2OTYgMzEuOTQ4OSA5OS42ODA0TDM2LjgzMTEgMTAwSDM4LjAwMjlIMzkuMDI4MUg1MS4wMzg0SDUyLjA2MzdINTMuMjM1NEw1OC4xMTc3IDk5LjY4MDRDNjIuNzc4OSA5OS4zNjk2IDY3LjQxMTYgOTguNzU5NCA3MS45ODMyIDk3Ljg1MzlDNzguMzc5IDk2LjYyMSA4Ni4wNDQxIDk0LjIwMDkgODguNzc4MiA4OC43MjE1Qzg5LjQ1MDggODcuMzg0OCA4OS44NjQxIDg1Ljk0NjkgODkuOTk4NyA4NC40NzQ5QzkwLjAwNDkgODQuMTA5IDg5Ljk4ODYgODMuNzQzMSA4OS45NDk5IDgzLjM3OVpcIiAvPlxyXG48L3N2Zz5cclxuYFxyXG5sZXQgc3ZnX2NhbGxMZWZ0QXJyb3dJY29uID0gYFxyXG48c3ZnIHdpZHRoPVwiNTBcIiBoZWlnaHQ9XCIxMDBcIiB2aWV3Qm94PVwiMCAwIDUwIDEwMFwiICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcbjxwYXRoIGQ9XCJNMTkuMzM2OSA0OS43OTAxTDQ3LjY3MjQgMTYuMTkwNUM0OS4xNjMyIDE0LjQxMjEgNTAgMTIuMDA2NSA1MCA5LjQ5OTAxQzUwIDYuOTkxNTEgNDkuMTYzMiA0LjU4NTg5IDQ3LjY3MjQgMi44MDc1NUM0Ni45MjgzIDEuOTE3OTMgNDYuMDQzIDEuMjExODIgNDUuMDY3NiAwLjcyOTk1NUM0NC4wOTIyIDAuMjQ4MDg3IDQzLjA0NiAwIDQxLjk4OTMgMEM0MC45MzI2IDAgMzkuODg2NCAwLjI0ODA4NyAzOC45MTEgMC43Mjk5NTVDMzcuOTM1NiAxLjIxMTgyIDM3LjA1MDMgMS45MTc5MyAzNi4zMDYyIDIuODA3NTVMMi4zNjc2OCA0My4wNTEyQzEuNjE3NDQgNDMuOTMzNiAxLjAyMTk2IDQ0Ljk4MzMgMC42MTU1OTMgNDYuMTRDMC4yMDkyMjIgNDcuMjk2NiAwIDQ4LjUzNzIgMCA0OS43OTAxQzAgNTEuMDQzMSAwLjIwOTIyMiA1Mi4yODM3IDAuNjE1NTkzIDUzLjQ0MDNDMS4wMjE5NiA1NC41OTY5IDEuNjE3NDQgNTUuNjQ2NyAyLjM2NzY4IDU2LjUyOTFMMzYuMzA2MiA5Ny4yNDczQzM3LjA1NDEgOTguMTI3IDM3Ljk0MTEgOTguODIyOSAzOC45MTY0IDk5LjI5NTNDMzkuODkxNiA5OS43Njc2IDQwLjkzNTkgMTAwLjAwNyA0MS45ODkzIDk5Ljk5OThDNDMuMDQyNyAxMDAuMDA3IDQ0LjA4NyA5OS43Njc2IDQ1LjA2MjIgOTkuMjk1M0M0Ni4wMzc0IDk4LjgyMjkgNDYuOTI0NSA5OC4xMjcgNDcuNjcyNCA5Ny4yNDczQzQ5LjE2MzIgOTUuNDY5IDUwIDkzLjA2MzMgNTAgOTAuNTU1OEM1MCA4OC4wNDgzIDQ5LjE2MzIgODUuNjQyNyA0Ny42NzI0IDgzLjg2NDRMMTkuMzM2OSA0OS43OTAxWlwiIC8+XHJcbjwvc3ZnPlxyXG5gXHJcbmxldCBzdmdfY2FsbFJpZ2h0QXJyb3dJY29uID0gYFxyXG48c3ZnIHdpZHRoPVwiNTBcIiBoZWlnaHQ9XCIxMDBcIiB2aWV3Qm94PVwiMCAwIDUwIDEwMFwiICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XHJcbjxwYXRoIGQ9XCJNNDcuNjMyMyA0My4yNTY1TDEzLjY5MzggMi44MjA5NEMxMi45NDk3IDEuOTI3MDggMTIuMDY0NCAxLjIxNzYgMTEuMDg5IDAuNzMzNDM1QzEwLjExMzYgMC4yNDkyNyA5LjA2NzM4IDAgOC4wMTA3MSAwQzYuOTU0MDQgMCA1LjkwNzgyIDAuMjQ5MjcgNC45MzI0MiAwLjczMzQzNUMzLjk1NzAxIDEuMjE3NiAzLjA3MTcyIDEuOTI3MDggMi4zMjc2MSAyLjgyMDk0QzAuODM2Nzg5IDQuNjA3NzYgMCA3LjAyNDg1IDAgOS41NDQzMUMwIDEyLjA2MzggMC44MzY3ODkgMTQuNDgwOSAyLjMyNzYxIDE2LjI2NzdMMzAuNjYzMSA1MC4wMjc2TDIuMzI3NjEgODMuNzg3NUMwLjgzNjc4OSA4NS41NzQzIDAgODcuOTkxNCAwIDkwLjUxMDhDMCA5My4wMzAzIDAuODM2Nzg5IDk1LjQ0NzQgMi4zMjc2MSA5Ny4yMzQyQzMuMDc1NTQgOTguMTE4MSAzLjk2MjU1IDk4LjgxNzQgNC45Mzc3OCA5OS4yOTE5QzUuOTEzMDEgOTkuNzY2NSA2Ljk1NzI4IDEwMC4wMDcgOC4wMTA3MSA5OS45OTk4QzkuMDY0MTQgMTAwLjAwNyAxMC4xMDg0IDk5Ljc2NjUgMTEuMDgzNiA5OS4yOTE5QzEyLjA1ODkgOTguODE3NCAxMi45NDU5IDk4LjExODEgMTMuNjkzOCA5Ny4yMzQyTDQ3LjYzMjMgNTYuNzk4NkM0OC4zODI2IDU1LjkxMjEgNDguOTc4IDU0Ljg1NzMgNDkuMzg0NCA1My42OTUyQzQ5Ljc5MDggNTIuNTMzIDUwIDUxLjI4NjUgNTAgNTAuMDI3NkM1MCA0OC43Njg2IDQ5Ljc5MDggNDcuNTIyMSA0OS4zODQ0IDQ2LjM2QzQ4Ljk3OCA0NS4xOTc4IDQ4LjM4MjYgNDQuMTQzMSA0Ny42MzIzIDQzLjI1NjVaXCIgLz5cclxuPC9zdmc+XHJcbmBcclxubGV0IHN2Z19jYWxsUGluVXNlckJveEljb24gPSBgXHJcbjxzdmcgd2lkdGg9XCIxMDBcIiBoZWlnaHQ9XCIxMDBcIiB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIiAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxyXG48cGF0aCBkPVwiTTczLjIxMTEgMS44Mzk3MUM3Mi4wNDM5IDAuNjY2NDQ0IDcwLjQ1ODQgMC4wMDQ3MDYyNCA2OC44MDMzIDIuNTAwNTZlLTA1QzY3LjE0ODEgLTAuMDA0NjU2MjMgNjUuNTU4OSAwLjY0ODEwNCA2NC4zODUxIDEuODE0NzVDNjMuNzY1OCAyLjQ0NTkgNjMuMjg3MiAzLjIwMDkzIDYyLjk4MDcgNC4wMzAyMUM1Ny43ODc0IDE0Ljg2NDEgNTIuMDY5OCAyMC45NzM4IDQ0Ljg1NDIgMjQuNTgwOUMzNi43NTg1IDI4LjU3NSAyNy40NjQzIDMxLjM1MjEgMTIuNDgzOCAzMS4zNTIxQzExLjI1MTUgMzEuMzU3OSAxMC4wNDgyIDMxLjcyNjEgOS4wMjM3NyAzMi40MTA4QzcuOTk5MzEgMzMuMDk1NSA3LjE5ODk5IDM0LjA2NjQgNi43MjI1MSAzNS4yMDI2QzYuMjUwODEgMzYuMzQzNCA2LjEyNzcyIDM3LjU5ODMgNi4zNjg3OSAzOC44MDlDNi42MDk4NSA0MC4wMTk3IDcuMjA0MjggNDEuMTMxOCA4LjA3NyA0Mi4wMDVMMjguMzE5NCA2Mi4yNDM2TDAgMTAwTDM3Ljc2MzQgNzEuNjg1OUw1Ny45OTk2IDkxLjkxODNDNTguNTc5MyA5Mi41MDI2IDU5LjI3MTYgOTIuOTYzMyA2MC4wMzQ1IDkzLjI3MjVDNjAuNzk2IDkzLjU5MDggNjEuNjA3NCA5My43NTkzIDYyLjQxODkgOTMuNzU5M0M2My4yMzAzIDkzLjc1OTMgNjQuMDQxOCA5My41OTA4IDY0LjgwMzMgOTMuMjcyNUM2NS45NDQ3IDkyLjgwNDQgNjYuOTIxMSA5Mi4wMDcyIDY3LjYwOCA5MC45ODI2QzY4LjI5NDkgODkuOTU3OSA2OC42NjE0IDg4Ljc1MjEgNjguNjYwOCA4Ny41MTg2QzY4LjY2MDggNzIuNTQwOCA3MS40MzIyIDYzLjI0ODQgNzUuNDIwNyA1NS4yNzlDNzkuMDIyMyA0OC4wNjQ3IDg1LjEzMzEgNDIuMzQ4MiA5NS45NzUzIDM3LjE1NkM5Ni44MDQzIDM2Ljg1MjMgOTcuNTU4IDM2LjM3MzMgOTguMTg0OSAzNS43NTE4Qzk5LjM1MTggMzQuNTc4MiAxMDAuMDA1IDMyLjk4OTIgMTAwIDMxLjMzNDRDOTkuOTk1MyAyOS42Nzk2IDk5LjMzMzQgMjguMDk0NCA5OC4xNTk5IDI2LjkyNzRMNzMuMjExMSAxLjgzOTcxWlwiIC8+XHJcbjwvc3ZnPlxyXG5cclxuYFxyXG5sZXQgc3ZnX2NhbGxVbnBpblVzZXJCb3hJY29uID0gYFxyXG48c3ZnIHdpZHRoPVwiMTAwXCIgaGVpZ2h0PVwiMTAwXCIgdmlld0JveD1cIjAgMCAxMDAgMTAwXCIgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cclxuPHBhdGggZD1cIk03My4wNTg1IDIuMTUxNDRDNzEuODkzNyAwLjk4MTg5OSA3MC4zMTE1IDAuMzIyMjYzIDY4LjY1OTkgMC4zMTc1OTdDNjcuMDA4MiAwLjMxMjkzIDY1LjQyMjMgMC45NjM2MTggNjQuMjUwOSAyLjEyNjU2QzYzLjYzMjkgMi43NTU3MSA2My4xNTUzIDMuNTA4MzQgNjIuODQ5NCA0LjMzNDk4QzU3LjY2NyAxNS4xMzQ1IDUxLjk2MTMgMjEuMjI0NyA0NC43NjA3IDI0LjgyMDRDMzYuNjgxOSAyOC44MDE4IDI3LjQwNzEgMzEuNTcwMSAxMi40NTc4IDMxLjU3MDFDMTEuMjI4MSAzMS41NzU5IDEwLjAyNzMgMzEuOTQyOSA5LjAwNDk2IDMyLjYyNTRDNy45ODI2NCAzMy4zMDc5IDcuMTgzOTkgMzQuMjc1OCA2LjcwODUgMzUuNDA4NEM2LjIzNzc4IDM2LjU0NTUgNi4xMTQ5NCAzNy43OTY1IDYuMzU1NTEgMzkuMDAzM0M2LjU5NjA4IDQwLjIxMDIgNy4xODkyNiA0MS4zMTg4IDguMDYwMTcgNDIuMTg5MkwyOC4yNjA0IDYyLjM2MzVMMCAxMDBMMzcuNjg0NyA3MS43NzU4TDU3Ljg3ODcgOTEuOTQzOUM1OC40NTcyIDkyLjUyNjQgNTkuMTQ4IDkyLjk4NTcgNTkuOTA5NCA5My4yOTM5QzYwLjY2OTMgOTMuNjExMSA2MS40NzkgOTMuNzc5MSA2Mi4yODg4IDkzLjc3OTFDNjMuMDk4NSA5My43NzkxIDYzLjkwODMgOTMuNjExMSA2NC42NjgyIDkzLjI5MzlDNjUuODA3MyA5Mi44MjcyIDY2Ljc4MTYgOTIuMDMyNiA2Ny40NjcxIDkxLjAxMTJDNjguMTUyNiA4OS45ODk4IDY4LjUxODMgODguNzg3OCA2OC41MTc3IDg3LjU1ODJDNjguNTE3NyA3Mi42MjggNzEuMjgzMyA2My4zNjUxIDc1LjI2MzUgNTUuNDIxQzc4Ljg1NzYgNDguMjI5NyA4NC45NTU3IDQyLjUzMTMgOTUuNzc1MiAzNy4zNTU1Qzk2LjYwMjUgMzcuMDUyOCA5Ny4zNTQ2IDM2LjU3NTQgOTcuOTgwMyAzNS45NTU4Qzk5LjE0NDcgMzQuNzg1OSA5OS43OTYyIDMzLjIwMjEgOTkuNzkxNSAzMS41NTI1Qzk5Ljc4NjkgMjkuOTAyOSA5OS4xMjY0IDI4LjMyMjggOTcuOTU1MyAyNy4xNTk1TDczLjA1ODUgMi4xNTE0NFpcIiAvPlxyXG48cGF0aCBkPVwiTTE1LjI3MTIgMS40MDE2OUMxNC44NzAxIDEuNzgzMTcgMTQuNTUyMSAyLjIzNjY3IDE0LjMzNTUgMi43MzYwNEMxNC4xMTkgMy4yMzU0IDE0LjAwODEgMy43NzA3NCAxNC4wMDkzIDQuMzExMThDMTQuMDEwNSA0Ljg1MTYxIDE0LjEyMzggNS4zODY0NSAxNC4zNDI3IDUuODg0ODNDMTQuNTYxNSA2LjM4MzIxIDE0Ljg4MTUgNi44MzUyNyAxNS4yODQzIDcuMjE0OTRMOTIuNjM5NSA4MC43M0M5My4wMzkgODEuMTEyOCA5My41MTQgODEuNDE2MyA5NC4wMzcgODEuNjIzQzk0LjU2IDgxLjgyOTYgOTUuMTIwOCA4MS45MzU0IDk1LjY4NjkgODEuOTM0MUM5Ni4yNTMgODEuOTMyOCA5Ni44MTMyIDgxLjgyNDUgOTcuMzM1MyA4MS42MTU1Qzk3Ljg1NzQgODEuNDA2NSA5OC4zMzEgODEuMTAwOSA5OC43Mjg4IDgwLjcxNjNDOTkuMTI5OSA4MC4zMzQ4IDk5LjQ0NzkgNzkuODgxMyA5OS42NjQ1IDc5LjM4MTlDOTkuODgxIDc4Ljg4MjYgOTkuOTkxOSA3OC4zNDcyIDk5Ljk5MDcgNzcuODA2OEM5OS45ODk1IDc3LjI2NjMgOTkuODc2MiA3Ni43MzE1IDk5LjY1NzMgNzYuMjMzMUM5OS40Mzg1IDc1LjczNDggOTkuMTE4NSA3NS4yODI3IDk4LjcxNTcgNzQuOTAzTDIxLjM2MDUgMS4zODc5NUMyMC45NjEgMS4wMDUxNCAyMC40ODYgMC43MDE2NDcgMTkuOTYzIDAuNDk0OTg2QzE5LjQ0IDAuMjg4MzI2IDE4Ljg3OTIgMC4xODI1ODggMTguMzEzMSAwLjE4Mzg2NUMxNy43NDcgMC4xODUxNDIgMTcuMTg2OCAwLjI5MzQwOSAxNi42NjQ3IDAuNTAyNDI3QzE2LjE0MjYgMC43MTE0NDUgMTUuNjY5IDEuMDE3MDggMTUuMjcxMiAxLjQwMTY5WlwiIC8+XHJcbjwvc3ZnPlxyXG5gXHJcbmNvbnN0IGNhbGxNYWluQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYWxsTWFpbkNvbnRhaW5lclwiKVxyXG5jb25zdCB3YWl0aW5nU2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2FpdGluZ1NlY3Rpb25cIilcclxuY29uc3QgYmVmb3JlQ2FsbFNlY3Rpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJlZm9yZUNhbGxTZWN0aW9uXCIpXHJcbmNvbnN0IG9uQ2FsbFNlY3Rpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm9uQ2FsbFNlY3Rpb25cIilcclxuY29uc3Qgb25DYWxsTWFpblZpZXcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm9uQ2FsbE1haW5WaWV3XCIpXHJcbmNvbnN0IG9uQ2FsbFVzZXJCb3hTbGlkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm9uQ2FsbFVzZXJCb3hTbGlkZXJcIilcclxuY29uc3Qgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgXCJvbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXJcIlxyXG4pXHJcbmNvbnN0IG9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuICBcIm9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXJcIlxyXG4pXHJcbmNvbnN0IG9uQ2FsbENhbGxTdGF0dXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm9uQ2FsbENhbGxTdGF0dXNcIilcclxuY29uc3Qgb25DYWxsTWFpbkJ0bkNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib25DYWxsTWFpbkJ0bkNvbnRhaW5lclwiKVxyXG5sZXQgY2FsbFJvb21cclxubGV0IG93bkNhbGxSb29tTWVtYmVyRGF0YVxyXG5sZXQgaXNOb25Hcm91cENoYXRDYWxsID0gZmFsc2VcclxubGV0IGlzTm9uR3JvdXBDaGF0Q2FsbENvbm5lY3RlZCA9IGZhbHNlXHJcblxyXG5sZXQgbXlNZWRpYVN0cmVhbVxyXG5sZXQgaXNTY3JlZW5TaGFyZU9uID0gZmFsc2VcclxubGV0IGlzQ2FtZXJhT24gPSB0cnVlXHJcbmxldCBpc0F1ZGlvT24gPSB0cnVlXHJcblxyXG5sZXQgbXlQZWVyXHJcbmxldCBhbGxNZWRpYUNvbm5lY3Rpb25zID0ge31cclxuXHJcbmxldCBiZXN0U2NyZWVuV2lkdGhcclxubGV0IGJlc3RTY3JlZW5XaWR0aFJhdGlvID0gNCAvIDNcclxubGV0IG1haW5WaWV3Q3NzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUob25DYWxsTWFpblZpZXcpXHJcblxyXG5pbXBvcnQgXCIuLi9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzXCJcclxuXHJcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gXCJ1dWlkXCJcclxuaW1wb3J0IHsgUGVlciB9IGZyb20gXCJwZWVyanNcIlxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU9uQ2FsbFNlY3Rpb24oXHJcbiAgY2FsbFJvb21EYXRhLFxyXG4gIG1lZGlhU3RyZWFtLFxyXG4gIHN0cmVhbVR5cGVEYXRhXHJcbikge1xyXG4gIGNhbGxSb29tID0gY2FsbFJvb21EYXRhXHJcbiAgbXlNZWRpYVN0cmVhbSA9IG1lZGlhU3RyZWFtXHJcbiAgaXNTY3JlZW5TaGFyZU9uID0gc3RyZWFtVHlwZURhdGEuaXNTY3JlZW5TaGFyZU9uXHJcbiAgaXNDYW1lcmFPbiA9IHN0cmVhbVR5cGVEYXRhLmlzQ2FtZXJhT25cclxuICBpc0F1ZGlvT24gPSBzdHJlYW1UeXBlRGF0YS5pc0F1ZGlvT25cclxuXHJcbiAgY29uc29sZS5sb2coXCJvZ2luYWwgY2FsbFJvb21EYXRhOlwiLCBjYWxsUm9vbSlcclxuICB3YWl0aW5nU2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKFwid2FpdGluZy1zZWN0aW9uLS1oaWRlXCIpXHJcblxyXG4gIGxldCBvbkNhbGxVc2VyQm94U2xpZGVySHRtbCA9IGBcclxuICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC11c2VyLWJveC1zbGlkZXItYnRuIG9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLWJ0bi0tdW5zZWxlY3RlZFwiPlxyXG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci1idG5fX2ljb24gb24tY2FsbC11c2VyLWJveC1zbGlkZXItYnRuX19pY29uLS11bnNlbGVjdGVkXCI+XHJcbiAgICAgICAgICAgJHtzdmdfY2FsbFJpZ2h0QXJyb3dJY29ufVxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci1idG5fX2ljb24gb24tY2FsbC11c2VyLWJveC1zbGlkZXItYnRuX19pY29uLS1zZWxlY3RlZFwiPlxyXG4gICAgICAgICAgICR7c3ZnX2NhbGxMZWZ0QXJyb3dJY29ufVxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgIDwvZGl2PlxyXG5gXHJcbiAgb25DYWxsVXNlckJveFNsaWRlci5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgb25DYWxsVXNlckJveFNsaWRlckh0bWwpXHJcblxyXG4gIGxldCBvbkNhbGxNYWluQnRuQ29udGFpbmVySHRtbFxyXG4gIGlmIChjYWxsUm9vbS5pc0NoYXRSb29tKSB7XHJcbiAgICBpZiAoY2FsbFJvb20ucm9vbUNoYXQuaXNHcm91cENoYXQpIHtcclxuICAgICAgbGV0IHsgZ3JvdXBDaGF0Q2FsbFJvb21CdG5zIH0gPSBhd2FpdCBpbXBvcnQoXCIuL29uQ2FsbFNlY3Rpb25CdG5zLmRldlwiKVxyXG4gICAgICBvbkNhbGxNYWluQnRuQ29udGFpbmVySHRtbCA9IGdyb3VwQ2hhdENhbGxSb29tQnRuc1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbGV0IHsgbm9uR3JvdXBDaGF0Q2FsbFJvb21CdG5zIH0gPSBhd2FpdCBpbXBvcnQoXCIuL29uQ2FsbFNlY3Rpb25CdG5zLmRldlwiKVxyXG4gICAgICBvbkNhbGxNYWluQnRuQ29udGFpbmVySHRtbCA9IG5vbkdyb3VwQ2hhdENhbGxSb29tQnRuc1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBsZXQgeyBub25DaGF0Q2FsbFJvb21CdG5zIH0gPSBhd2FpdCBpbXBvcnQoXCIuL29uQ2FsbFNlY3Rpb25CdG5zLmRldlwiKVxyXG4gICAgb25DYWxsTWFpbkJ0bkNvbnRhaW5lckh0bWwgPSBub25DaGF0Q2FsbFJvb21CdG5zXHJcbiAgfVxyXG4gIG9uQ2FsbE1haW5CdG5Db250YWluZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFxyXG4gICAgXCJiZWZvcmVlbmRcIixcclxuICAgIG9uQ2FsbE1haW5CdG5Db250YWluZXJIdG1sXHJcbiAgKVxyXG4gIGlmIChpc1NjcmVlblNoYXJlT24pIHtcclxuICAgIGxldCBjYW1lcmFCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgLm9uLWNhbGwtYnRuW2RhdGEtYnRuLXR5cGU9XCJjYWxsLXZpZGVvXCJdYFxyXG4gICAgKVxyXG4gICAgaWYgKGNhbWVyYUJ0bikgY2FtZXJhQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tZGlzYWJsZVwiKVxyXG4gIH1cclxuXHJcbiAgaWYgKGNhbGxSb29tLmhhc093blByb3BlcnR5KFwibWVtYmVyc1wiKSkge1xyXG4gICAgY29uc29sZS5sb2coXCJNZW1iZXJzIGNvdW50OlwiLCBjYWxsUm9vbS5tZW1iZXJzLmxlbmd0aClcclxuICAgIG93bkNhbGxSb29tTWVtYmVyRGF0YSA9IGNhbGxSb29tLm1lbWJlcnMuZmluZChtZW1iZXIgPT4ge1xyXG4gICAgICByZXR1cm4gbWVtYmVyLnVzZXIuX2lkLnRvU3RyaW5nKCkgPT09IGNhbGxSb29tLm93bk1lbWJlclVzZXJJZC50b1N0cmluZygpXHJcbiAgICB9KVxyXG5cclxuICAgIGlmIChjYWxsUm9vbS5tZW1iZXJzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgY2FsbFJvb20ubWVtYmVycy5mb3JFYWNoKG1lbWJlciA9PiB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgbWVtYmVyLnVzZXIuX2lkLnRvU3RyaW5nKCkgPT09IGNhbGxSb29tLm93bk1lbWJlclVzZXJJZC50b1N0cmluZygpXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICBsZXQgb25DYWxsVXNlckJveCA9IGNyZWF0ZU9uQ2FsbFVzZXJCb3gobWVtYmVyKVxyXG4gICAgICAgICAgY2hhbmdlT25DYWxsVXNlckJveEJ0bihvbkNhbGxVc2VyQm94LCBcIm1haW4tdmlld1wiKVxyXG4gICAgICAgICAgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyLmluc2VydEFkamFjZW50RWxlbWVudChcclxuICAgICAgICAgICAgXCJhZnRlcmJlZ2luXCIsXHJcbiAgICAgICAgICAgIG9uQ2FsbFVzZXJCb3hcclxuICAgICAgICAgIClcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBjcmVhdGVPbkNhbGxVc2VyQm94KG1lbWJlcilcclxuICAgICAgICAgIGNoYW5nZU9uQ2FsbFVzZXJCb3hCdG4ob25DYWxsVXNlckJveCwgXCJzbGlkZXJcIilcclxuICAgICAgICAgIG9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFxyXG4gICAgICAgICAgICBcImFmdGVyYmVnaW5cIixcclxuICAgICAgICAgICAgb25DYWxsVXNlckJveFxyXG4gICAgICAgICAgKVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgc2hvd09uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lcigpXHJcbiAgICAgIGNoYW5nZUhlaWdodEFuZFdpZHRoT2ZPbkNhbGxVc2VyQm94SW5NYWluVmlldygpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAoY2FsbFJvb20ubWVtYmVycy5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICBsZXQgb25DYWxsVXNlckJveCA9IGNyZWF0ZU9uQ2FsbFVzZXJCb3goY2FsbFJvb20ubWVtYmVyc1swXSlcclxuICAgICAgICBjaGFuZ2VPbkNhbGxVc2VyQm94QnRuKG9uQ2FsbFVzZXJCb3gsIFwic2xpZGVyXCIpXHJcblxyXG4gICAgICAgIG9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFxyXG4gICAgICAgICAgXCJhZnRlcmJlZ2luXCIsXHJcbiAgICAgICAgICBvbkNhbGxVc2VyQm94XHJcbiAgICAgICAgKVxyXG4gICAgICB9XHJcbiAgICAgIGlmIChjYWxsUm9vbS5pc0NoYXRSb29tKSB7XHJcbiAgICAgICAgaWYgKGNhbGxSb29tLnJvb21DaGF0LmlzR3JvdXBDaGF0ID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgaXNOb25Hcm91cENoYXRDYWxsID0gdHJ1ZVxyXG4gICAgICAgICAgY3JlYXRlT25DYWxsQ2FsbFN0YXR1cyhcIkNvbm5lY3RpbmdcIilcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY3JlYXRlT25DYWxsQ2FsbFN0YXR1cyhcIldhaXRpbmcgZm9yIG90aGVycyB0byBqb2luXCIpXHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNyZWF0ZU9uQ2FsbENhbGxTdGF0dXMoXCJTZW5kIHRoaXMgbGluayB0byBvdGhlcnMgc28gdGhleSBjYW4gam9pblwiKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhd2FpdCBpbml0aWFsaXNlQ2FsbCgpXHJcbiAgaW5pdGlhbGlzZU9uQ2FsbE1haW5WaWV3UmVzaXplT2JzZXJ2ZXIoKVxyXG5cclxuICBpbml0aWFsaXNlRXZlbnRGb3JPbkNhbGxTZWN0aW9uKClcclxuXHJcbiAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICBiZWZvcmVDYWxsU2VjdGlvbi5jbGFzc0xpc3QuYWRkKFwiYmVmb3JlLWNhbGwtc2VjdGlvbi0taGlkZVwiKVxyXG4gICAgd2FpdGluZ1NlY3Rpb24uY2xhc3NMaXN0LmFkZChcIndhaXRpbmctc2VjdGlvbi0taGlkZVwiKVxyXG4gICAgb25DYWxsU2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC1zZWN0aW9uLS1oaWRlXCIpXHJcbiAgfSwgMjAwMClcclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdGlhbGlzZU9uQ2FsbE1haW5WaWV3UmVzaXplT2JzZXJ2ZXIoKSB7XHJcbiAgYmVzdFNjcmVlbldpZHRoID0gcGFyc2VGbG9hdChtYWluVmlld0Nzcy53aWR0aClcclxuXHJcbiAgY29uc3QgcmVzaXplT2JzZXJ2ZXJGb3JNYWluVmlldyA9IG5ldyBSZXNpemVPYnNlcnZlcihlbnRyaWVzID0+IHtcclxuICAgIGxldCBlbGVtZW50V2lkdGggPSBlbnRyaWVzWzBdLmNvbnRlbnRCb3hTaXplWzBdLmlubGluZVNpemVcclxuICAgIGxldCBlbGVtZW50SGVpZ2h0ID0gZW50cmllc1swXS5jb250ZW50Qm94U2l6ZVswXS5ibG9ja1NpemVcclxuXHJcbiAgICBpZiAoZWxlbWVudFdpZHRoID4gZWxlbWVudEhlaWdodCAqIGJlc3RTY3JlZW5XaWR0aFJhdGlvKSB7XHJcbiAgICAgIGJlc3RTY3JlZW5XaWR0aCA9IGVsZW1lbnRIZWlnaHQgKiBiZXN0U2NyZWVuV2lkdGhSYXRpb1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYmVzdFNjcmVlbldpZHRoID0gcGFyc2VGbG9hdChtYWluVmlld0Nzcy53aWR0aClcclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VIZWlnaHRBbmRXaWR0aE9mT25DYWxsVXNlckJveEluTWFpblZpZXcoXHJcbiAgICAgIGVudHJpZXNbMF0uY29udGVudEJveFNpemVbMF0uaW5saW5lU2l6ZSxcclxuICAgICAgZW50cmllc1swXS5jb250ZW50Qm94U2l6ZVswXS5ibG9ja1NpemVcclxuICAgIClcclxuICB9KVxyXG4gIHJlc2l6ZU9ic2VydmVyRm9yTWFpblZpZXcub2JzZXJ2ZShvbkNhbGxNYWluVmlldylcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGlzZUNhbGwoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGlmIChpc0NhbWVyYU9uKSB7XHJcbiAgICAgIG9uQ2FsbENhbWVyYU9uKClcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG9uQ2FsbENhbWVyYU9mZigpXHJcbiAgICB9XHJcbiAgICBpZiAoaXNTY3JlZW5TaGFyZU9uKSB7XHJcbiAgICAgIG9uQ2FsbFN3aXRjaENhbWVyYVRvU2NyZWVuU2hhcmUoKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgb25DYWxsU3dpdGNoU2NyZWVuU2hhcmVUb0NhbWVyYSgpXHJcbiAgICB9XHJcbiAgICBpZiAoaXNBdWRpb09uKSB7XHJcbiAgICAgIG9uQ2FsbEF1ZGlvT24oKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgb25DYWxsQXVkaW9PZmYoKVxyXG4gICAgfVxyXG5cclxuICAgIG15UGVlciA9IG5ldyBQZWVyKHV1aWR2NCgpLCB7IGRlYnVnOiAwIH0pXHJcblxyXG4gICAgZmV0Y2goXCIvY2FsbC1yb29tLW1lbWJlci91cGRhdGUtcGVlci1pZFwiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQdXRcIiwgLy8gb3IgJ1BVVCdcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICB1c2VySWQ6IGxvZ2luVXNlci5faWQudG9TdHJpbmcoKSxcclxuICAgICAgICBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQudG9TdHJpbmcoKSxcclxuICAgICAgICBwZWVySWQ6IG15UGVlci5pZFxyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzcG9uc2UpXHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKGFzeW5jIGRhdGEgPT4ge1xyXG4gICAgICAgIGlmIChkYXRhLmlzU3VjY2Vzcykge1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBsZXQgeyBjcmVhdGVNYWluTm90aWZpY2F0aW9uIH0gPSBhd2FpdCBpbXBvcnQoXHJcbiAgICAgICAgICAgIFwiLi4vLi4vY29tbW9uL21haW5Ob3RpZmljYXRpb24uZGV2XCJcclxuICAgICAgICAgIClcclxuICAgICAgICAgIGNyZWF0ZU1haW5Ob3RpZmljYXRpb24oZGF0YS5lcnJvciwgXCJlcnJvclwiKVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGFzeW5jIGVyciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICAgIGxldCB7IGNyZWF0ZU1haW5Ob3RpZmljYXRpb24gfSA9IGF3YWl0IGltcG9ydChcclxuICAgICAgICAgIFwiLi4vLi4vY29tbW9uL21haW5Ob3RpZmljYXRpb24uZGV2XCJcclxuICAgICAgICApXHJcbiAgICAgICAgY3JlYXRlTWFpbk5vdGlmaWNhdGlvbihcclxuICAgICAgICAgIFwiU2VydmVyIGVycm9yIGluIHVwZGF0aW5nIHBlZXIscGxlYXNlIHJlZnJlc2ggeW91ciBwYWdlXCIsXHJcbiAgICAgICAgICBcImVycm9yXCJcclxuICAgICAgICApXHJcbiAgICAgIH0pXHJcblxyXG4gICAgYWRkU3RyZWFtVG9PbkNhbGxVc2VyQm94KGxvZ2luVXNlci5faWQudG9TdHJpbmcoKSwgbXlNZWRpYVN0cmVhbSlcclxuXHJcbiAgICBteVBlZXIub24oXCJvcGVuXCIsIGlkID0+IHtcclxuICAgICAgbGV0IGV2ZW50RGF0YSA9IHtcclxuICAgICAgICBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQsXHJcbiAgICAgICAgdXNlcklkOiBsb2dpblVzZXIuX2lkLFxyXG4gICAgICAgIHBlZXJJZDogbXlQZWVyLmlkXHJcbiAgICAgIH1cclxuICAgICAgc29ja2V0LmVtaXQoXCJjYWxsOmpvaW4tY2FsbC1yb29tXCIsIGV2ZW50RGF0YSlcclxuICAgIH0pXHJcblxyXG4gICAgbXlQZWVyLm9uKFwiY2FsbFwiLCBtZWRpYUNvbm5lY3Rpb24gPT4ge1xyXG4gICAgICBtZWRpYUNvbm5lY3Rpb24uYW5zd2VyKG15TWVkaWFTdHJlYW0pXHJcbiAgICAgIG1lZGlhQ29ubmVjdGlvbi5vbmNlKFwic3RyZWFtXCIsIG90aGVyTWVkaWFTdHJlYW0gPT4ge1xyXG4gICAgICAgIGFkZFN0cmVhbVRvT25DYWxsVXNlckJveChcclxuICAgICAgICAgIG1lZGlhQ29ubmVjdGlvbi5tZXRhZGF0YS51c2VySWQsXHJcbiAgICAgICAgICBvdGhlck1lZGlhU3RyZWFtXHJcbiAgICAgICAgKVxyXG4gICAgICB9KVxyXG4gICAgICBhbGxNZWRpYUNvbm5lY3Rpb25zW21lZGlhQ29ubmVjdGlvbi5wZWVyXSA9IG1lZGlhQ29ubmVjdGlvblxyXG4gICAgfSlcclxuXHJcbiAgICBteVBlZXIub24oXCJlcnJvclwiLCBlcnIgPT4ge1xyXG4gICAgICBpZiAoIW15UGVlci5kZXN0cm95ZWQpIG15UGVlci5kZXN0cm95KClcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgaW4gcGVlcjogXCIsIGVyci50eXBlKVxyXG4gICAgfSlcclxuXHJcbiAgICBteVBlZXIub24oXCJkaXNjb25uZWN0ZWRcIiwgKCkgPT4ge1xyXG4gICAgICBteVBlZXIucmVjb25uZWN0KClcclxuICAgIH0pXHJcblxyXG4gICAgbXlQZWVyLm9uKFwiY2xvc2VcIiwgKCkgPT4ge1xyXG4gICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICBjYWxsUm9vbUlkOiBjYWxsUm9vbS5fSWRcclxuICAgICAgfVxyXG5cclxuICAgICAgZmV0Y2goXCIvY2FsbC9sZWZ0LWNhbGwtcm9vbVwiLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIiwgLy8gb3IgJ1BVVCdcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSlcclxuICAgICAgfSlcclxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgICAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlc3BvbnNlKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oYXN5bmMgZGF0YSA9PiB7XHJcbiAgICAgICAgICBpZiAoZGF0YS5pc1N1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyLmlubmVySFRNTCA9IFwiXCJcclxuICAgICAgICAgICAgb25DYWxsU2xpZGVyVXNlckJveENvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiXHJcblxyXG4gICAgICAgICAgICBsZXQgeyBjcmVhdGVBZnRlckNhbGxTZWN0aW9uIH0gPSBhd2FpdCBpbXBvcnQoXHJcbiAgICAgICAgICAgICAgXCIuL2FmdGVyQ2FsbFNlY3Rpb24uZGV2XCJcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICBjcmVhdGVBZnRlckNhbGxTZWN0aW9uKGNhbGxSb29tLCBkYXRhLmlzQ2FsbEVuZGVkKVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbXlQZWVyLmRlc3Ryb3koKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKGFzeW5jIGVyciA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgICAgICBteVBlZXIuZGVzdHJveSgpXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgIGZvciAobGV0IHBlZXIgaW4gYWxsTWVkaWFDb25uZWN0aW9ucykge1xyXG4gICAgICAgIGFsbE1lZGlhQ29ubmVjdGlvbnNbcGVlcl0uY2xvc2UoKVxyXG4gICAgICAgIGRlbGV0ZSBhbGxNZWRpYUNvbm5lY3Rpb25zLnBlZXJcclxuICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICBpZiAoaXNOb25Hcm91cENoYXRDYWxsID09PSB0cnVlKSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGlmIChpc05vbkdyb3VwQ2hhdENhbGxDb25uZWN0ZWQgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICBvbkNhbGxDYWxsU3RhdHVzXHJcbiAgICAgICAgICAgIC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICAgICAgICAgIFwib24tY2FsbC1jYWxsLXN0YXR1c19fcm9vbS1zdGF0dXMtZWZmZWN0XCJcclxuICAgICAgICAgICAgKVswXVxyXG4gICAgICAgICAgICAuY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtY2FsbC1zdGF0dXNfX3Jvb20tc3RhdHVzLWVmZmVjdC0taGlkZVwiKVxyXG4gICAgICAgICAgdXBkYXRlT25DYWxsQ2FsbFN0YXR1cyhcIlRpbWUgb3V0XCIpXHJcbiAgICAgICAgICBvbkNhbGxNYWluQnRuQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXHJcbiAgICAgICAgICAgIFwib24tY2FsbC1tYWluLWJ0bi1jb250YWluZXItLWhpZGVcIlxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICAgb25DYWxsVXNlckJveFNsaWRlci5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC11c2VyLWJveC1zbGlkZXItLWhpZGVcIilcclxuXHJcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgc2VuZFJlcXVlc3RUb0VuZENhbGwoKVxyXG4gICAgICAgICAgfSwgMzAwMClcclxuICAgICAgICB9XHJcbiAgICAgIH0sIDEwMDAgKiA5MClcclxuICAgIH1cclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcImVycm9yIGluIGNhbGxpbmc6XCIsIGUpXHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIGluaXRpYWxpc2VFdmVudEZvck9uQ2FsbFNlY3Rpb24oKSB7XHJcbiAgb25DYWxsTWFpbkJ0bkNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYXN5bmMgZSA9PiB7XHJcbiAgICBsZXQgb25DYWxsQnRuID0gZS50YXJnZXQuY2xvc2VzdChgLm9uLWNhbGwtYnRuYClcclxuICAgIGlmIChvbkNhbGxCdG4gJiYgb25DYWxsTWFpbkJ0bkNvbnRhaW5lci5jb250YWlucyhvbkNhbGxCdG4pKSB7XHJcbiAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5UeXBlID09PSBcImNhbGwtdmlkZW9cIikge1xyXG4gICAgICAgIGlmIChpc1NjcmVlblNoYXJlT24gPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICBpZiAob25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcImNhbGwtdmlkZW8tb2ZmXCIpIHtcclxuICAgICAgICAgICAgb25DYWxsQ2FtZXJhT2ZmKClcclxuICAgICAgICAgIH0gZWxzZSBpZiAob25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcImNhbGwtdmlkZW8tb25cIikge1xyXG4gICAgICAgICAgICBvbkNhbGxDYW1lcmFPbigpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5UeXBlID09PSBcImNhbGwtYXVkaW9cIikge1xyXG4gICAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPT09IFwiY2FsbC1hdWRpby1vZmZcIikge1xyXG4gICAgICAgICAgb25DYWxsQXVkaW9PZmYoKVxyXG4gICAgICAgIH0gZWxzZSBpZiAob25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcImNhbGwtYXVkaW8tb25cIikge1xyXG4gICAgICAgICAgb25DYWxsQXVkaW9PbigpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5UeXBlID09PSBcImNhbGwtc2hhcmUtc2NyZWVuXCIpIHtcclxuICAgICAgICBpZiAob25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcImNhbGwtc2hhcmUtc2NyZWVuLW9uXCIpIHtcclxuICAgICAgICAgIGxldCBjYW1lcmFCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgICBgLm9uLWNhbGwtYnRuW2RhdGEtYnRuLXR5cGU9XCJjYWxsLXZpZGVvXCJdYFxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICAgaWYgKGNhbWVyYUJ0bikgY2FtZXJhQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tZGlzYWJsZVwiKVxyXG4gICAgICAgICAgb25DYWxsU3dpdGNoQ2FtZXJhVG9TY3JlZW5TaGFyZSgpXHJcbiAgICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICAgIG9uQ2FsbEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9PT0gXCJjYWxsLXNoYXJlLXNjcmVlbi1vZmZcIlxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgbGV0IGNhbWVyYUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICAgIGAub24tY2FsbC1idG5bZGF0YS1idG4tdHlwZT1cImNhbGwtdmlkZW9cIl1gXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgICBpZiAoY2FtZXJhQnRuKSBjYW1lcmFCdG4uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtYnRuLS1kaXNhYmxlXCIpXHJcbiAgICAgICAgICBvbkNhbGxTd2l0Y2hTY3JlZW5TaGFyZVRvQ2FtZXJhKClcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG9uQ2FsbEJ0bi5kYXRhc2V0LmJ0blR5cGUgPT09IFwiY2FsbC1zaGFyZS1yb29tXCIpIHtcclxuICAgICAgICBpZiAob25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcIm9wZW4tbW9kYWxcIikge1xyXG4gICAgICAgICAgb25DYWxsQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgICAgICAgb25DYWxsQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tc2VsZWN0ZWRcIilcclxuICAgICAgICAgIG9uQ2FsbEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9IFwiY2xvc2UtbW9kYWxcIlxyXG4gICAgICAgICAgbGV0IHsgY3JlYXRlT25DYWxsUm9vbVNoYXJlTW9kYWwgfSA9IGF3YWl0IGltcG9ydChcclxuICAgICAgICAgICAgXCIuL29uQ2FsbFJvb21TaGFyZU1vZGFsLmRldlwiXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgICBjcmVhdGVPbkNhbGxSb29tU2hhcmVNb2RhbCgpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5UeXBlID09PSBcImNhbGwtcm9vbS1pbmZvXCIpIHtcclxuICAgICAgICBpZiAob25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcIm9wZW4tbW9kYWxcIikge1xyXG4gICAgICAgICAgb25DYWxsQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgICAgICAgb25DYWxsQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tc2VsZWN0ZWRcIilcclxuICAgICAgICAgIG9uQ2FsbEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9IFwiY2xvc2UtbW9kYWxcIlxyXG4gICAgICAgICAgbGV0IHsgY3JlYXRlT25DYWxsUm9vbUluZm9Nb2RhbCB9ID0gYXdhaXQgaW1wb3J0KFxyXG4gICAgICAgICAgICBcIi4vb25DYWxsUm9vbUluZm9Nb2RhbC5kZXZcIlxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICAgY3JlYXRlT25DYWxsUm9vbUluZm9Nb2RhbChjYWxsUm9vbSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKG9uQ2FsbEJ0bi5kYXRhc2V0LmJ0blR5cGUgPT09IFwiY2FsbC1lbmRcIikge1xyXG4gICAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPT09IFwiZW5kLWNhbGxcIikge1xyXG4gICAgICAgICAgc2VuZFJlcXVlc3RUb0VuZENhbGwoKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pXHJcblxyXG4gIGxldCBvbkNhbGxVc2VyQm94U2xpZGVyQnRuID0gb25DYWxsVXNlckJveFNsaWRlci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci1idG5cIlxyXG4gIClbMF1cclxuICBpZiAob25DYWxsVXNlckJveFNsaWRlckJ0bikge1xyXG4gICAgb25DYWxsVXNlckJveFNsaWRlckJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYXN5bmMgZSA9PiB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICAhb25DYWxsVXNlckJveFNsaWRlci5jbGFzc0xpc3QuY29udGFpbnMoXHJcbiAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLS1zbGlkZVwiXHJcbiAgICAgICAgKVxyXG4gICAgICApIHtcclxuICAgICAgICBvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci0tc2xpZGVcIilcclxuXHJcbiAgICAgICAgb25DYWxsVXNlckJveFNsaWRlckJ0bi5jbGFzc0xpc3QucmVtb3ZlKFxyXG4gICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci1idG4tLXVuc2VsZWN0ZWRcIlxyXG4gICAgICAgIClcclxuICAgICAgICBvbkNhbGxVc2VyQm94U2xpZGVyQnRuLmNsYXNzTGlzdC5hZGQoXHJcbiAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLWJ0bi0tc2VsZWN0ZWRcIlxyXG4gICAgICAgIClcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci0tc2xpZGVcIilcclxuXHJcbiAgICAgICAgb25DYWxsVXNlckJveFNsaWRlckJ0bi5jbGFzc0xpc3QucmVtb3ZlKFxyXG4gICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci1idG4tLXNlbGVjdGVkXCJcclxuICAgICAgICApXHJcbiAgICAgICAgb25DYWxsVXNlckJveFNsaWRlckJ0bi5jbGFzc0xpc3QuYWRkKFxyXG4gICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci1idG4tLXVuc2VsZWN0ZWRcIlxyXG4gICAgICAgIClcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIGlmIChvbkNhbGxNYWluVmlldylcclxuICAgIG9uQ2FsbE1haW5WaWV3LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcclxuICAgICAgaWYgKFxyXG4gICAgICAgICFvbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKFxyXG4gICAgICAgICAgXCJvbi1jYWxsLW1haW4tdmlldy11c2VyLWJveC1jb250YWluZXItLWhpZGVcIlxyXG4gICAgICAgIClcclxuICAgICAgKSB7XHJcbiAgICAgICAgbGV0IG9uQ2FsbFVzZXJCb3hCdG4gPSBlLnRhcmdldC5jbG9zZXN0KGAub24tY2FsbC11c2VyLWJveF9fYnRuYClcclxuXHJcbiAgICAgICAgaWYgKG9uQ2FsbFVzZXJCb3hCdG4gJiYgb25DYWxsTWFpblZpZXcuY29udGFpbnMob25DYWxsVXNlckJveEJ0bikpIHtcclxuICAgICAgICAgIGxldCBvbkNhbGxVc2VyQm94ID0gb25DYWxsVXNlckJveEJ0bi5jbG9zZXN0KFwiLm9uLWNhbGwtdXNlci1ib3hcIilcclxuXHJcbiAgICAgICAgICBpZiAob25DYWxsVXNlckJveEJ0bi5kYXRhc2V0LmJ0blR5cGUgPT09IFwidXNlci1waW4tdW5waW5cIikge1xyXG4gICAgICAgICAgICBpZiAob25DYWxsVXNlckJveEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9PT0gXCJwaW4tdXNlci1ib3hcIikge1xyXG4gICAgICAgICAgICAgIGlmIChvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmNvbnRhaW5zKG9uQ2FsbFVzZXJCb3gpKSB7XHJcbiAgICAgICAgICAgICAgICBvbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuYXBwZW5kQ2hpbGQob25DYWxsVXNlckJveClcclxuICAgICAgICAgICAgICAgIGNoYW5nZUhlaWdodEFuZFdpZHRoT2ZPbkNhbGxVc2VyQm94SW5NYWluVmlldygpXHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGxlZnRTbGlkZXJVc2VyQm94Q291bnQgPVxyXG4gICAgICAgICAgICAgICAgICBvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgICAgICAgICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94XCJcclxuICAgICAgICAgICAgICAgICAgKS5sZW5ndGhcclxuICAgICAgICAgICAgICAgIGlmIChsZWZ0U2xpZGVyVXNlckJveENvdW50ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAhb25DYWxsVXNlckJveFNsaWRlci5jbGFzc0xpc3QuY29udGFpbnMoXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLS1oaWRlXCJcclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5hZGQoXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLS1oaWRlXCJcclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94QnRuLmNsYXNzTGlzdC5yZW1vdmUoXHJcbiAgICAgICAgICAgICAgICAgIFwib24tY2FsbC11c2VyLWJveF9fYnRuLS1tYWluLXZpZXdcIlxyXG4gICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgb25DYWxsVXNlckJveEJ0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC11c2VyLWJveF9fYnRuLS1zbGlkZXJcIilcclxuICAgICAgICAgICAgICAgIG9uQ2FsbFVzZXJCb3hCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcInVucGluLXVzZXItYm94XCJcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgICAgICAgICAgb25DYWxsVXNlckJveEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9PT0gXCJ1bnBpbi11c2VyLWJveFwiXHJcbiAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgIGlmIChvbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuY29udGFpbnMob25DYWxsVXNlckJveCkpIHtcclxuICAgICAgICAgICAgICAgIGxldCBtYWluVmlld1VzZXJCb3hDb3VudCA9XHJcbiAgICAgICAgICAgICAgICAgIG9uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICAgICAgICAgICAgICAgIFwib24tY2FsbC11c2VyLWJveFwiXHJcbiAgICAgICAgICAgICAgICAgICkubGVuZ3RoXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKG1haW5WaWV3VXNlckJveENvdW50ID4gMSkge1xyXG4gICAgICAgICAgICAgICAgICBvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmFwcGVuZENoaWxkKG9uQ2FsbFVzZXJCb3gpXHJcblxyXG4gICAgICAgICAgICAgICAgICBsZXQgc2xpZGVyVXNlckJveENvdW50ID1cclxuICAgICAgICAgICAgICAgICAgICBvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgICAgICAgICAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3hcIlxyXG4gICAgICAgICAgICAgICAgICAgICkubGVuZ3RoXHJcblxyXG4gICAgICAgICAgICAgICAgICBpZiAoc2xpZGVyVXNlckJveENvdW50ID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2FsbFVzZXJCb3hTbGlkZXIuY2xhc3NMaXN0LmNvbnRhaW5zKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLS1oaWRlXCJcclxuICAgICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5yZW1vdmUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwib24tY2FsbC11c2VyLWJveC1zbGlkZXItLWhpZGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIHJlc2V0SGVpZ2h0QW5kV2lkdGhPZk9uQ2FsbFVzZXJCb3goKVxyXG4gICAgICAgICAgICAgICAgICBjaGFuZ2VIZWlnaHRBbmRXaWR0aE9mT25DYWxsVXNlckJveEluTWFpblZpZXcoKVxyXG5cclxuICAgICAgICAgICAgICAgICAgb25DYWxsVXNlckJveEJ0bi5jbGFzc0xpc3QucmVtb3ZlKFxyXG4gICAgICAgICAgICAgICAgICAgIFwib24tY2FsbC11c2VyLWJveF9fYnRuLS1zbGlkZXJcIlxyXG4gICAgICAgICAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94QnRuLmNsYXNzTGlzdC5hZGQoXHJcbiAgICAgICAgICAgICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94X19idG4tLW1haW4tdmlld1wiXHJcbiAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgb25DYWxsVXNlckJveEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9IFwicGluLXVzZXItYm94XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuZnVuY3Rpb24gY29ubmVjdFRvTmV3Sm9pbmVkTWVtYmVyKG90aGVyVXNlcklkLCBvdGhlclBlZXJJZCwgbXlTdHJlYW0pIHtcclxuICBjb25zdCBtZWRpYUNvbm5lY3Rpb24gPSBteVBlZXIuY2FsbChvdGhlclBlZXJJZCwgbXlTdHJlYW0sIHtcclxuICAgIG1ldGFkYXRhOiB7IHVzZXJJZDogbG9naW5Vc2VyLl9pZC50b1N0cmluZygpLCBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQgfVxyXG4gIH0pXHJcblxyXG4gIG1lZGlhQ29ubmVjdGlvbi5vbmNlKFwic3RyZWFtXCIsIG90aGVyTWVkaWFTdHJlYW0gPT4ge1xyXG4gICAgZmV0Y2hDYWxsUm9vbU1lbWJlckFuZENyZWF0ZVVzZXJCb3hXaXRoU3RyZWFtKFxyXG4gICAgICBtZWRpYUNvbm5lY3Rpb24ucGVlcixcclxuICAgICAgY2FsbFJvb20uX2lkLFxyXG4gICAgICBvdGhlck1lZGlhU3RyZWFtXHJcbiAgICApXHJcbiAgfSlcclxuXHJcbiAgbWVkaWFDb25uZWN0aW9uLm9uKFwiY2xvc2VcIiwgKCkgPT4ge1xyXG4gICAgcmVtb3ZlT25DYWxsVXNlckJveChvdGhlclVzZXJJZClcclxuICB9KVxyXG5cclxuICBtZWRpYUNvbm5lY3Rpb24ub24oXCJlcnJvclwiLCBmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkVycm9yIGluIG1lZGlhIGNvbm5lY3Rpb246XCIsIGVyci50eXBlKVxyXG4gIH0pXHJcblxyXG4gIGFsbE1lZGlhQ29ubmVjdGlvbnNbbWVkaWFDb25uZWN0aW9uLnBlZXJdID0gbWVkaWFDb25uZWN0aW9uXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZU9uQ2FsbFVzZXJCb3gobWVtYmVyKSB7XHJcbiAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXHJcbiAgb25DYWxsVXNlckJveC5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC11c2VyLWJveFwiKVxyXG4gIG9uQ2FsbFVzZXJCb3guZGF0YXNldC51c2VySWQgPSBtZW1iZXIudXNlci5faWRcclxuICBsZXQgb25DYWxsVXNlckJveEh0bWwgPSBgXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC11c2VyLWJveF9fdmlkZW9cIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm9uLWNhbGwtdXNlci1ib3hfX2F1ZGlvXCI+XHJcbiAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC11c2VyLWJveF9fYXVkaW8taWNvbiBvbi1jYWxsLXVzZXItYm94X19hdWRpby1pY29uLS1vblwiPlxyXG4gICAgICAgICAgICAgICAke3N2Z19jYWxsQXVkaW9Pbkljb259XHJcbiAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbi1jYWxsLXVzZXItYm94X19hdWRpby1pY29uIG9uLWNhbGwtdXNlci1ib3hfX2F1ZGlvLWljb24tLW9mZlwiPlxyXG4gICAgICAgICAgICAgICAke3N2Z19jYWxsQXVkaW9PZmZJY29ufVxyXG4gICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgPGRpdiBjbGFzcz1cIm9uLWNhbGwtdXNlci1ib3hfX2luZm9cIj5cclxuICAgICAgIDxkaXYgY2xhc3M9J29uLWNhbGwtdXNlci1ib3hfX3BpYyAke1xyXG4gICAgICAgICBtZW1iZXIudXNlci5oYXNPd25Qcm9wZXJ0eShcInByb2ZpbGVcIikgJiYgbWVtYmVyLnVzZXIucHJvZmlsZSAhPT0gXCJcIlxyXG4gICAgICAgICAgID8gXCJvbi1jYWxsLXVzZXItYm94X19waWMtLWltZ1wiXHJcbiAgICAgICAgICAgOiBcIm9uLWNhbGwtdXNlci1ib3hfX3BpYy0tc3ZnXCJcclxuICAgICAgIH0nPlxyXG5cclxuICAgICAgICAgJHtzdmdfY2FsbERlZmF1bHRSb29tVXNlclBpY0ljb259XHJcbiAgICAgICAgIDxpbWcgc3JjPScke1xyXG4gICAgICAgICAgIG1lbWJlci51c2VyLmhhc093blByb3BlcnR5KFwicHJvZmlsZVwiKSAmJiBtZW1iZXIudXNlci5wcm9maWxlICE9PSBcIlwiXHJcbiAgICAgICAgICAgICA/IG1lbWJlci51c2VyLnByb2ZpbGVcclxuICAgICAgICAgICAgIDogXCJcIlxyXG4gICAgICAgICB9JyBhbHQ9XCJcIj4gICBcclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC11c2VyLWJveF9fbmFtZVwiPjwvZGl2PlxyXG4gICAgPC9kaXY+XHJcblxyXG5cclxuICAgIDxkaXYgY2xhc3M9XCJvbi1jYWxsLXVzZXItYm94X19idG4tY29udGFpbmVyXCI+XHJcbiAgICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC11c2VyLWJveF9fYnRuXCJcclxuICAgICAgIGRhdGEtYnRuLXR5cGU9XCJ1c2VyLXBpbi11bnBpblwiIGRhdGEtYnRuLXdvcmtpbmctc3RhdGU9XCJcIlxyXG4gICAgICAgPlxyXG4gICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm9uLWNhbGwtdXNlci1ib3hfX2J0bi1pY29uIG9uLWNhbGwtdXNlci1ib3hfX2J0bi1pY29uLS1zbGlkZXJcIj5cclxuICAgICAgICAgICAgICR7c3ZnX2NhbGxQaW5Vc2VyQm94SWNvbn1cclxuICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJvbi1jYWxsLXVzZXItYm94X19idG4taWNvbiBvbi1jYWxsLXVzZXItYm94X19idG4taWNvbi0tbWFpbi12aWV3XCI+XHJcbiAgICAgICAgICAgICAke3N2Z19jYWxsVW5waW5Vc2VyQm94SWNvbn1cclxuICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgYFxyXG5cclxuICBvbkNhbGxVc2VyQm94Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBvbkNhbGxVc2VyQm94SHRtbClcclxuICBsZXQgbmFtZVxyXG4gIGlmIChtZW1iZXIudXNlci5faWQudG9TdHJpbmcoKSA9PT0gbG9naW5Vc2VyLl9pZC50b1N0cmluZygpKSB7XHJcbiAgICBuYW1lID0gXCIoWW91KVwiXHJcbiAgfSBlbHNlIHtcclxuICAgIG5hbWUgPSBtZW1iZXIudXNlci5maXJzdE5hbWUgKyBcIiBcIiArIG1lbWJlci51c2VyLmxhc3ROYW1lXHJcbiAgfVxyXG4gIG9uQ2FsbFVzZXJCb3guZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgIFwib24tY2FsbC11c2VyLWJveF9fbmFtZVwiXHJcbiAgKVswXS50ZXh0Q29udGVudCA9IG5hbWVcclxuXHJcbiAgaWYgKG1lbWJlci5pc0F1ZGlvT24pIHtcclxuICAgIG9uQ2FsbFVzZXJCb3hcclxuICAgICAgLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvbi1jYWxsLXVzZXItYm94X19hdWRpb1wiKVswXVxyXG4gICAgICAuY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtdXNlci1ib3hfX2F1ZGlvLS1vblwiKVxyXG4gIH0gZWxzZSB7XHJcbiAgICBvbkNhbGxVc2VyQm94XHJcbiAgICAgIC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwib24tY2FsbC11c2VyLWJveF9fYXVkaW9cIilbMF1cclxuICAgICAgLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X19hdWRpby0tb2ZmXCIpXHJcbiAgfVxyXG4gIGlmICghKG1lbWJlci5pc0NhbWVyYU9uIHx8IG1lbWJlci5pc1NjcmVlblNoYXJlT24pKSB7XHJcbiAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuICB9XHJcbiAgaWYgKG1lbWJlci5pc0NhbWVyYU9uKSB7XHJcbiAgICBvbkNhbGxVc2VyQm94XHJcbiAgICAgIC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwib24tY2FsbC11c2VyLWJveF9fdmlkZW9cIilbMF1cclxuICAgICAgLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X192aWRlby0tY2FtZXJhXCIpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gb25DYWxsVXNlckJveFxyXG59XHJcbmZ1bmN0aW9uIGNoYW5nZU9uQ2FsbFVzZXJCb3hCdG4odXNlckJveCwgcG9zaXRpb24pIHtcclxuICBsZXQgdXNlckJveFBpblVucGluQnRuID0gdXNlckJveC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLXVzZXItYm94X19idG5bZGF0YS1idG4tdHlwZT1cInVzZXItcGluLXVucGluXCJdYFxyXG4gIClcclxuXHJcbiAgaWYgKHVzZXJCb3hQaW5VbnBpbkJ0bikge1xyXG4gICAgaWYgKHBvc2l0aW9uID09PSBcIm1haW4tdmlld1wiKSB7XHJcbiAgICAgIHVzZXJCb3hQaW5VbnBpbkJ0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC11c2VyLWJveF9fYnRuLS1tYWluLXZpZXdcIilcclxuICAgICAgdXNlckJveFBpblVucGluQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID0gXCJ1bnBpbi11c2VyLWJveFwiXHJcbiAgICB9XHJcbiAgICBpZiAocG9zaXRpb24gPT09IFwic2xpZGVyXCIpIHtcclxuICAgICAgdXNlckJveFBpblVucGluQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X19idG4tLXNsaWRlclwiKVxyXG4gICAgICB1c2VyQm94UGluVW5waW5CdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcInBpbi11c2VyLWJveFwiXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIGZldGNoQ2FsbFJvb21NZW1iZXJBbmRDcmVhdGVVc2VyQm94V2l0aFN0cmVhbShcclxuICBwZWVySWQsXHJcbiAgY2FsbFJvb21JZCxcclxuICBzdHJlYW1cclxuKSB7XHJcbiAgZmV0Y2goXCIvY2FsbC1yb29tLW1lbWJlci9kYXRhL21lbWJlclwiLCB7XHJcbiAgICBtZXRob2Q6IFwiUE9TVFwiLCAvLyBvciAnUFVUJ1xyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gICAgfSxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgcGVlcklkOiBwZWVySWQsXHJcbiAgICAgIGNhbGxSb29tSWQ6IGNhbGxSb29tSWRcclxuICAgIH0pXHJcbiAgfSlcclxuICAgIC50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXNwb25zZSlcclxuICAgIH0pXHJcbiAgICAudGhlbihhc3luYyBkYXRhID0+IHtcclxuICAgICAgaWYgKGRhdGEuaXNTdWNjZXNzKSB7XHJcbiAgICAgICAgbGV0IG1haW5WaWV3VXNlckJveENvdW50ID1cclxuICAgICAgICAgIG9uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3hcIlxyXG4gICAgICAgICAgKS5sZW5ndGhcclxuXHJcbiAgICAgICAgLy8gbGV0IHNsaWRlclVzZXJCb3hDb3VudCA9XHJcbiAgICAgICAgLy8gICBvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgICAgLy8gICAgIFwib24tY2FsbC11c2VyLWJveFwiXHJcbiAgICAgICAgLy8gICApLmxlbmd0aFxyXG5cclxuICAgICAgICBsZXQgb25DYWxsVXNlckJveCA9IGNyZWF0ZU9uQ2FsbFVzZXJCb3goZGF0YS5jYWxsUm9vbU1lbWJlcilcclxuICAgICAgICBpZiAobWFpblZpZXdVc2VyQm94Q291bnQgPT09IDApIHtcclxuICAgICAgICAgIGNoYW5nZU9uQ2FsbFVzZXJCb3hCdG4ob25DYWxsVXNlckJveCwgXCJtYWluLXZpZXdcIilcclxuICAgICAgICAgIG9uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lci5pbnNlcnRBZGphY2VudEVsZW1lbnQoXHJcbiAgICAgICAgICAgIFwiYWZ0ZXJiZWdpblwiLFxyXG4gICAgICAgICAgICBvbkNhbGxVc2VyQm94XHJcbiAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgY2hhbmdlSGVpZ2h0QW5kV2lkdGhPZk9uQ2FsbFVzZXJCb3hJbk1haW5WaWV3KClcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY2hhbmdlT25DYWxsVXNlckJveEJ0bihvbkNhbGxVc2VyQm94LCBcInNsaWRlclwiKVxyXG4gICAgICAgICAgb25DYWxsU2xpZGVyVXNlckJveENvbnRhaW5lci5pbnNlcnRBZGphY2VudEVsZW1lbnQoXHJcbiAgICAgICAgICAgIFwiYWZ0ZXJiZWdpblwiLFxyXG4gICAgICAgICAgICBvbkNhbGxVc2VyQm94XHJcbiAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgcmVzZXRIZWlnaHRBbmRXaWR0aE9mT25DYWxsVXNlckJveCgpXHJcbiAgICAgICAgICBjaGFuZ2VIZWlnaHRBbmRXaWR0aE9mT25DYWxsVXNlckJveEluTWFpblZpZXcoKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYWRkU3RyZWFtVG9PbkNhbGxVc2VyQm94KGRhdGEuY2FsbFJvb21NZW1iZXIudXNlci5faWQsIHN0cmVhbSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsZXQgeyBjcmVhdGVNYWluTm90aWZpY2F0aW9uIH0gPSBhd2FpdCBpbXBvcnQoXHJcbiAgICAgICAgICBcIi4uLy4uL2NvbW1vbi9tYWluTm90aWZpY2F0aW9uLmRldlwiXHJcbiAgICAgICAgKVxyXG4gICAgICAgIGNyZWF0ZU1haW5Ob3RpZmljYXRpb24oZGF0YS5lcnJvciwgXCJlcnJvclwiKVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGFzeW5jIGVyciA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgbGV0IHsgY3JlYXRlTWFpbk5vdGlmaWNhdGlvbiB9ID0gYXdhaXQgaW1wb3J0KFxyXG4gICAgICAgIFwiLi4vLi4vY29tbW9uL21haW5Ob3RpZmljYXRpb24uZGV2XCJcclxuICAgICAgKVxyXG4gICAgICBjcmVhdGVNYWluTm90aWZpY2F0aW9uKFxyXG4gICAgICAgIFwiU2VydmVyIGVycm9yIGluIGZldGNoaW5nIHJvb20gbWVtYmVyLHBsZWFzZSByZWZyZXNoIHlvdXIgcGFnZVwiLFxyXG4gICAgICAgIFwiZXJyb3JcIlxyXG4gICAgICApXHJcbiAgICB9KVxyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRTdHJlYW1Ub09uQ2FsbFVzZXJCb3godXNlcklkLCBzdHJlYW0pIHtcclxuICBsZXQgb25DYWxsVXNlckJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICBgLm9uLWNhbGwtdXNlci1ib3hbZGF0YS11c2VyLWlkPVwiJHt1c2VySWR9XCJdYFxyXG4gIClcclxuXHJcbiAgaWYgKG9uQ2FsbFVzZXJCb3gpIHtcclxuICAgIC8vIG9uQ2FsbFVzZXJCb3hWaWRlby5pbm5lckhUTUwgPSBcIlwiXHJcbiAgICBsZXQgdmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidmlkZW9cIilcclxuICAgIGlmICh1c2VySWQudG9TdHJpbmcoKSA9PT0gbG9naW5Vc2VyLl9pZC50b1N0cmluZygpKSB7XHJcbiAgICAgIHZpZGVvLm11dGVkID0gdHJ1ZVxyXG4gICAgfVxyXG4gICAgdmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtXHJcbiAgICB2aWRlby5hZGRFdmVudExpc3RlbmVyKFwibG9hZGVkbWV0YWRhdGFcIiwgKCkgPT4ge1xyXG4gICAgICB2aWRlby5wbGF5KClcclxuICAgIH0pXHJcbiAgICBsZXQgb25DYWxsVXNlckJveFZpZGVvID0gb25DYWxsVXNlckJveC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICBcIm9uLWNhbGwtdXNlci1ib3hfX3ZpZGVvXCJcclxuICAgIClbMF1cclxuXHJcbiAgICBvbkNhbGxVc2VyQm94VmlkZW8uaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYmVmb3JlZW5kXCIsIHZpZGVvKVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlT25DYWxsVXNlckJveCh1c2VySWQpIHtcclxuICBsZXQgb25DYWxsVXNlckJveHMgPSBbXHJcbiAgICAuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAub24tY2FsbC11c2VyLWJveFtkYXRhLXVzZXItaWQ9XCIke3VzZXJJZH1cIl1gKVxyXG4gIF1cclxuICBpZiAob25DYWxsVXNlckJveHMubGVuZ3RoID4gMCkge1xyXG4gICAgb25DYWxsVXNlckJveHMuZm9yRWFjaCh1c2VyQm94ID0+IHtcclxuICAgICAgdXNlckJveC5yZW1vdmUoKVxyXG4gICAgfSlcclxuICAgIGNoYW5nZUhlaWdodEFuZFdpZHRoT2ZPbkNhbGxVc2VyQm94SW5NYWluVmlldygpXHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVPbkNhbGxDYWxsU3RhdHVzKGNhbGxTdGF0dXMpIHtcclxuICBvbkNhbGxDYWxsU3RhdHVzLmlubmVySFRNTCA9IGBcclxuICAgICAgICA8ZGl2IGNsYXNzPSdvbi1jYWxsLWNhbGwtc3RhdHVzX19yb29tLXBpYyAke1xyXG4gICAgICAgICAgY2FsbFJvb20uaGFzT3duUHJvcGVydHkoXCJyb29tUGljXCIpICYmIGNhbGxSb29tLnJvb21QaWMgIT09IFwiXCJcclxuICAgICAgICAgICAgPyBcIm9uLWNhbGwtY2FsbC1zdGF0dXNfX3Jvb20tcGljLS1pbWdcIlxyXG4gICAgICAgICAgICA6IFwib24tY2FsbC1jYWxsLXN0YXR1c19fcm9vbS1waWMtLXN2Z1wiXHJcbiAgICAgICAgfSc+XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAke3N2Z19jYWxsRGVmYXVsdFJvb21QaWNJY29ufVxyXG4gICAgICAgICAgICAgIDxpbWcgc3JjPScke1xyXG4gICAgICAgICAgICAgICAgY2FsbFJvb20uaGFzT3duUHJvcGVydHkoXCJyb29tUGljXCIpICYmIGNhbGxSb29tLnJvb21QaWMgIT09IFwiXCJcclxuICAgICAgICAgICAgICAgICAgPyBjYWxsUm9vbS5yb29tUGljXHJcbiAgICAgICAgICAgICAgICAgIDogXCJcIlxyXG4gICAgICAgICAgICAgIH0nXHJcbiAgICAgICAgICAgICBhbHQ9XCJcIj5cclxuICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgIFxyXG4gICAgICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC1jYWxsLXN0YXR1c19fcm9vbS1zdGF0dXNcIj5cclxuICAgICAgICAgPGRpdiBjbGFzcz1cIm9uLWNhbGwtY2FsbC1zdGF0dXNfX3Jvb20tc3RhdHVzLXRleHRcIiBpZD1cIm9uQ2FsbFJvb21TdGF0dXNUZXh0XCI+XHJcbiAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICA8ZGl2IGNsYXNzPVwib24tY2FsbC1jYWxsLXN0YXR1c19fcm9vbS1zdGF0dXMtZWZmZWN0XCI+XHJcbiAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgPC9kaXY+XHJcbiAgICAgIGBcclxuICBvbkNhbGxDYWxsU3RhdHVzLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICBcIm9uLWNhbGwtY2FsbC1zdGF0dXNfX3Jvb20tc3RhdHVzLWVmZmVjdFwiXHJcbiAgKVswXS5pbm5lckhUTUwgPSBgPHNwYW4+Ljwvc3Bhbj4gPHNwYW4+Ljwvc3Bhbj4gPHNwYW4+Ljwvc3Bhbj5gXHJcbiAgdXBkYXRlT25DYWxsQ2FsbFN0YXR1cyhjYWxsU3RhdHVzKVxyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVPbkNhbGxDYWxsU3RhdHVzKGNhbGxTdGF0dXMpIHtcclxuICBsZXQgb25DYWxsQ2FsbFN0YXR1cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICBcIm9uLWNhbGwtY2FsbC1zdGF0dXNcIlxyXG4gIClbMF1cclxuXHJcbiAgaWYgKG9uQ2FsbENhbGxTdGF0dXMpIHtcclxuICAgIG9uQ2FsbENhbGxTdGF0dXMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgICAgXCJvbi1jYWxsLWNhbGwtc3RhdHVzX19yb29tLXN0YXR1cy10ZXh0XCJcclxuICAgIClbMF0udGV4dENvbnRlbnQgPSBjYWxsU3RhdHVzXHJcbiAgfVxyXG4gIGlmIChvbkNhbGxDYWxsU3RhdHVzLmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtY2FsbC1zdGF0dXMtLWhpZGVcIikpXHJcbiAgICBvbkNhbGxDYWxsU3RhdHVzLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLWNhbGwtc3RhdHVzLS1oaWRlXCIpXHJcbn1cclxuZnVuY3Rpb24gaGlkZU9uQ2FsbENhbGxTdGF0dXMoKSB7XHJcbiAgbGV0IG9uQ2FsbENhbGxTdGF0dXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgXCJvbi1jYWxsLWNhbGwtc3RhdHVzXCJcclxuICApWzBdXHJcblxyXG4gIGlmICghb25DYWxsQ2FsbFN0YXR1cy5jbGFzc0xpc3QuY29udGFpbnMoXCJvbi1jYWxsLWNhbGwtc3RhdHVzLS1oaWRlXCIpKVxyXG4gICAgb25DYWxsQ2FsbFN0YXR1cy5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC1jYWxsLXN0YXR1cy0taGlkZVwiKVxyXG59XHJcblxyXG5mdW5jdGlvbiBjaGFuZ2VIZWlnaHRBbmRXaWR0aE9mT25DYWxsVXNlckJveEluTWFpblZpZXcoXHJcbiAgbWFpblZpZXdXaWR0aCxcclxuICBtYWluVmlld0hlaWdodFxyXG4pIHtcclxuICBsZXQgb25DYWxsVXNlckJveHMgPSBbXHJcbiAgICAuLi5vbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9uLWNhbGwtdXNlci1ib3hcIilcclxuICBdXHJcblxyXG4gIGlmIChtYWluVmlld1dpZHRoID09PSB1bmRlZmluZWQpIG1haW5WaWV3V2lkdGggPSBwYXJzZUZsb2F0KG1haW5WaWV3Q3NzLndpZHRoKVxyXG5cclxuICBpZiAobWFpblZpZXdIZWlnaHQgPT09IHVuZGVmaW5lZClcclxuICAgIG1haW5WaWV3SGVpZ2h0ID0gcGFyc2VGbG9hdChtYWluVmlld0Nzcy5oZWlnaHQpXHJcblxyXG4gIGxldCBub09mVXNlcnMgPSBvbkNhbGxVc2VyQm94cy5sZW5ndGhcclxuXHJcbiAgbGV0IGNvbHVtbiA9IE1hdGguY2VpbChNYXRoLnNxcnQobm9PZlVzZXJzKSlcclxuICBsZXQgcGVyY2VudCA9IDEwMCAvIGNvbHVtbiAtIDFcclxuXHJcbiAgbGV0IGJlc3RIZWlnaHRQZXJjZW50ID1cclxuICAgIChtYWluVmlld1dpZHRoIC8gbWFpblZpZXdIZWlnaHQpICogKDEgLyBiZXN0U2NyZWVuV2lkdGhSYXRpbykgKiBwZXJjZW50XHJcblxyXG4gIGlmIChjb2x1bW4gPD0gMykge1xyXG4gICAgaWYgKG5vT2ZVc2VycyA8PSBjb2x1bW4gKiAoY29sdW1uIC0gMSkpIHtcclxuICAgICAgb25DYWxsVXNlckJveHMuZm9yRWFjaCh1c2VyQm94ID0+IHtcclxuICAgICAgICB1c2VyQm94LnN0eWxlLndpZHRoID0gcGVyY2VudCArIFwiJVwiXHJcbiAgICAgICAgdXNlckJveC5zdHlsZS5oZWlnaHQgPSBiZXN0SGVpZ2h0UGVyY2VudCArIFwiJVwiXHJcbiAgICAgICAgdXNlckJveC5zdHlsZS5tYXhIZWlnaHQgPSAxMDAgKyBcIiVcIlxyXG4gICAgICAgIHVzZXJCb3guc3R5bGUubWF4V2lkdGggPSBwZXJjZW50ICsgXCIlXCJcclxuICAgICAgfSlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG9uQ2FsbFVzZXJCb3hzLmZvckVhY2godXNlckJveCA9PiB7XHJcbiAgICAgICAgdXNlckJveC5zdHlsZS53aWR0aCA9IHBlcmNlbnQgKyBcIiVcIlxyXG4gICAgICAgIHVzZXJCb3guc3R5bGUuaGVpZ2h0ID0gYmVzdEhlaWdodFBlcmNlbnQgKyBcIiVcIlxyXG4gICAgICAgIHVzZXJCb3guc3R5bGUubWF4SGVpZ2h0ID0gMTAwICsgXCIlXCJcclxuICAgICAgICB1c2VyQm94LnN0eWxlLm1heFdpZHRoID0gYmVzdFNjcmVlbldpZHRoIC8gY29sdW1uICsgXCJweFwiXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIG9uQ2FsbFVzZXJCb3hzLmZvckVhY2godXNlckJveCA9PiB7XHJcbiAgICAgIHVzZXJCb3guc3R5bGUud2lkdGggPSBwZXJjZW50ICsgXCIlXCJcclxuICAgICAgdXNlckJveC5zdHlsZS5oZWlnaHQgPSBiZXN0SGVpZ2h0UGVyY2VudCArIFwiJVwiXHJcbiAgICAgIHVzZXJCb3guc3R5bGUubWF4SGVpZ2h0ID0gMTAwICsgXCIlXCJcclxuICAgICAgdXNlckJveC5zdHlsZS5tYXhXaWR0aCA9IGJlc3RTY3JlZW5XaWR0aCAvIGNvbHVtbiArIFwicHhcIlxyXG4gICAgfSlcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlc2V0SGVpZ2h0QW5kV2lkdGhPZk9uQ2FsbFVzZXJCb3goKSB7XHJcbiAgbGV0IG9uQ2FsbFVzZXJCb3hzID0gWy4uLmRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvbi1jYWxsLXVzZXItYm94XCIpXVxyXG5cclxuICBvbkNhbGxVc2VyQm94cy5mb3JFYWNoKHVzZXJCb3ggPT4ge1xyXG4gICAgdXNlckJveC5zdHlsZSA9IFwiXCJcclxuICB9KVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkNhbGxDYW1lcmFPZmYoKSB7XHJcbiAgbGV0IG9uQ2FsbEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICBgLm9uLWNhbGwtYnRuW2RhdGEtYnRuLXR5cGU9XCJjYWxsLXZpZGVvXCJdYFxyXG4gIClcclxuICBpZiAob25DYWxsQnRuKSB7XHJcbiAgICBvbkNhbGxCdG4uY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtYnRuLS1zZWxlY3RlZFwiKVxyXG4gICAgb25DYWxsQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgb25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID0gXCJjYWxsLXZpZGVvLW9uXCJcclxuICB9XHJcbiAgaWYgKGlzQ2FtZXJhT24gPT09IHRydWUpIHtcclxuICAgIGlzQ2FtZXJhT24gPSBmYWxzZVxyXG4gICAgY2hhbmdlQ2FtZXJhU3RyZWFtKGZhbHNlLCBsb2dpblVzZXIuX2lkLnRvU3RyaW5nKCkpXHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIG9uQ2FsbENhbWVyYU9uKCkge1xyXG4gIGxldCBvbkNhbGxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLWJ0bltkYXRhLWJ0bi10eXBlPVwiY2FsbC12aWRlb1wiXWBcclxuICApXHJcbiAgaWYgKG9uQ2FsbEJ0bikge1xyXG4gICAgb25DYWxsQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgb25DYWxsQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLWJ0bi0tc2VsZWN0ZWRcIilcclxuICAgIG9uQ2FsbEJ0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9IFwiY2FsbC12aWRlby1vZmZcIlxyXG4gIH1cclxuICBpZiAoaXNDYW1lcmFPbiA9PT0gZmFsc2UpIHtcclxuICAgIGlzQ2FtZXJhT24gPSB0cnVlXHJcbiAgICBjaGFuZ2VDYW1lcmFTdHJlYW0odHJ1ZSwgbG9naW5Vc2VyLl9pZC50b1N0cmluZygpKVxyXG4gIH1cclxufVxyXG5hc3luYyBmdW5jdGlvbiBjaGFuZ2VDYW1lcmFTdHJlYW0oaXNFbmFibGVkLCB1c2VySWQpIHtcclxuICBpZiAobG9naW5Vc2VyLl9pZC50b1N0cmluZygpID09PSB1c2VySWQudG9TdHJpbmcoKSkge1xyXG4gICAgaWYgKGlzU2NyZWVuU2hhcmVPbiA9PT0gZmFsc2UpIHtcclxuICAgICAgaWYgKGlzRW5hYmxlZCA9PT0gdHJ1ZSkge1xyXG4gICAgICAgIGxldCB7IGdldENhbWVyYVZpZGVvVHJhY2sgfSA9IGF3YWl0IGltcG9ydChcIi4uL2NhbGwuZGV2XCIpXHJcblxyXG4gICAgICAgIGxldCBjYWxsVmlkZW9UcmFjayA9IGF3YWl0IGdldENhbWVyYVZpZGVvVHJhY2soKVxyXG4gICAgICAgIGxldCB0cmFja0tpbmQgPSBcInZpZGVvXCJcclxuICAgICAgICBpZiAoY2FsbFZpZGVvVHJhY2spIHtcclxuICAgICAgICAgIGlzQ2FtZXJhT24gPSB0cnVlXHJcbiAgICAgICAgICB0cmFja0tpbmQgPSBjYWxsVmlkZW9UcmFjay5raW5kXHJcblxyXG4gICAgICAgICAgbGV0IHZpZGVvVHJhY2tzID0gbXlNZWRpYVN0cmVhbS5nZXRWaWRlb1RyYWNrcygpXHJcblxyXG4gICAgICAgICAgdmlkZW9UcmFja3MuZm9yRWFjaCh0cmFjayA9PiB7XHJcbiAgICAgICAgICAgIHRyYWNrLnN0b3AoKVxyXG4gICAgICAgICAgICBteU1lZGlhU3RyZWFtLnJlbW92ZVRyYWNrKHRyYWNrKVxyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIG15TWVkaWFTdHJlYW0uYWRkVHJhY2soY2FsbFZpZGVvVHJhY2spXHJcblxyXG4gICAgICAgICAgbGV0IHBlZXJJZFxyXG4gICAgICAgICAgZm9yIChwZWVySWQgaW4gYWxsTWVkaWFDb25uZWN0aW9ucykge1xyXG4gICAgICAgICAgICBsZXQgb3RoZXJVc2VyQ29ubmVjdGlvbiA9IGFsbE1lZGlhQ29ubmVjdGlvbnNbcGVlcklkXS5wZWVyQ29ubmVjdGlvblxyXG5cclxuICAgICAgICAgICAgb3RoZXJVc2VyQ29ubmVjdGlvbi5nZXRTZW5kZXJzKCkuZm9yRWFjaChmdW5jdGlvbiAoc2VuZGVyKSB7XHJcbiAgICAgICAgICAgICAgaWYgKHNlbmRlci50cmFjay5raW5kID09PSB0cmFja0tpbmQpIHtcclxuICAgICAgICAgICAgICAgIHNlbmRlci5yZXBsYWNlVHJhY2soY2FsbFZpZGVvVHJhY2spXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpc0NhbWVyYU9uID0gZmFsc2VcclxuXHJcbiAgICAgICAgbGV0IHZpZGVvVHJhY2tzID0gbXlNZWRpYVN0cmVhbS5nZXRWaWRlb1RyYWNrcygpXHJcbiAgICAgICAgdmlkZW9UcmFja3MuZm9yRWFjaCh0cmFjayA9PiB7XHJcbiAgICAgICAgICB0cmFjay5zdG9wKClcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBteU1lZGlhU3RyZWFtLmdldFZpZGVvVHJhY2tzKClbMF0uaXNFbmFibGVkID0gaXNFbmFibGVkXHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGV2ZW50RGF0YSA9IHtcclxuICAgICAgaXNFbmFibGVkOiBpc0VuYWJsZWQsXHJcbiAgICAgIGNhbGxSb29tSWQ6IGNhbGxSb29tLl9pZCxcclxuICAgICAgdXNlcklkOiBsb2dpblVzZXIuX2lkXHJcbiAgICB9XHJcbiAgICBzb2NrZXQuZW1pdChcImNhbGw6dG9nZ2xlLWNhbWVyYS1zdHJlYW1cIiwgZXZlbnREYXRhKVxyXG4gIH1cclxuXHJcbiAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLXVzZXItYm94W2RhdGEtdXNlci1pZD1cIiR7dXNlcklkLnRvU3RyaW5nKCl9XCJdYFxyXG4gIClcclxuXHJcbiAgaWYgKG9uQ2FsbFVzZXJCb3gpIHtcclxuICAgIGxldCBvbkNhbGxVc2VyQm94VmlkZW8gPSBvbkNhbGxVc2VyQm94LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgIFwib24tY2FsbC11c2VyLWJveF9fdmlkZW9cIlxyXG4gICAgKVswXVxyXG4gICAgaWYgKGlzRW5hYmxlZCkge1xyXG4gICAgICBpZiAob25DYWxsVXNlckJveC5jbGFzc0xpc3QuY29udGFpbnMoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIikpXHJcbiAgICAgICAgb25DYWxsVXNlckJveC5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC11c2VyLWJveC0tdmlkZW8tb2ZmXCIpXHJcblxyXG4gICAgICBpZiAoXHJcbiAgICAgICAgIW9uQ2FsbFVzZXJCb3hWaWRlby5jbGFzc0xpc3QuY29udGFpbnMoXHJcbiAgICAgICAgICBcIm9uLWNhbGwtdXNlci1ib3hfX3ZpZGVvLS1jYW1lcmFcIlxyXG4gICAgICAgIClcclxuICAgICAgKVxyXG4gICAgICAgIG9uQ2FsbFVzZXJCb3hWaWRlby5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKCFvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKSlcclxuICAgICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuXHJcbiAgICAgIGlmIChcclxuICAgICAgICBvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmNvbnRhaW5zKFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiKVxyXG4gICAgICApXHJcbiAgICAgICAgb25DYWxsVXNlckJveFZpZGVvLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLXVzZXItYm94X192aWRlby0tY2FtZXJhXCIpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkNhbGxBdWRpb09mZigpIHtcclxuICBsZXQgb25DYWxsQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgIGAub24tY2FsbC1idG5bZGF0YS1idG4tdHlwZT1cImNhbGwtYXVkaW9cIl1gXHJcbiAgKVxyXG4gIGlmIChvbkNhbGxCdG4pIHtcclxuICAgIG9uQ2FsbEJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC1idG4tLXVuc2VsZWN0ZWRcIilcclxuICAgIG9uQ2FsbEJ0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC1idG4tLXNlbGVjdGVkXCIpXHJcbiAgICBvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcImNhbGwtYXVkaW8tb25cIlxyXG4gIH1cclxuXHJcbiAgaWYgKGlzQXVkaW9PbiA9PT0gdHJ1ZSkge1xyXG4gICAgaXNBdWRpb09uID0gZmFsc2VcclxuICAgIGNoYW5nZUF1ZGlvU3RyZWFtKGZhbHNlLCBsb2dpblVzZXIuX2lkLnRvU3RyaW5nKCkpXHJcbiAgfVxyXG59XHJcbmZ1bmN0aW9uIG9uQ2FsbEF1ZGlvT24oKSB7XHJcbiAgbGV0IG9uQ2FsbEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICBgLm9uLWNhbGwtYnRuW2RhdGEtYnRuLXR5cGU9XCJjYWxsLWF1ZGlvXCJdYFxyXG4gIClcclxuICBpZiAob25DYWxsQnRuKSB7XHJcbiAgICBvbkNhbGxCdG4uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtYnRuLS1zZWxlY3RlZFwiKVxyXG4gICAgb25DYWxsQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgb25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID0gXCJjYWxsLWF1ZGlvLW9mZlwiXHJcbiAgfVxyXG4gIGlmIChpc0F1ZGlvT24gPT09IGZhbHNlKSB7XHJcbiAgICBpc0F1ZGlvT24gPSB0cnVlXHJcbiAgICBjaGFuZ2VBdWRpb1N0cmVhbSh0cnVlLCBsb2dpblVzZXIuX2lkLnRvU3RyaW5nKCkpXHJcbiAgfVxyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGNoYW5nZUF1ZGlvU3RyZWFtKGlzRW5hYmxlZCwgdXNlcklkKSB7XHJcbiAgaWYgKGxvZ2luVXNlci5faWQudG9TdHJpbmcoKSA9PT0gdXNlcklkLnRvU3RyaW5nKCkpIHtcclxuICAgIGlmIChpc0VuYWJsZWQgPT09IHRydWUpIHtcclxuICAgICAgbGV0IHsgZ2V0Q2FsbEF1ZGlvVHJhY2sgfSA9IGF3YWl0IGltcG9ydChcIi4uL2NhbGwuZGV2XCIpXHJcbiAgICAgIGxldCBjYWxsQXVkaW9UcmFjayA9IGF3YWl0IGdldENhbGxBdWRpb1RyYWNrKClcclxuICAgICAgbGV0IHRyYWNrS2luZCA9IFwiYXVkaW9cIlxyXG4gICAgICBpZiAoY2FsbEF1ZGlvVHJhY2spIHtcclxuICAgICAgICB0cmFja0tpbmQgPSBjYWxsQXVkaW9UcmFjay5raW5kXHJcblxyXG4gICAgICAgIGxldCBhdWRpb1RyYWNrcyA9IG15TWVkaWFTdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVxyXG5cclxuICAgICAgICBhdWRpb1RyYWNrcy5mb3JFYWNoKHRyYWNrID0+IHtcclxuICAgICAgICAgIHRyYWNrLnN0b3AoKVxyXG4gICAgICAgICAgbXlNZWRpYVN0cmVhbS5yZW1vdmVUcmFjayh0cmFjaylcclxuICAgICAgICB9KVxyXG4gICAgICAgIG15TWVkaWFTdHJlYW0uYWRkVHJhY2soY2FsbEF1ZGlvVHJhY2spXHJcblxyXG4gICAgICAgIGxldCBwZWVySWRcclxuICAgICAgICBmb3IgKHBlZXJJZCBpbiBhbGxNZWRpYUNvbm5lY3Rpb25zKSB7XHJcbiAgICAgICAgICBsZXQgb3RoZXJVc2VyQ29ubmVjdGlvbiA9IGFsbE1lZGlhQ29ubmVjdGlvbnNbcGVlcklkXS5wZWVyQ29ubmVjdGlvblxyXG5cclxuICAgICAgICAgIG90aGVyVXNlckNvbm5lY3Rpb24uZ2V0U2VuZGVycygpLmZvckVhY2goZnVuY3Rpb24gKHNlbmRlcikge1xyXG4gICAgICAgICAgICBpZiAoc2VuZGVyLnRyYWNrLmtpbmQgPT09IHRyYWNrS2luZCkge1xyXG4gICAgICAgICAgICAgIHNlbmRlci5yZXBsYWNlVHJhY2soY2FsbEF1ZGlvVHJhY2spXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsZXQgYXVkaW9UcmFja3MgPSBteU1lZGlhU3RyZWFtLmdldEF1ZGlvVHJhY2tzKClcclxuICAgICAgYXVkaW9UcmFja3MuZm9yRWFjaCh0cmFjayA9PiB7XHJcbiAgICAgICAgdHJhY2suc3RvcCgpXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgICBsZXQgZXZlbnREYXRhID0ge1xyXG4gICAgICBpc0VuYWJsZWQ6IGlzRW5hYmxlZCxcclxuICAgICAgY2FsbFJvb21JZDogY2FsbFJvb20uX2lkLFxyXG4gICAgICB1c2VySWQ6IGxvZ2luVXNlci5faWRcclxuICAgIH1cclxuICAgIHNvY2tldC5lbWl0KFwiY2FsbDp0b2dnbGUtYXVkaW8tc3RyZWFtXCIsIGV2ZW50RGF0YSlcclxuICB9XHJcbiAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLXVzZXItYm94W2RhdGEtdXNlci1pZD1cIiR7dXNlcklkLnRvU3RyaW5nKCl9XCJdYFxyXG4gIClcclxuICBpZiAob25DYWxsVXNlckJveCkge1xyXG4gICAgaWYgKGlzRW5hYmxlZCkge1xyXG4gICAgICBsZXQgb25DYWxsVXNlckJveEF1ZGlvID0gb25DYWxsVXNlckJveC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICAgIFwib24tY2FsbC11c2VyLWJveF9fYXVkaW9cIlxyXG4gICAgICApWzBdXHJcblxyXG4gICAgICB3aGlsZSAoXHJcbiAgICAgICAgb25DYWxsVXNlckJveEF1ZGlvLmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3hfX2F1ZGlvLS1vZmZcIilcclxuICAgICAgKSB7XHJcbiAgICAgICAgb25DYWxsVXNlckJveEF1ZGlvLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLXVzZXItYm94X19hdWRpby0tb2ZmXCIpXHJcbiAgICAgIH1cclxuICAgICAgb25DYWxsVXNlckJveEF1ZGlvLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X19hdWRpby0tb25cIilcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCBvbkNhbGxVc2VyQm94QXVkaW8gPSBvbkNhbGxVc2VyQm94LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94X19hdWRpb1wiXHJcbiAgICAgIClbMF1cclxuXHJcbiAgICAgIHdoaWxlIChcclxuICAgICAgICBvbkNhbGxVc2VyQm94QXVkaW8uY2xhc3NMaXN0LmNvbnRhaW5zKFwib24tY2FsbC11c2VyLWJveF9fYXVkaW8tLW9uXCIpXHJcbiAgICAgICkge1xyXG4gICAgICAgIG9uQ2FsbFVzZXJCb3hBdWRpby5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC11c2VyLWJveF9fYXVkaW8tLW9uXCIpXHJcbiAgICAgIH1cclxuICAgICAgb25DYWxsVXNlckJveEF1ZGlvLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X19hdWRpby0tb2ZmXCIpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkNhbGxTd2l0Y2hDYW1lcmFUb1NjcmVlblNoYXJlKCkge1xyXG4gIGxldCBvbkNhbGxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLWJ0bltkYXRhLWJ0bi10eXBlPVwiY2FsbC1zaGFyZS1zY3JlZW5cIl1gXHJcbiAgKVxyXG4gIGlmIChvbkNhbGxCdG4pIHtcclxuICAgIG9uQ2FsbEJ0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC1idG4tLXNlbGVjdGVkXCIpXHJcbiAgICBvbkNhbGxCdG4uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtYnRuLS11bnNlbGVjdGVkXCIpXHJcbiAgICBvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcImNhbGwtc2hhcmUtc2NyZWVuLW9mZlwiXHJcbiAgfVxyXG4gIGlmIChpc1NjcmVlblNoYXJlT24gPT09IGZhbHNlKSB7XHJcbiAgICBpc1NjcmVlblNoYXJlT24gPSB0cnVlXHJcbiAgICBzd2l0Y2hDYW1lcmFUb1NjcmVlblNoYXJlU3RyZWFtKGxvZ2luVXNlci5faWQudG9TdHJpbmcoKSlcclxuICB9XHJcbiAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLXVzZXItYm94W2RhdGEtdXNlci1pZD1cIiR7bG9naW5Vc2VyLl9pZC50b1N0cmluZygpfVwiXWBcclxuICApXHJcbiAgaWYgKG9uQ2FsbFVzZXJCb3gpIHtcclxuICAgIGlmIChvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKSkge1xyXG4gICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuICAgIH1cclxuICAgIGxldCBvbkNhbGxVc2VyQm94VmlkZW8gPSBvbkNhbGxVc2VyQm94LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXHJcbiAgICAgIFwib24tY2FsbC11c2VyLWJveF9fdmlkZW9cIlxyXG4gICAgKVswXVxyXG4gICAgaWYgKFxyXG4gICAgICBvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmNvbnRhaW5zKFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiKVxyXG4gICAgKVxyXG4gICAgICBvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtdXNlci1ib3hfX3ZpZGVvLS1jYW1lcmFcIilcclxuICB9XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gc3dpdGNoQ2FtZXJhVG9TY3JlZW5TaGFyZVN0cmVhbSh1c2VySWQpIHtcclxuICBpZiAobG9naW5Vc2VyLl9pZC50b1N0cmluZygpID09PSB1c2VySWQudG9TdHJpbmcoKSkge1xyXG4gICAgbGV0IHsgZ2V0U2NyZWVuU2hhcmVWaWRlb1RyYWNrIH0gPSBhd2FpdCBpbXBvcnQoXCIuLi9jYWxsLmRldlwiKVxyXG4gICAgbGV0IHNjcmVlblNoYXJlVmlkZW9UcmFjayA9IGF3YWl0IGdldFNjcmVlblNoYXJlVmlkZW9UcmFjaygpXHJcbiAgICBsZXQgdHJhY2tLaW5kID0gXCJ2aWRlb1wiXHJcbiAgICBpZiAoc2NyZWVuU2hhcmVWaWRlb1RyYWNrKSB7XHJcbiAgICAgIGlzU2NyZWVuU2hhcmVPbiA9IHRydWVcclxuICAgICAgdHJhY2tLaW5kID0gc2NyZWVuU2hhcmVWaWRlb1RyYWNrLmtpbmRcclxuXHJcbiAgICAgIGxldCB2aWRlb1RyYWNrcyA9IG15TWVkaWFTdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVxyXG4gICAgICB2aWRlb1RyYWNrcy5mb3JFYWNoKHRyYWNrID0+IHtcclxuICAgICAgICB0cmFjay5zdG9wKClcclxuICAgICAgICBteU1lZGlhU3RyZWFtLnJlbW92ZVRyYWNrKHRyYWNrKVxyXG4gICAgICB9KVxyXG5cclxuICAgICAgbXlNZWRpYVN0cmVhbS5hZGRUcmFjayhzY3JlZW5TaGFyZVZpZGVvVHJhY2spXHJcbiAgICAgIGxldCBwZWVySWRcclxuICAgICAgZm9yIChwZWVySWQgaW4gYWxsTWVkaWFDb25uZWN0aW9ucykge1xyXG4gICAgICAgIGxldCBvdGhlclVzZXJDb25uZWN0aW9uID0gYWxsTWVkaWFDb25uZWN0aW9uc1twZWVySWRdLnBlZXJDb25uZWN0aW9uXHJcblxyXG4gICAgICAgIG90aGVyVXNlckNvbm5lY3Rpb24uZ2V0U2VuZGVycygpLmZvckVhY2goZnVuY3Rpb24gKHNlbmRlcikge1xyXG4gICAgICAgICAgaWYgKHNlbmRlci50cmFjay5raW5kID09PSB0cmFja0tpbmQpIHtcclxuICAgICAgICAgICAgc2VuZGVyLnJlcGxhY2VUcmFjayhzY3JlZW5TaGFyZVZpZGVvVHJhY2spXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IGV2ZW50RGF0YSA9IHtcclxuICAgICAgICBpc0VuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgaXNDYW1lcmFPbjogaXNDYW1lcmFPbixcclxuICAgICAgICBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQsXHJcbiAgICAgICAgdXNlcklkOiBsb2dpblVzZXIuX2lkXHJcbiAgICAgIH1cclxuICAgICAgc29ja2V0LmVtaXQoXCJjYWxsOnRvZ2dsZS1zY3JlZW4tc2hhcmUtc3RyZWFtXCIsIGV2ZW50RGF0YSlcclxuXHJcbiAgICAgIHNjcmVlblNoYXJlVmlkZW9UcmFjay5vbmVuZGVkID0gKCkgPT4ge1xyXG4gICAgICAgIGlzU2NyZWVuU2hhcmVPbiA9IGZhbHNlXHJcbiAgICAgICAgbGV0IGNhbWVyYUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgICBgLm9uLWNhbGwtYnRuW2RhdGEtYnRuLXR5cGU9XCJjYWxsLXZpZGVvXCJdYFxyXG4gICAgICAgIClcclxuICAgICAgICBpZiAoY2FtZXJhQnRuKSBjYW1lcmFCdG4uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtYnRuLS1kaXNhYmxlXCIpXHJcblxyXG4gICAgICAgIGxldCBvbkNhbGxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgYC5vbi1jYWxsLWJ0bltkYXRhLWJ0bi10eXBlPVwiY2FsbC1zaGFyZS1zY3JlZW5cIl1gXHJcbiAgICAgICAgKVxyXG4gICAgICAgIGlmIChvbkNhbGxCdG4pIHtcclxuICAgICAgICAgIGlmIChvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPT09IFwiY2FsbC1zaGFyZS1zY3JlZW4tb2ZmXCIpIHtcclxuICAgICAgICAgICAgb25DYWxsQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgICAgICAgICBvbkNhbGxCdG4uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtYnRuLS1zZWxlY3RlZFwiKVxyXG4gICAgICAgICAgICBvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcImNhbGwtc2hhcmUtc2NyZWVuLW9uXCJcclxuICAgICAgICAgICAgaWYgKGlzQ2FtZXJhT24pIHtcclxuICAgICAgICAgICAgICBjaGFuZ2VDYW1lcmFTdHJlYW0odHJ1ZSwgbG9naW5Vc2VyLl9pZC50b1N0cmluZygpKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGNoYW5nZUNhbWVyYVN0cmVhbShmYWxzZSwgbG9naW5Vc2VyLl9pZC50b1N0cmluZygpKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgZXZlbnREYXRhID0ge1xyXG4gICAgICAgICAgaXNFbmFibGVkOiBmYWxzZSxcclxuICAgICAgICAgIGlzQ2FtZXJhT246IGlzQ2FtZXJhT24sXHJcbiAgICAgICAgICBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQsXHJcbiAgICAgICAgICB1c2VySWQ6IGxvZ2luVXNlci5faWRcclxuICAgICAgICB9XHJcbiAgICAgICAgc29ja2V0LmVtaXQoXCJjYWxsOnRvZ2dsZS1zY3JlZW4tc2hhcmUtc3RyZWFtXCIsIGV2ZW50RGF0YSlcclxuXHJcbiAgICAgICAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgICAgYC5vbi1jYWxsLXVzZXItYm94W2RhdGEtdXNlci1pZD1cIiR7bG9naW5Vc2VyLl9pZC50b1N0cmluZygpfVwiXWBcclxuICAgICAgICApXHJcbiAgICAgICAgaWYgKG9uQ2FsbFVzZXJCb3gpIHtcclxuICAgICAgICAgIGlmIChpc0NhbWVyYU9uKSB7XHJcbiAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICFvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgbGV0IG9uQ2FsbFVzZXJCb3hWaWRlbyA9IG9uQ2FsbFVzZXJCb3guZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94X192aWRlb1wiXHJcbiAgICAgICAgICApWzBdXHJcbiAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICFvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmNvbnRhaW5zKFxyXG4gICAgICAgICAgICAgIFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiXHJcbiAgICAgICAgICAgIClcclxuICAgICAgICAgIClcclxuICAgICAgICAgICAgb25DYWxsVXNlckJveFZpZGVvLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X192aWRlby0tY2FtZXJhXCIpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHNjcmVlblNoYXJlVmlkZW9UcmFjay5vbm11dGUgPSAoKSA9PiB7fVxyXG4gICAgICBzY3JlZW5TaGFyZVZpZGVvVHJhY2sub251bm11dGUgPSAoKSA9PiB7fVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaXNTY3JlZW5TaGFyZU9uID0gZmFsc2VcclxuICAgICAgbGV0IGNhbWVyYUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgICAgYC5vbi1jYWxsLWJ0bltkYXRhLWJ0bi10eXBlPVwiY2FsbC12aWRlb1wiXWBcclxuICAgICAgKVxyXG4gICAgICBpZiAoY2FtZXJhQnRuKSBjYW1lcmFCdG4uY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtYnRuLS1kaXNhYmxlXCIpXHJcblxyXG4gICAgICBsZXQgb25DYWxsQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgICBgLm9uLWNhbGwtYnRuW2RhdGEtYnRuLXR5cGU9XCJjYWxsLXNoYXJlLXNjcmVlblwiXWBcclxuICAgICAgKVxyXG4gICAgICBpZiAob25DYWxsQnRuKSB7XHJcbiAgICAgICAgb25DYWxsQnRuLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLWJ0bi0tdW5zZWxlY3RlZFwiKVxyXG4gICAgICAgIG9uQ2FsbEJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC1idG4tLXNlbGVjdGVkXCIpXHJcbiAgICAgICAgb25DYWxsQnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID0gXCJjYWxsLXNoYXJlLXNjcmVlbi1vblwiXHJcbiAgICAgIH1cclxuICAgICAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICAgIGAub24tY2FsbC11c2VyLWJveFtkYXRhLXVzZXItaWQ9XCIke2xvZ2luVXNlci5faWQudG9TdHJpbmcoKX1cIl1gXHJcbiAgICAgIClcclxuICAgICAgaWYgKG9uQ2FsbFVzZXJCb3gpIHtcclxuICAgICAgICBpZiAoaXNDYW1lcmFPbikge1xyXG4gICAgICAgICAgaWYgKG9uQ2FsbFVzZXJCb3guY2xhc3NMaXN0LmNvbnRhaW5zKFwib24tY2FsbC11c2VyLWJveC0tdmlkZW8tb2ZmXCIpKSB7XHJcbiAgICAgICAgICAgIG9uQ2FsbFVzZXJCb3guY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICFvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIG9uQ2FsbFVzZXJCb3guY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBsZXQgb25DYWxsVXNlckJveFZpZGVvID0gb25DYWxsVXNlckJveC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFxyXG4gICAgICAgIFwib24tY2FsbC11c2VyLWJveF9fdmlkZW9cIlxyXG4gICAgICApWzBdXHJcbiAgICAgIGlmIChcclxuICAgICAgICAhb25DYWxsVXNlckJveFZpZGVvLmNsYXNzTGlzdC5jb250YWlucyhcclxuICAgICAgICAgIFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiXHJcbiAgICAgICAgKVxyXG4gICAgICApXHJcbiAgICAgICAgb25DYWxsVXNlckJveFZpZGVvLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94X192aWRlby0tY2FtZXJhXCIpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkNhbGxTd2l0Y2hTY3JlZW5TaGFyZVRvQ2FtZXJhKCkge1xyXG4gIGxldCBvbkNhbGxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLWJ0bltkYXRhLWJ0bi10eXBlPVwiY2FsbC1zaGFyZS1zY3JlZW5cIl1gXHJcbiAgKVxyXG4gIGlmIChvbkNhbGxCdG4pIHtcclxuICAgIG9uQ2FsbEJ0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC1idG4tLXVuc2VsZWN0ZWRcIilcclxuICAgIG9uQ2FsbEJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC1idG4tLXNlbGVjdGVkXCIpXHJcbiAgICBvbkNhbGxCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcImNhbGwtc2hhcmUtc2NyZWVuLW9uXCJcclxuICB9XHJcbiAgaWYgKGlzU2NyZWVuU2hhcmVPbiA9PT0gdHJ1ZSkge1xyXG4gICAgaXNTY3JlZW5TaGFyZU9uID0gZmFsc2VcclxuICAgIHN3aXRjaFNjcmVlblNoYXJlVG9DYW1lcmFTdHJlYW0obG9naW5Vc2VyLl9pZC50b1N0cmluZygpKVxyXG4gIH1cclxuICBsZXQgb25DYWxsVXNlckJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICBgLm9uLWNhbGwtdXNlci1ib3hbZGF0YS11c2VyLWlkPVwiJHtsb2dpblVzZXIuX2lkLnRvU3RyaW5nKCl9XCJdYFxyXG4gIClcclxuICBpZiAob25DYWxsVXNlckJveCkge1xyXG4gICAgaWYgKGlzQ2FtZXJhT24pIHtcclxuICAgICAgaWYgKG9uQ2FsbFVzZXJCb3guY2xhc3NMaXN0LmNvbnRhaW5zKFwib24tY2FsbC11c2VyLWJveC0tdmlkZW8tb2ZmXCIpKSB7XHJcbiAgICAgICAgb25DYWxsVXNlckJveC5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC11c2VyLWJveC0tdmlkZW8tb2ZmXCIpXHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICghb25DYWxsVXNlckJveC5jbGFzc0xpc3QuY29udGFpbnMoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIikpIHtcclxuICAgICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGV0IG9uQ2FsbFVzZXJCb3hWaWRlbyA9IG9uQ2FsbFVzZXJCb3guZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgICAgXCJvbi1jYWxsLXVzZXItYm94X192aWRlb1wiXHJcbiAgICApWzBdXHJcbiAgICBpZiAoXHJcbiAgICAgICFvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmNvbnRhaW5zKFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiKVxyXG4gICAgKVxyXG4gICAgICBvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtdXNlci1ib3hfX3ZpZGVvLS1jYW1lcmFcIilcclxuICB9XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gc3dpdGNoU2NyZWVuU2hhcmVUb0NhbWVyYVN0cmVhbSh1c2VySWQpIHtcclxuICBpZiAobG9naW5Vc2VyLl9pZC50b1N0cmluZygpID09PSB1c2VySWQudG9TdHJpbmcoKSkge1xyXG4gICAgaXNTY3JlZW5TaGFyZU9uID0gZmFsc2VcclxuICAgIGlmIChpc0NhbWVyYU9uKSB7XHJcbiAgICAgIGNoYW5nZUNhbWVyYVN0cmVhbSh0cnVlLCBsb2dpblVzZXIuX2lkLnRvU3RyaW5nKCkpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjaGFuZ2VDYW1lcmFTdHJlYW0oZmFsc2UsIGxvZ2luVXNlci5faWQudG9TdHJpbmcoKSlcclxuICAgIH1cclxuXHJcbiAgICBsZXQgZXZlbnREYXRhID0ge1xyXG4gICAgICBpc0VuYWJsZWQ6IGZhbHNlLFxyXG4gICAgICBpc0NhbWVyYU9uOiBpc0NhbWVyYU9uLFxyXG4gICAgICBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQsXHJcbiAgICAgIHVzZXJJZDogbG9naW5Vc2VyLl9pZFxyXG4gICAgfVxyXG4gICAgc29ja2V0LmVtaXQoXCJjYWxsOnRvZ2dsZS1zY3JlZW4tc2hhcmUtc3RyZWFtXCIsIGV2ZW50RGF0YSlcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNob3dPbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIoKSB7XHJcbiAgaWYgKFxyXG4gICAgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyLmNsYXNzTGlzdC5jb250YWlucyhcclxuICAgICAgXCJvbi1jYWxsLW1haW4tdmlldy11c2VyLWJveC1jb250YWluZXItLWhpZGVcIlxyXG4gICAgKVxyXG4gICkge1xyXG4gICAgbGV0IG1haW5WaWV3VXNlckJveHMgPVxyXG4gICAgICBvbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9uLWNhbGwtdXNlci1ib3hcIilcclxuXHJcbiAgICBsZXQgc2xpZGVyVXNlckJveHMgPVxyXG4gICAgICBvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvbi1jYWxsLXVzZXItYm94XCIpXHJcblxyXG4gICAgaWYgKG1haW5WaWV3VXNlckJveHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIGlmIChzbGlkZXJVc2VyQm94cy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyLmFwcGVuZENoaWxkKHNsaWRlclVzZXJCb3hzWzBdKVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoXHJcbiAgICAgIFwib24tY2FsbC1tYWluLXZpZXctdXNlci1ib3gtY29udGFpbmVyLS1oaWRlXCJcclxuICAgIClcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNlbmRSZXF1ZXN0VG9FbmRDYWxsKCkge1xyXG4gIGxldCBkYXRhID0geyBjYWxsUm9vbUlkOiBjYWxsUm9vbS5faWQgfVxyXG4gIGZldGNoKFwiL2NhbGwvbGVmdC1jYWxsLXJvb21cIiwge1xyXG4gICAgbWV0aG9kOiBcIlBPU1RcIiwgLy8gb3IgJ1BVVCdcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcclxuICAgIH0sXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxyXG4gIH0pXHJcbiAgICAudGhlbihyZXNwb25zZSA9PiB7XHJcbiAgICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKClcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzcG9uc2UpXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oYXN5bmMgZGF0YSA9PiB7XHJcbiAgICAgIGlmIChkYXRhLmlzU3VjY2Vzcykge1xyXG4gICAgICAgIG9uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiXHJcbiAgICAgICAgb25DYWxsU2xpZGVyVXNlckJveENvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiXHJcblxyXG4gICAgICAgIGxldCB2aWRlb1RyYWNrcyA9IG15TWVkaWFTdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVxyXG4gICAgICAgIHZpZGVvVHJhY2tzLmZvckVhY2godHJhY2sgPT4gdHJhY2suc3RvcCgpKVxyXG5cclxuICAgICAgICBsZXQgYXVkaW9UcmFjayA9IG15TWVkaWFTdHJlYW0uZ2V0QXVkaW9UcmFja3MoKVxyXG4gICAgICAgIGF1ZGlvVHJhY2suZm9yRWFjaCh0cmFjayA9PiB0cmFjay5zdG9wKCkpXHJcblxyXG4gICAgICAgIGxldCB7IGNyZWF0ZUFmdGVyQ2FsbFNlY3Rpb24gfSA9IGF3YWl0IGltcG9ydChcIi4vYWZ0ZXJDYWxsU2VjdGlvbi5kZXZcIilcclxuICAgICAgICBjcmVhdGVBZnRlckNhbGxTZWN0aW9uKGNhbGxSb29tLCBkYXRhLmlzQ2FsbEVuZGVkKVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxldCB7IGNyZWF0ZU1haW5Ob3RpZmljYXRpb24gfSA9IGF3YWl0IGltcG9ydChcclxuICAgICAgICAgIFwiLi4vLi4vY29tbW9uL21haW5Ob3RpZmljYXRpb24uZGV2XCJcclxuICAgICAgICApXHJcbiAgICAgICAgY3JlYXRlTWFpbk5vdGlmaWNhdGlvbihkYXRhLmVycm9yLCBcImVycm9yXCIpXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAuY2F0Y2goYXN5bmMgZXJyID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICBsZXQgeyBjcmVhdGVNYWluTm90aWZpY2F0aW9uIH0gPSBhd2FpdCBpbXBvcnQoXHJcbiAgICAgICAgXCIuLi8uLi9jb21tb24vbWFpbk5vdGlmaWNhdGlvbi5kZXZcIlxyXG4gICAgICApXHJcbiAgICAgIGNyZWF0ZU1haW5Ob3RpZmljYXRpb24oXCJTZXJ2ZXIgZXJyb3IsIFBsZWFzZSB0cnkgYWdhaW5cIiwgXCJlcnJvclwiKVxyXG4gICAgfSlcclxufVxyXG5zb2NrZXQub24oXCJjYWxsOmpvaW5lZC1uZXctbWVtYmVyXCIsIGRhdGEgPT4ge1xyXG4gIGlzTm9uR3JvdXBDaGF0Q2FsbENvbm5lY3RlZCA9IHRydWVcclxuICBoaWRlT25DYWxsQ2FsbFN0YXR1cygpXHJcbiAgc2hvd09uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lcigpXHJcblxyXG4gIGNvbm5lY3RUb05ld0pvaW5lZE1lbWJlcihkYXRhLnVzZXJJZCwgZGF0YS5wZWVySWQsIG15TWVkaWFTdHJlYW0pXHJcbn0pXHJcblxyXG5zb2NrZXQub24oXCJjYWxsOmRpc2Nvbm5lY3QtY2FsbC1yb29tLW1lbWJlclwiLCBkYXRhID0+IHtcclxuICBhbGxNZWRpYUNvbm5lY3Rpb25zW2RhdGEucGVlcklkLnRvU3RyaW5nKCldLmNsb3NlKClcclxuICBkZWxldGUgYWxsTWVkaWFDb25uZWN0aW9uc1tkYXRhLnBlZXJJZC50b1N0cmluZygpXVxyXG4gIHJlbW92ZU9uQ2FsbFVzZXJCb3goZGF0YS51c2VySWQudG9TdHJpbmcoKSlcclxufSlcclxuXHJcbnNvY2tldC5vbihcImNhbGw6ZW5kLWNhbGwtcm9vbVwiLCBhc3luYyBkYXRhID0+IHtcclxuICBvbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuaW5uZXJIVE1MID0gXCJcIlxyXG4gIG9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIuaW5uZXJIVE1MID0gXCJcIlxyXG5cclxuICBsZXQgdmlkZW9UcmFja3MgPSBteU1lZGlhU3RyZWFtLmdldFZpZGVvVHJhY2tzKClcclxuICB2aWRlb1RyYWNrcy5mb3JFYWNoKHRyYWNrID0+IHRyYWNrLnN0b3AoKSlcclxuXHJcbiAgbGV0IGF1ZGlvVHJhY2sgPSBteU1lZGlhU3RyZWFtLmdldEF1ZGlvVHJhY2tzKClcclxuICBhdWRpb1RyYWNrLmZvckVhY2godHJhY2sgPT4gdHJhY2suc3RvcCgpKVxyXG5cclxuICBsZXQgeyBjcmVhdGVBZnRlckNhbGxTZWN0aW9uIH0gPSBhd2FpdCBpbXBvcnQoXCIuL2FmdGVyQ2FsbFNlY3Rpb24uZGV2XCIpXHJcbiAgY3JlYXRlQWZ0ZXJDYWxsU2VjdGlvbihkYXRhLmNhbGxSb29tLCB0cnVlKVxyXG59KVxyXG5cclxuc29ja2V0Lm9uKFwiY2FsbDp0b2dnbGUtY2FtZXJhLXN0cmVhbVwiLCBkYXRhID0+IHtcclxuICBjaGFuZ2VDYW1lcmFTdHJlYW0oZGF0YS5pc0VuYWJsZWQsIGRhdGEudXNlcklkKVxyXG59KVxyXG5cclxuc29ja2V0Lm9uKFwiY2FsbDp0b2dnbGUtYXVkaW8tc3RyZWFtXCIsIGRhdGEgPT4ge1xyXG4gIGNoYW5nZUF1ZGlvU3RyZWFtKGRhdGEuaXNFbmFibGVkLCBkYXRhLnVzZXJJZClcclxufSlcclxuXHJcbnNvY2tldC5vbihcImNhbGw6dG9nZ2xlLXNjcmVlbi1zaGFyZS1zdHJlYW1cIiwgZGF0YSA9PiB7XHJcbiAgbGV0IG9uQ2FsbFVzZXJCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgYC5vbi1jYWxsLXVzZXItYm94W2RhdGEtdXNlci1pZD1cIiR7ZGF0YS51c2VySWQudG9TdHJpbmcoKX1cIl1gXHJcbiAgKVxyXG5cclxuICBpZiAob25DYWxsVXNlckJveCkge1xyXG4gICAgbGV0IG9uQ2FsbFVzZXJCb3hWaWRlbyA9IG9uQ2FsbFVzZXJCb3guZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcclxuICAgICAgXCJvbi1jYWxsLXVzZXItYm94X192aWRlb1wiXHJcbiAgICApWzBdXHJcblxyXG4gICAgaWYgKGRhdGEuaXNFbmFibGVkKSB7XHJcbiAgICAgIGlmIChvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKSkge1xyXG4gICAgICAgIG9uQ2FsbFVzZXJCb3guY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoXHJcbiAgICAgICAgb25DYWxsVXNlckJveFZpZGVvLmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3hfX3ZpZGVvLS1jYW1lcmFcIilcclxuICAgICAgKVxyXG4gICAgICAgIG9uQ2FsbFVzZXJCb3hWaWRlby5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC11c2VyLWJveF9fdmlkZW8tLWNhbWVyYVwiKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKGRhdGEuaXNDYW1lcmFPbikge1xyXG4gICAgICAgIGlmIChvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKSlcclxuICAgICAgICAgIG9uQ2FsbFVzZXJCb3guY2xhc3NMaXN0LnJlbW92ZShcIm9uLWNhbGwtdXNlci1ib3gtLXZpZGVvLW9mZlwiKVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmICghb25DYWxsVXNlckJveC5jbGFzc0xpc3QuY29udGFpbnMoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIikpXHJcbiAgICAgICAgICBvbkNhbGxVc2VyQm94LmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LS12aWRlby1vZmZcIilcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKFxyXG4gICAgICAgICFvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmNvbnRhaW5zKFxyXG4gICAgICAgICAgXCJvbi1jYWxsLXVzZXItYm94X192aWRlby0tY2FtZXJhXCJcclxuICAgICAgICApXHJcbiAgICAgIClcclxuICAgICAgICBvbkNhbGxVc2VyQm94VmlkZW8uY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtdXNlci1ib3hfX3ZpZGVvLS1jYW1lcmFcIilcclxuICAgIH1cclxuICB9XHJcbn0pXHJcblxyXG5zb2NrZXQub24oXCJjYWxsOmNhbGwtcmluZ2dpbmdcIiwgYXN5bmMgZGF0YSA9PiB7XHJcbiAgaWYgKGRhdGEuY2FsbFJvb21JZCA9PT0gY2FsbFJvb20uX2lkLnRvU3RyaW5nKCkpIHtcclxuICAgIHVwZGF0ZU9uQ2FsbENhbGxTdGF0dXMoXCJSaW5nZ2luZ1wiKVxyXG4gIH1cclxufSlcclxuc29ja2V0Lm9uKFwiY2FsbDpjYWxsLWNhbmNlbGxlZFwiLCBhc3luYyBkYXRhID0+IHtcclxuICBpZiAoZGF0YS5jYWxsUm9vbUlkID09PSBjYWxsUm9vbS5faWQudG9TdHJpbmcoKSkge1xyXG4gICAgb25DYWxsQ2FsbFN0YXR1c1xyXG4gICAgICAuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9uLWNhbGwtY2FsbC1zdGF0dXNfX3Jvb20tc3RhdHVzLWVmZmVjdFwiKVswXVxyXG4gICAgICAuY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtY2FsbC1zdGF0dXNfX3Jvb20tc3RhdHVzLWVmZmVjdC0taGlkZVwiKVxyXG4gICAgdXBkYXRlT25DYWxsQ2FsbFN0YXR1cyhcIkNhbGwgZW5kZWRcIilcclxuICAgIG9uQ2FsbE1haW5CdG5Db250YWluZXIuY2xhc3NMaXN0LmFkZChcIm9uLWNhbGwtbWFpbi1idG4tY29udGFpbmVyLS1oaWRlXCIpXHJcbiAgICBvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci0taGlkZVwiKVxyXG4gICAgb25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyLmlubmVySFRNTCA9IFwiXCJcclxuICAgIG9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIuaW5uZXJIVE1MID0gXCJcIlxyXG5cclxuICAgIGxldCB2aWRlb1RyYWNrcyA9IG15TWVkaWFTdHJlYW0uZ2V0VmlkZW9UcmFja3MoKVxyXG4gICAgdmlkZW9UcmFja3MuZm9yRWFjaCh0cmFjayA9PiB0cmFjay5zdG9wKCkpXHJcblxyXG4gICAgbGV0IGF1ZGlvVHJhY2sgPSBteU1lZGlhU3RyZWFtLmdldEF1ZGlvVHJhY2tzKClcclxuICAgIGF1ZGlvVHJhY2suZm9yRWFjaCh0cmFjayA9PiB0cmFjay5zdG9wKCkpXHJcbiAgICBsZXQgeyBjcmVhdGVBZnRlckNhbGxTZWN0aW9uIH0gPSBhd2FpdCBpbXBvcnQoXCIuL2FmdGVyQ2FsbFNlY3Rpb24uZGV2XCIpXHJcblxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGNyZWF0ZUFmdGVyQ2FsbFNlY3Rpb24oY2FsbFJvb20sIHRydWUpXHJcbiAgICB9LCAzMDAwKVxyXG4gIH1cclxufSlcclxuXHJcbi8vIGZ1bmN0aW9uIHN3aXRjaFZpZXdUb1NpbmdsZSgpIHtcclxuLy8gICBsZXQgb25DYWxsVXNlckJveHMgPSBbXHJcbi8vICAgICAuLi5vbkNhbGxNYWluVmlld1VzZXJCb3hDb250YWluZXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9uLWNhbGwtdXNlci1ib3hcIilcclxuLy8gICBdXHJcblxyXG4vLyAgIGxldCBub09mT25DYWxsVXNlckJveHMgPSBvbkNhbGxVc2VyQm94cy5sZW5ndGhcclxuXHJcbi8vICAgaWYgKG5vT2ZPbkNhbGxVc2VyQm94cyA+IDEpIHtcclxuLy8gICAgIC8vIG9uQ2FsbFVzZXJCb3hzWzBdLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LS1tYWluLXZpZXctaW5mb1wiKVxyXG4vLyAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBub09mT25DYWxsVXNlckJveHM7IGkrKykge1xyXG4vLyAgICAgICBvbkNhbGxTbGlkZXJVc2VyQm94Q29udGFpbmVyLmFwcGVuZENoaWxkKG9uQ2FsbFVzZXJCb3hzW2ldKVxyXG4vLyAgICAgfVxyXG4vLyAgIH0gZWxzZSB7XHJcbi8vICAgICBpZiAobm9PZk9uQ2FsbFVzZXJCb3hzID09PSAxKSB7XHJcbi8vICAgICAgIG9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIuYXBwZW5kQ2hpbGQob25DYWxsVXNlckJveHNbMF0pXHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG5cclxuLy8gICByZXNldEhlaWdodEFuZFdpZHRoT2ZPbkNhbGxVc2VyQm94KClcclxuLy8gICBjaGFuZ2VIZWlnaHRBbmRXaWR0aE9mT25DYWxsVXNlckJveEluTWFpblZpZXcoKVxyXG5cclxuLy8gICBpZiAob25DYWxsVXNlckJveFNsaWRlci5jbGFzc0xpc3QuY29udGFpbnMoXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci0taGlkZVwiKSkge1xyXG4vLyAgICAgb25DYWxsVXNlckJveFNsaWRlci5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC11c2VyLWJveC1zbGlkZXItLWhpZGVcIilcclxuLy8gICB9XHJcblxyXG4vLyAgIGxldCBvbkNhbGxDaGFuZ2VWaWV3QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJvbkNhbGxDaGFuZ2VWaWV3QnRuXCIpXHJcbi8vICAgaWYgKG9uQ2FsbENoYW5nZVZpZXdCdG4pIHtcclxuLy8gICAgIGlmIChvbkNhbGxDaGFuZ2VWaWV3QnRuLmRhdGFzZXQuYnRuV29ya2luZ1N0YXRlID09PSBcInN3aXRjaC10by1zaW5nbGVcIikge1xyXG4vLyAgICAgICBvbkNhbGxDaGFuZ2VWaWV3QnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJvbi1jYWxsLWJ0bi0tc2VsZWN0ZWRcIilcclxuLy8gICAgICAgb25DYWxsQ2hhbmdlVmlld0J0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC1idG4tLXVuc2VsZWN0ZWRcIilcclxuLy8gICAgICAgb25DYWxsQ2hhbmdlVmlld0J0bi5kYXRhc2V0LmJ0bldvcmtpbmdTdGF0ZSA9IFwic3dpdGNoLXRvLW11bHRpcGxlXCJcclxuLy8gICAgIH1cclxuLy8gICB9XHJcbi8vIH1cclxuXHJcbi8vIGZ1bmN0aW9uIHN3aXRjaFZpZXdUb011bHRpcGxlKCkge1xyXG4vLyAgIGxldCBvbkNhbGxVc2VyQm94cyA9IFtcclxuLy8gICAgIC4uLm9uQ2FsbFNsaWRlclVzZXJCb3hDb250YWluZXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm9uLWNhbGwtdXNlci1ib3hcIilcclxuLy8gICBdXHJcblxyXG4vLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgb25DYWxsVXNlckJveHMubGVuZ3RoOyBpKyspIHtcclxuLy8gICAgIG9uQ2FsbE1haW5WaWV3VXNlckJveENvbnRhaW5lci5hcHBlbmRDaGlsZChvbkNhbGxVc2VyQm94c1tpXSlcclxuLy8gICB9XHJcblxyXG4vLyAgIGNoYW5nZUhlaWdodEFuZFdpZHRoT2ZPbkNhbGxVc2VyQm94SW5NYWluVmlldygpXHJcblxyXG4vLyAgIGlmIChcclxuLy8gICAgICFvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5jb250YWlucyhcIm9uLWNhbGwtdXNlci1ib3gtc2xpZGVyLS1oaWRlXCIpXHJcbi8vICAgKSB7XHJcbi8vICAgICBvbkNhbGxVc2VyQm94U2xpZGVyLmNsYXNzTGlzdC5hZGQoXCJvbi1jYWxsLXVzZXItYm94LXNsaWRlci0taGlkZVwiKVxyXG4vLyAgIH1cclxuXHJcbi8vICAgbGV0IG9uQ2FsbENoYW5nZVZpZXdCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm9uQ2FsbENoYW5nZVZpZXdCdG5cIilcclxuLy8gICBpZiAob25DYWxsQ2hhbmdlVmlld0J0bikge1xyXG4vLyAgICAgaWYgKG9uQ2FsbENoYW5nZVZpZXdCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPT09IFwic3dpdGNoLXRvLW11bHRpcGxlXCIpIHtcclxuLy8gICAgICAgb25DYWxsQ2hhbmdlVmlld0J0bi5jbGFzc0xpc3QucmVtb3ZlKFwib24tY2FsbC1idG4tLXVuc2VsZWN0ZWRcIilcclxuLy8gICAgICAgb25DYWxsQ2hhbmdlVmlld0J0bi5jbGFzc0xpc3QuYWRkKFwib24tY2FsbC1idG4tLXNlbGVjdGVkXCIpXHJcbi8vICAgICAgIG9uQ2FsbENoYW5nZVZpZXdCdG4uZGF0YXNldC5idG5Xb3JraW5nU3RhdGUgPSBcInN3aXRjaC10by1zaW5nbGVcIlxyXG4vLyAgICAgfVxyXG4vLyAgIH1cclxuLy8gfVxyXG4iXSwibmFtZXMiOlsic3ZnX2NhbGxBdWRpb09mZkljb24iLCJzdmdfY2FsbEF1ZGlvT25JY29uIiwic3ZnX2NhbGxTd2l0Y2hWaWV3VG9NdWx0aXBsZUljb24iLCJzdmdfY2FsbFN3aXRjaFZpZXdUb1NpbmdsZUljb24iLCJzdmdfY2FsbFNlY3VyZVJvb21JY29uIiwic3ZnX2NhbGxEZWZhdWx0Um9vbVBpY0ljb24iLCJzdmdfY2FsbERlZmF1bHRSb29tVXNlclBpY0ljb24iLCJzdmdfY2FsbExlZnRBcnJvd0ljb24iLCJzdmdfY2FsbFJpZ2h0QXJyb3dJY29uIiwic3ZnX2NhbGxQaW5Vc2VyQm94SWNvbiIsInN2Z19jYWxsVW5waW5Vc2VyQm94SWNvbiIsImNhbGxNYWluQ29udGFpbmVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIndhaXRpbmdTZWN0aW9uIiwiYmVmb3JlQ2FsbFNlY3Rpb24iLCJvbkNhbGxTZWN0aW9uIiwib25DYWxsTWFpblZpZXciLCJvbkNhbGxVc2VyQm94U2xpZGVyIiwib25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyIiwib25DYWxsU2xpZGVyVXNlckJveENvbnRhaW5lciIsIm9uQ2FsbENhbGxTdGF0dXMiLCJvbkNhbGxNYWluQnRuQ29udGFpbmVyIiwiY2FsbFJvb20iLCJvd25DYWxsUm9vbU1lbWJlckRhdGEiLCJpc05vbkdyb3VwQ2hhdENhbGwiLCJpc05vbkdyb3VwQ2hhdENhbGxDb25uZWN0ZWQiLCJteU1lZGlhU3RyZWFtIiwiaXNTY3JlZW5TaGFyZU9uIiwiaXNDYW1lcmFPbiIsImlzQXVkaW9PbiIsIm15UGVlciIsImFsbE1lZGlhQ29ubmVjdGlvbnMiLCJiZXN0U2NyZWVuV2lkdGgiLCJiZXN0U2NyZWVuV2lkdGhSYXRpbyIsIm1haW5WaWV3Q3NzIiwid2luZG93IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInY0IiwidXVpZHY0IiwiUGVlciIsImNyZWF0ZU9uQ2FsbFNlY3Rpb24iLCJjYWxsUm9vbURhdGEiLCJtZWRpYVN0cmVhbSIsInN0cmVhbVR5cGVEYXRhIiwiY29uc29sZSIsImxvZyIsImNsYXNzTGlzdCIsInJlbW92ZSIsIm9uQ2FsbFVzZXJCb3hTbGlkZXJIdG1sIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwib25DYWxsTWFpbkJ0bkNvbnRhaW5lckh0bWwiLCJpc0NoYXRSb29tIiwicm9vbUNoYXQiLCJpc0dyb3VwQ2hhdCIsImdyb3VwQ2hhdENhbGxSb29tQnRucyIsIm5vbkdyb3VwQ2hhdENhbGxSb29tQnRucyIsIm5vbkNoYXRDYWxsUm9vbUJ0bnMiLCJjYW1lcmFCdG4iLCJxdWVyeVNlbGVjdG9yIiwiYWRkIiwiaGFzT3duUHJvcGVydHkiLCJtZW1iZXJzIiwibGVuZ3RoIiwiZmluZCIsIm1lbWJlciIsInVzZXIiLCJfaWQiLCJ0b1N0cmluZyIsIm93bk1lbWJlclVzZXJJZCIsImZvckVhY2giLCJvbkNhbGxVc2VyQm94IiwiY3JlYXRlT25DYWxsVXNlckJveCIsImNoYW5nZU9uQ2FsbFVzZXJCb3hCdG4iLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJzaG93T25DYWxsTWFpblZpZXdVc2VyQm94Q29udGFpbmVyIiwiY2hhbmdlSGVpZ2h0QW5kV2lkdGhPZk9uQ2FsbFVzZXJCb3hJbk1haW5WaWV3IiwiY3JlYXRlT25DYWxsQ2FsbFN0YXR1cyIsImluaXRpYWxpc2VDYWxsIiwiaW5pdGlhbGlzZU9uQ2FsbE1haW5WaWV3UmVzaXplT2JzZXJ2ZXIiLCJpbml0aWFsaXNlRXZlbnRGb3JPbkNhbGxTZWN0aW9uIiwic2V0VGltZW91dCIsInBhcnNlRmxvYXQiLCJ3aWR0aCIsInJlc2l6ZU9ic2VydmVyRm9yTWFpblZpZXciLCJSZXNpemVPYnNlcnZlciIsImVudHJpZXMiLCJlbGVtZW50V2lkdGgiLCJjb250ZW50Qm94U2l6ZSIsImlubGluZVNpemUiLCJlbGVtZW50SGVpZ2h0IiwiYmxvY2tTaXplIiwib2JzZXJ2ZSIsIm9uQ2FsbENhbWVyYU9uIiwib25DYWxsQ2FtZXJhT2ZmIiwib25DYWxsU3dpdGNoQ2FtZXJhVG9TY3JlZW5TaGFyZSIsIm9uQ2FsbFN3aXRjaFNjcmVlblNoYXJlVG9DYW1lcmEiLCJvbkNhbGxBdWRpb09uIiwib25DYWxsQXVkaW9PZmYiLCJkZWJ1ZyIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidXNlcklkIiwibG9naW5Vc2VyIiwiY2FsbFJvb21JZCIsInBlZXJJZCIsImlkIiwidGhlbiIsInJlc3BvbnNlIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsImRhdGEiLCJpc1N1Y2Nlc3MiLCJjcmVhdGVNYWluTm90aWZpY2F0aW9uIiwiZXJyb3IiLCJjYXRjaCIsImVyciIsImFkZFN0cmVhbVRvT25DYWxsVXNlckJveCIsIm9uIiwiZXZlbnREYXRhIiwic29ja2V0IiwiZW1pdCIsIm1lZGlhQ29ubmVjdGlvbiIsImFuc3dlciIsIm9uY2UiLCJvdGhlck1lZGlhU3RyZWFtIiwibWV0YWRhdGEiLCJwZWVyIiwiZGVzdHJveWVkIiwiZGVzdHJveSIsInR5cGUiLCJyZWNvbm5lY3QiLCJfSWQiLCJpbm5lckhUTUwiLCJjcmVhdGVBZnRlckNhbGxTZWN0aW9uIiwiaXNDYWxsRW5kZWQiLCJjbG9zZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJ1cGRhdGVPbkNhbGxDYWxsU3RhdHVzIiwic2VuZFJlcXVlc3RUb0VuZENhbGwiLCJlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9uQ2FsbEJ0biIsInRhcmdldCIsImNsb3Nlc3QiLCJjb250YWlucyIsImRhdGFzZXQiLCJidG5UeXBlIiwiYnRuV29ya2luZ1N0YXRlIiwiY3JlYXRlT25DYWxsUm9vbVNoYXJlTW9kYWwiLCJjcmVhdGVPbkNhbGxSb29tSW5mb01vZGFsIiwib25DYWxsVXNlckJveFNsaWRlckJ0biIsIm9uQ2FsbFVzZXJCb3hCdG4iLCJhcHBlbmRDaGlsZCIsImxlZnRTbGlkZXJVc2VyQm94Q291bnQiLCJtYWluVmlld1VzZXJCb3hDb3VudCIsInNsaWRlclVzZXJCb3hDb3VudCIsInJlc2V0SGVpZ2h0QW5kV2lkdGhPZk9uQ2FsbFVzZXJCb3giLCJjb25uZWN0VG9OZXdKb2luZWRNZW1iZXIiLCJvdGhlclVzZXJJZCIsIm90aGVyUGVlcklkIiwibXlTdHJlYW0iLCJjYWxsIiwiZmV0Y2hDYWxsUm9vbU1lbWJlckFuZENyZWF0ZVVzZXJCb3hXaXRoU3RyZWFtIiwicmVtb3ZlT25DYWxsVXNlckJveCIsImNyZWF0ZUVsZW1lbnQiLCJvbkNhbGxVc2VyQm94SHRtbCIsInByb2ZpbGUiLCJuYW1lIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJ0ZXh0Q29udGVudCIsInVzZXJCb3giLCJwb3NpdGlvbiIsInVzZXJCb3hQaW5VbnBpbkJ0biIsInN0cmVhbSIsImNhbGxSb29tTWVtYmVyIiwidmlkZW8iLCJtdXRlZCIsInNyY09iamVjdCIsInBsYXkiLCJvbkNhbGxVc2VyQm94VmlkZW8iLCJvbkNhbGxVc2VyQm94cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjYWxsU3RhdHVzIiwicm9vbVBpYyIsImhpZGVPbkNhbGxDYWxsU3RhdHVzIiwibWFpblZpZXdXaWR0aCIsIm1haW5WaWV3SGVpZ2h0IiwidW5kZWZpbmVkIiwiaGVpZ2h0Iiwibm9PZlVzZXJzIiwiY29sdW1uIiwiTWF0aCIsImNlaWwiLCJzcXJ0IiwicGVyY2VudCIsImJlc3RIZWlnaHRQZXJjZW50Iiwic3R5bGUiLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsImNoYW5nZUNhbWVyYVN0cmVhbSIsImlzRW5hYmxlZCIsImdldENhbWVyYVZpZGVvVHJhY2siLCJjYWxsVmlkZW9UcmFjayIsInRyYWNrS2luZCIsImtpbmQiLCJ2aWRlb1RyYWNrcyIsImdldFZpZGVvVHJhY2tzIiwidHJhY2siLCJzdG9wIiwicmVtb3ZlVHJhY2siLCJhZGRUcmFjayIsIm90aGVyVXNlckNvbm5lY3Rpb24iLCJwZWVyQ29ubmVjdGlvbiIsImdldFNlbmRlcnMiLCJzZW5kZXIiLCJyZXBsYWNlVHJhY2siLCJjaGFuZ2VBdWRpb1N0cmVhbSIsImdldENhbGxBdWRpb1RyYWNrIiwiY2FsbEF1ZGlvVHJhY2siLCJhdWRpb1RyYWNrcyIsImdldEF1ZGlvVHJhY2tzIiwib25DYWxsVXNlckJveEF1ZGlvIiwic3dpdGNoQ2FtZXJhVG9TY3JlZW5TaGFyZVN0cmVhbSIsImdldFNjcmVlblNoYXJlVmlkZW9UcmFjayIsInNjcmVlblNoYXJlVmlkZW9UcmFjayIsIm9uZW5kZWQiLCJvbm11dGUiLCJvbnVubXV0ZSIsInN3aXRjaFNjcmVlblNoYXJlVG9DYW1lcmFTdHJlYW0iLCJtYWluVmlld1VzZXJCb3hzIiwic2xpZGVyVXNlckJveHMiLCJhdWRpb1RyYWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./dev-javascripts/call/js/onCallSection.dev.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css":
/*!**********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css ***!
  \**********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Rldi1qYXZhc2NyaXB0cy9jYWxsL2Nzcy9vbkNhbGxTZWN0aW9uLmRldi5jc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsaURBQWlELGtFQUFrRTtBQUNuSDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzPzBiMzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiXCIsXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css\n");

/***/ }),

/***/ "./dev-javascripts/call/css/onCallSection.dev.css":
/*!********************************************************!*\
  !*** ./dev-javascripts/call/css/onCallSection.dev.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./onCallSection.dev.css */ \"./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQXFHO0FBQ3JHLE1BQTJGO0FBQzNGLE1BQWtHO0FBQ2xHLE1BQXFIO0FBQ3JILE1BQThHO0FBQzlHLE1BQThHO0FBQzlHLE1BQXFIO0FBQ3JIO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7O0FBRXJDLHVCQUF1Qix1R0FBYTtBQUNwQztBQUNBLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMsa0dBQU87Ozs7QUFJK0Q7QUFDdkYsT0FBTyxpRUFBZSxrR0FBTyxJQUFJLHlHQUFjLEdBQUcseUdBQWMsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzPzIwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL29uQ2FsbFNlY3Rpb24uZGV2LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vb25DYWxsU2VjdGlvbi5kZXYuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./dev-javascripts/call/css/onCallSection.dev.css\n");

/***/ })

}]);