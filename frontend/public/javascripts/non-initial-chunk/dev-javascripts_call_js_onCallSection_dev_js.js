"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_call_js_onCallSection_dev_js"],{

/***/ "./dev-javascripts/call/js/onCallSection.dev.js":
/*!******************************************************!*\
  !*** ./dev-javascripts/call/js/onCallSection.dev.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createOnCallSection\": () => (/* binding */ createOnCallSection)\n/* harmony export */ });\n/* harmony import */ var _css_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/onCallSection.dev.css */ \"./dev-javascripts/call/css/onCallSection.dev.css\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var peerjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! peerjs */ \"./node_modules/peerjs/dist/bundler.mjs\");\nlet svg_callAudioOffIcon = `\n<svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M62.8859 53.6463C64.2407 50.9209 64.9585 47.9218 64.9848 44.8767V19.8206C64.9295 14.8705 63.0496 10.116 59.7071 6.47296C56.3647 2.82991 51.7961 0.556018 46.8815 0.089318C41.9668 -0.377382 37.0538 0.996121 33.0888 3.94525C29.1238 6.89437 26.3873 11.2105 25.4065 16.0622M79.9765 44.8767C79.9765 43.5476 79.45 42.273 78.5129 41.3332C77.5757 40.3934 76.3046 39.8655 74.9793 39.8655C73.6539 39.8655 72.3828 40.3934 71.4457 41.3332C70.5085 42.273 69.982 43.5476 69.982 44.8767C69.9675 49.2548 68.7763 53.548 66.5339 57.3045L73.8799 64.9215C77.9014 59.0189 80.0286 52.0252 79.9765 44.8767ZM44.9957 64.9215H45.7953L25.0067 44.0248V44.8767C25.0067 50.1929 27.1127 55.2914 30.8614 59.0505C34.61 62.8097 39.6943 64.9215 44.9957 64.9215ZM88.5218 86.4196L8.56575 6.24022C8.09982 5.77299 7.54667 5.40235 6.93789 5.14949C6.32912 4.89662 5.67664 4.76647 5.0177 4.76647C4.35877 4.76647 3.70629 4.89662 3.09751 5.14949C2.48874 5.40235 1.93559 5.77299 1.46965 6.24022C0.52865 7.18385 0 8.46369 0 9.79818C0 11.1327 0.52865 12.4125 1.46965 13.3561L81.4257 93.5355C81.8903 94.0052 82.443 94.378 83.0519 94.6324C83.6609 94.8869 84.3141 95.0178 84.9738 95.0178C85.6335 95.0178 86.2866 94.8869 86.8956 94.6324C87.5046 94.378 88.0573 94.0052 88.5218 93.5355C88.9902 93.0697 89.362 92.5154 89.6157 91.9048C89.8694 91.2941 90 90.6391 90 89.9776C90 89.316 89.8694 88.661 89.6157 88.0504C89.362 87.4397 88.9902 86.8855 88.5218 86.4196Z\" />\n<path d=\"M59.9875 89.9776H49.993V79.5543C52.8209 79.1595 55.59 78.419 58.2385 77.3493L50.2429 69.3314C48.5229 69.7346 46.7621 69.9364 44.9957 69.9327C38.369 69.9327 32.0136 67.2929 27.3278 62.594C22.6419 57.8951 20.0095 51.5219 20.0095 44.8767C20.0095 43.5476 19.483 42.273 18.5458 41.3332C17.6086 40.3934 16.3376 39.8655 15.0122 39.8655C13.6869 39.8655 12.4158 40.3934 11.4786 41.3332C10.5415 42.273 10.015 43.5476 10.015 44.8767C10.0248 53.3048 13.0603 61.4476 18.5662 67.8154C24.072 74.1832 31.6801 78.3502 39.9985 79.5543V89.9776H30.004C28.6786 89.9776 27.4076 90.5055 26.4704 91.4453C25.5332 92.3851 25.0067 93.6597 25.0067 94.9888C25.0067 96.3178 25.5332 97.5925 26.4704 98.5323C27.4076 99.472 28.6786 100 30.004 100H59.9875C61.3129 100 62.5839 99.472 63.5211 98.5323C64.4583 97.5925 64.9848 96.3178 64.9848 94.9888C64.9848 93.6597 64.4583 92.3851 63.5211 91.4453C62.5839 90.5055 61.3129 89.9776 59.9875 89.9776Z\" />\n</svg>\n`;\nlet svg_callAudioOnIcon = `\n<svg width=\"70\" height=\"100\" viewBox=\"0 0 70 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M35 65C40.3043 65 45.3914 62.8929 49.1421 59.1421C52.8929 55.3914 55 50.3043 55 45V20C55 14.6957 52.8929 9.60859 49.1421 5.85786C45.3914 2.10714 40.3043 0 35 0C29.6957 0 24.6086 2.10714 20.8579 5.85786C17.1071 9.60859 15 14.6957 15 20V45C15 50.3043 17.1071 55.3914 20.8579 59.1421C24.6086 62.8929 29.6957 65 35 65Z\" />\n<path d=\"M70 45C70 43.6739 69.4732 42.4021 68.5355 41.4645C67.5979 40.5268 66.3261 40 65 40C63.6739 40 62.4021 40.5268 61.4645 41.4645C60.5268 42.4021 60 43.6739 60 45C60 51.6304 57.3661 57.9893 52.6777 62.6777C47.9893 67.3661 41.6304 70 35 70C28.3696 70 22.0107 67.3661 17.3223 62.6777C12.6339 57.9893 10 51.6304 10 45C10 43.6739 9.47321 42.4021 8.53553 41.4645C7.59785 40.5268 6.32608 40 5 40C3.67392 40 2.40215 40.5268 1.46447 41.4645C0.526785 42.4021 0 43.6739 0 45C0.00985554 53.4092 3.04704 61.5338 8.5559 67.8874C14.0648 74.2409 21.677 78.3987 30 79.6V90H19.45C18.2698 90 17.1379 90.4688 16.3034 91.3034C15.4688 92.1379 15 93.2698 15 94.45V95.55C15 96.7302 15.4688 97.8621 16.3034 98.6966C17.1379 99.5312 18.2698 100 19.45 100H50.55C51.7302 100 52.8621 99.5312 53.6966 98.6966C54.5312 97.8621 55 96.7302 55 95.55V94.45C55 93.2698 54.5312 92.1379 53.6966 91.3034C52.8621 90.4688 51.7302 90 50.55 90H40V79.6C48.323 78.3987 55.9352 74.2409 61.4441 67.8874C66.953 61.5338 69.9901 53.4092 70 45Z\" />\n</svg>\n`;\nlet svg_callSwitchViewToMultipleIcon = `\n<svg width=\"100\" height=\"90\" viewBox=\"0 0 100 90\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M82.2562 4.75573e-07C79.9255 4.24627e-07 77.6176 0.476164 75.4644 1.40131C73.3111 2.32645 71.3546 3.68246 69.7066 5.3919C68.0585 7.10134 66.7512 9.13073 65.8593 11.3642C64.9674 13.5977 64.5083 15.9916 64.5083 18.4091C64.5083 20.8266 64.9674 23.2204 65.8593 25.4539C66.7512 27.6874 68.0585 29.7168 69.7066 31.4263C71.3546 33.1357 73.3111 34.4917 75.4644 35.4169C77.6176 36.342 79.9255 36.8182 82.2562 36.8182C86.9632 36.8171 91.477 34.8765 94.8046 31.4233C98.1322 27.9702 100.001 23.2873 100 18.4049C99.9989 13.5225 98.128 8.84053 94.7989 5.38894C91.4698 1.93735 86.9551 -0.00110851 82.2481 4.75573e-07H82.2562ZM17.7479 4.75573e-07C15.4172 4.24627e-07 13.1093 0.476164 10.956 1.40131C8.80278 2.32645 6.84627 3.68246 5.19822 5.3919C3.55018 7.10134 2.24289 9.13073 1.35098 11.3642C0.459063 13.5977 0 15.9916 0 18.4091C0 20.8266 0.459063 23.2204 1.35098 25.4539C2.24289 27.6874 3.55018 29.7168 5.19822 31.4263C6.84627 33.1357 8.80278 34.4917 10.956 35.4169C13.1093 36.342 15.4172 36.8182 17.7479 36.8182C22.4549 36.8171 26.9687 34.8765 30.2963 31.4233C33.6239 27.9702 35.4927 23.2873 35.4917 18.4049C35.4906 13.5225 33.6197 8.84053 30.2906 5.38894C26.9615 1.93735 22.4549 -0.00110851 17.7479 4.75573e-07Z\" />\n<path d=\"M82.2562 53.1818C79.9255 53.1818 77.6176 53.658 75.4644 54.5831C73.3111 55.5083 71.3546 56.8643 69.7066 58.5737C68.0585 60.2831 66.7512 62.3125 65.8593 64.546C64.9674 66.7795 64.5083 69.1734 64.5083 71.5909C64.5083 74.0084 64.9674 76.4022 65.8593 78.6357C66.7512 80.8692 68.0585 82.8986 69.7066 84.6081C71.3546 86.3175 73.3111 87.6735 75.4644 88.5987C77.6176 89.5238 79.9255 90 82.2562 90C86.9632 89.9989 91.477 88.0583 94.8046 84.6051C98.1322 81.152 100.001 76.4691 100 71.5867C99.9989 66.7043 98.128 62.0223 94.7989 58.5707C91.4698 55.1192 86.9551 53.1807 82.2481 53.1818H82.2562ZM17.7479 53.1818C15.4172 53.1818 13.1093 53.658 10.956 54.5831C8.80278 55.5083 6.84627 56.8643 5.19822 58.5737C3.55018 60.2831 2.24289 62.3125 1.35098 64.546C0.459063 66.7795 0 69.1734 0 71.5909C0 74.0084 0.459063 76.4022 1.35098 78.6357C2.24289 80.8692 3.55018 82.8986 5.19822 84.6081C6.84627 86.3175 8.80278 87.6735 10.956 88.5987C13.1093 89.5238 15.4172 90 17.7479 90C22.4549 89.9989 26.9687 88.0583 30.2963 84.6051C33.6239 81.152 35.4927 76.4691 35.4917 71.5867C35.4906 66.7043 33.6197 62.0223 30.2906 58.5707C26.9615 55.1192 22.4549 53.1807 17.7479 53.1818Z\" />\n</svg>\n`;\nlet svg_callSwitchViewToSingleIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M0 50C2.79451e-07 63.2608 5.26785 75.9785 14.6447 85.3553C24.0215 94.7321 36.7392 100 50 100C63.2608 100 75.9785 94.7321 85.3553 85.3553C94.7321 75.9785 100 63.2608 100 50C100 36.7392 94.7321 24.0215 85.3553 14.6447C75.9785 5.26785 63.2608 0 50 0C36.7392 0 24.0215 5.26785 14.6447 14.6447C5.26785 24.0215 0 36.7392 0 50Z\" />\n</svg>\n`;\nlet svg_callSecureRoomIcon = `\n<svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M45 99.9988C43.2528 100.027 41.5289 99.5894 40 98.7309L38.5001 97.8687C26.8165 91.1641 17.0966 81.4344 10.3327 69.6734C3.5688 57.9124 0.00335021 44.5413 0.000400756 30.9255V30.2155C-0.0154488 28.4196 0.439089 26.6517 1.31756 25.0924C2.19603 23.5331 3.46692 22.2383 5.00036 21.3404L40 1.35889C41.5202 0.468667 43.2447 0 45 0C46.7554 0 48.4798 0.468667 50 1.35889L84.9996 21.3404C86.5331 22.2383 87.804 23.5331 88.6824 25.0924C89.5609 26.6517 90.0155 28.4196 89.9996 30.2155V30.9255C89.9866 44.5513 86.4061 57.9292 79.6241 69.6912C72.8422 81.4531 63.1021 91.1771 51.3999 97.8687L49.9 98.7309C48.4007 99.5723 46.7134 100.009 45 99.9988Z\" />\n</svg>\n`;\nlet svg_callDefaultRoomPicIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0_1_4)\">\n<path d=\"M89.3125 0.25H33.0625C31.6496 0.241762 30.2491 0.51293 28.9414 1.04791C27.6337 1.58289 26.4447 2.37112 25.4428 3.36727C24.4408 4.36342 23.6457 5.54783 23.1031 6.85237C22.5605 8.15692 22.2812 9.55587 22.2812 10.9687V67.2188C22.2521 68.6406 22.5071 70.0539 23.0311 71.3759C23.5552 72.6979 24.3378 73.9021 25.3331 74.9178C26.3285 75.9335 27.5165 76.7403 28.8277 77.2911C30.1388 77.8418 31.5466 78.1253 32.9687 78.125H90.0937C92.8097 77.9187 95.3452 76.6862 97.1852 74.6779C99.0252 72.6696 100.032 70.0361 100 67.3125V11.0625C100.012 9.64965 99.7453 8.2483 99.2141 6.93904C98.6829 5.62978 97.8981 4.43846 96.9049 3.4336C95.9116 2.42873 94.7295 1.63015 93.4265 1.08379C92.1236 0.537428 90.7254 0.254065 89.3125 0.25ZM90.1875 58.5313C90.1103 59.0091 89.8542 59.4397 89.4712 59.7357C89.0882 60.0317 88.6069 60.1709 88.125 60.125H80.3125C79.88 55.339 77.6731 50.8879 74.1254 47.6464C70.5778 44.4049 65.9461 42.6075 61.1406 42.6075C56.3351 42.6075 51.7034 44.4049 48.1558 47.6464C44.6082 50.8879 42.4013 55.339 41.9688 60.125H34.1563C33.6744 60.1709 33.1931 60.0317 32.81 59.7357C32.427 59.4397 32.1709 59.0091 32.0938 58.5313V11.6562C32.1637 11.175 32.418 10.7397 32.8028 10.4424C33.1876 10.145 33.6729 10.0088 34.1563 10.0625H88.125C88.6084 10.0088 89.0937 10.145 89.4785 10.4424C89.8633 10.7397 90.1175 11.175 90.1875 11.6562V58.5313Z\" />\n<path d=\"M19.0625 67.3125V21.25L8.28125 23.75C5.52227 24.3898 3.13004 26.0985 1.63004 28.5009C0.130032 30.9032 -0.355083 33.8027 0.28125 36.5625L12.9688 91.4688C13.6085 94.2277 15.3173 96.62 17.7196 98.12C20.122 99.62 23.0215 100.105 25.7813 99.4687L80.6875 86.7813C82.2073 86.4364 83.633 85.7623 84.8641 84.8067C86.0952 83.851 87.1016 82.6369 87.8125 81.25H32.9688C31.1399 81.25 29.3291 80.8893 27.6398 80.1885C25.9506 79.4877 24.4162 78.4605 23.1245 77.1659C21.8328 75.8713 20.8091 74.3346 20.1121 72.6438C19.4151 70.953 19.0584 69.1413 19.0625 67.3125ZM61.1563 22.5312C59.3502 22.5251 57.5829 23.055 56.0782 24.0539C54.5735 25.0528 53.399 26.4757 52.7036 28.1426C52.0082 29.8094 51.823 31.6451 52.1715 33.4172C52.5201 35.1893 53.3867 36.8182 54.6616 38.0975C55.9365 39.3767 57.5624 40.2489 59.3333 40.6036C61.1042 40.9582 62.9405 40.7793 64.6097 40.0896C66.2789 39.3999 67.7059 38.2303 68.71 36.7291C69.714 35.2278 70.25 33.4623 70.25 31.6562C70.25 29.2416 69.2929 26.9253 67.5884 25.2149C65.8839 23.5046 63.5709 22.5395 61.1563 22.5312Z\" />\n</g>\n<defs>\n<clipPath id=\"clip0_1_4\">\n<rect width=\"100\" height=\"100\" />\n</clipPath>\n</defs>\n</svg>\n`;\nlet svg_callDefaultRoomUserPicIcon = `\n<svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path opacity=\"0.4\" d=\"M44.9994 55.56C60.5321 55.56 73.124 43.1225 73.124 27.78C73.124 12.4375 60.5321 0 44.9994 0C29.4666 0 16.8748 12.4375 16.8748 27.78C16.8748 43.1225 29.4666 55.56 44.9994 55.56Z\" />\n<path d=\"M89.9499 83.379C89.9753 82.9836 89.9753 82.5872 89.9499 82.1918C89.8386 80.7306 89.424 79.3037 88.7293 77.9909C85.9953 72.6484 78.3302 70.2283 71.9344 68.8584C67.3713 67.9085 62.735 67.2978 58.0689 67.032L53.1866 66.6667H50.9896H48.2556H41.7134H38.9793H36.7823L31.9001 67.032C27.2339 67.2978 22.5976 67.9085 18.0345 68.8584C11.6388 70.0457 3.97364 72.5114 1.23959 77.9909C0.544908 79.3037 0.130334 80.7306 0.0190286 82.1918C-0.00634286 82.5872 -0.00634286 82.9836 0.0190286 83.379C-0.00439641 83.7744 -0.00439641 84.1708 0.0190286 84.5662C0.151826 86.0149 0.582864 87.4258 1.28841 88.7215C4.02247 94.0639 11.6876 96.484 18.0833 97.8539C22.6549 98.7594 27.2877 99.3696 31.9489 99.6804L36.8311 100H38.0029H39.0281H51.0384H52.0637H53.2354L58.1177 99.6804C62.7789 99.3696 67.4116 98.7594 71.9832 97.8539C78.379 96.621 86.0441 94.2009 88.7782 88.7215C89.4508 87.3848 89.8641 85.9469 89.9987 84.4749C90.0049 84.109 89.9886 83.7431 89.9499 83.379Z\" />\n</svg>\n`;\nlet svg_callLeftArrowIcon = `\n<svg width=\"50\" height=\"100\" viewBox=\"0 0 50 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M19.3369 49.7901L47.6724 16.1905C49.1632 14.4121 50 12.0065 50 9.49901C50 6.99151 49.1632 4.58589 47.6724 2.80755C46.9283 1.91793 46.043 1.21182 45.0676 0.729955C44.0922 0.248087 43.046 0 41.9893 0C40.9326 0 39.8864 0.248087 38.911 0.729955C37.9356 1.21182 37.0503 1.91793 36.3062 2.80755L2.36768 43.0512C1.61744 43.9336 1.02196 44.9833 0.615593 46.14C0.209222 47.2966 0 48.5372 0 49.7901C0 51.0431 0.209222 52.2837 0.615593 53.4403C1.02196 54.5969 1.61744 55.6467 2.36768 56.5291L36.3062 97.2473C37.0541 98.127 37.9411 98.8229 38.9164 99.2953C39.8916 99.7676 40.9359 100.007 41.9893 99.9998C43.0427 100.007 44.087 99.7676 45.0622 99.2953C46.0374 98.8229 46.9245 98.127 47.6724 97.2473C49.1632 95.469 50 93.0633 50 90.5558C50 88.0483 49.1632 85.6427 47.6724 83.8644L19.3369 49.7901Z\" />\n</svg>\n`;\nlet svg_callRightArrowIcon = `\n<svg width=\"50\" height=\"100\" viewBox=\"0 0 50 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M47.6323 43.2565L13.6938 2.82094C12.9497 1.92708 12.0644 1.2176 11.089 0.733435C10.1136 0.24927 9.06738 0 8.01071 0C6.95404 0 5.90782 0.24927 4.93242 0.733435C3.95701 1.2176 3.07172 1.92708 2.32761 2.82094C0.836789 4.60776 0 7.02485 0 9.54431C0 12.0638 0.836789 14.4809 2.32761 16.2677L30.6631 50.0276L2.32761 83.7875C0.836789 85.5743 0 87.9914 0 90.5108C0 93.0303 0.836789 95.4474 2.32761 97.2342C3.07554 98.1181 3.96255 98.8174 4.93778 99.2919C5.91301 99.7665 6.95728 100.007 8.01071 99.9998C9.06414 100.007 10.1084 99.7665 11.0836 99.2919C12.0589 98.8174 12.9459 98.1181 13.6938 97.2342L47.6323 56.7986C48.3826 55.9121 48.978 54.8573 49.3844 53.6952C49.7908 52.533 50 51.2865 50 50.0276C50 48.7686 49.7908 47.5221 49.3844 46.36C48.978 45.1978 48.3826 44.1431 47.6323 43.2565Z\" />\n</svg>\n`;\nlet svg_callPinUserBoxIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M73.2111 1.83971C72.0439 0.666444 70.4584 0.00470624 68.8033 2.50056e-05C67.1481 -0.00465623 65.5589 0.648104 64.3851 1.81475C63.7658 2.4459 63.2872 3.20093 62.9807 4.03021C57.7874 14.8641 52.0698 20.9738 44.8542 24.5809C36.7585 28.575 27.4643 31.3521 12.4838 31.3521C11.2515 31.3579 10.0482 31.7261 9.02377 32.4108C7.99931 33.0955 7.19899 34.0664 6.72251 35.2026C6.25081 36.3434 6.12772 37.5983 6.36879 38.809C6.60985 40.0197 7.20428 41.1318 8.077 42.005L28.3194 62.2436L0 100L37.7634 71.6859L57.9996 91.9183C58.5793 92.5026 59.2716 92.9633 60.0345 93.2725C60.796 93.5908 61.6074 93.7593 62.4189 93.7593C63.2303 93.7593 64.0418 93.5908 64.8033 93.2725C65.9447 92.8044 66.9211 92.0072 67.608 90.9826C68.2949 89.9579 68.6614 88.7521 68.6608 87.5186C68.6608 72.5408 71.4322 63.2484 75.4207 55.279C79.0223 48.0647 85.1331 42.3482 95.9753 37.156C96.8043 36.8523 97.558 36.3733 98.1849 35.7518C99.3518 34.5782 100.005 32.9892 100 31.3344C99.9953 29.6796 99.3334 28.0944 98.1599 26.9274L73.2111 1.83971Z\" />\n</svg>\n\n`;\nlet svg_callUnpinUserBoxIcon = `\n<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"  xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M73.0585 2.15144C71.8937 0.981899 70.3115 0.322263 68.6599 0.317597C67.0082 0.31293 65.4223 0.963618 64.2509 2.12656C63.6329 2.75571 63.1553 3.50834 62.8494 4.33498C57.667 15.1345 51.9613 21.2247 44.7607 24.8204C36.6819 28.8018 27.4071 31.5701 12.4578 31.5701C11.2281 31.5759 10.0273 31.9429 9.00496 32.6254C7.98264 33.3079 7.18399 34.2758 6.7085 35.4084C6.23778 36.5455 6.11494 37.7965 6.35551 39.0033C6.59608 40.2102 7.18926 41.3188 8.06017 42.1892L28.2604 62.3635L0 100L37.6847 71.7758L57.8787 91.9439C58.4572 92.5264 59.148 92.9857 59.9094 93.2939C60.6693 93.6111 61.479 93.7791 62.2888 93.7791C63.0985 93.7791 63.9083 93.6111 64.6682 93.2939C65.8073 92.8272 66.7816 92.0326 67.4671 91.0112C68.1526 89.9898 68.5183 88.7878 68.5177 87.5582C68.5177 72.628 71.2833 63.3651 75.2635 55.421C78.8576 48.2297 84.9557 42.5313 95.7752 37.3555C96.6025 37.0528 97.3546 36.5754 97.9803 35.9558C99.1447 34.7859 99.7962 33.2021 99.7915 31.5525C99.7869 29.9029 99.1264 28.3228 97.9553 27.1595L73.0585 2.15144Z\" />\n<path d=\"M15.2712 1.40169C14.8701 1.78317 14.5521 2.23667 14.3355 2.73604C14.119 3.2354 14.0081 3.77074 14.0093 4.31118C14.0105 4.85161 14.1238 5.38645 14.3427 5.88483C14.5615 6.38321 14.8815 6.83527 15.2843 7.21494L92.6395 80.73C93.039 81.1128 93.514 81.4163 94.037 81.623C94.56 81.8296 95.1208 81.9354 95.6869 81.9341C96.253 81.9328 96.8132 81.8245 97.3353 81.6155C97.8574 81.4065 98.331 81.1009 98.7288 80.7163C99.1299 80.3348 99.4479 79.8813 99.6645 79.3819C99.881 78.8826 99.9919 78.3472 99.9907 77.8068C99.9895 77.2663 99.8762 76.7315 99.6573 76.2331C99.4385 75.7348 99.1185 75.2827 98.7157 74.903L21.3605 1.38795C20.961 1.00514 20.486 0.701647 19.963 0.494986C19.44 0.288326 18.8792 0.182588 18.3131 0.183865C17.747 0.185142 17.1868 0.293409 16.6647 0.502427C16.1426 0.711445 15.669 1.01708 15.2712 1.40169Z\" />\n</svg>\n`;\nconst callMainContainer = document.getElementById(\"callMainContainer\");\nconst waitingSection = document.getElementById(\"waitingSection\");\nconst beforeCallSection = document.getElementById(\"beforeCallSection\");\nconst onCallSection = document.getElementById(\"onCallSection\");\nconst onCallMainView = document.getElementById(\"onCallMainView\");\nconst onCallUserBoxSlider = document.getElementById(\"onCallUserBoxSlider\");\nconst onCallMainViewUserBoxContainer = document.getElementById(\"onCallMainViewUserBoxContainer\");\nconst onCallSliderUserBoxContainer = document.getElementById(\"onCallSliderUserBoxContainer\");\nconst onCallCallStatus = document.getElementById(\"onCallCallStatus\");\nconst onCallMainBtnContainer = document.getElementById(\"onCallMainBtnContainer\");\nlet callRoom;\nlet ownCallRoomMemberData;\nlet isNonGroupChatCall = false;\nlet isNonGroupChatCallConnected = false;\nlet myMediaStream;\nlet isScreenShareOn = false;\nlet isCameraOn = true;\nlet isAudioOn = true;\nlet myPeer;\nlet allMediaConnections = {};\nlet bestScreenWidth;\nlet bestScreenWidthRatio = 4 / 3;\nlet mainViewCss = window.getComputedStyle(onCallMainView);\n\n\n\nasync function createOnCallSection(callRoomData, mediaStream, streamTypeData) {\n  callRoom = callRoomData;\n  myMediaStream = mediaStream;\n  isScreenShareOn = streamTypeData.isScreenShareOn;\n  isCameraOn = streamTypeData.isCameraOn;\n  isAudioOn = streamTypeData.isAudioOn;\n  console.log(\"oginal callRoomData:\", callRoom);\n  waitingSection.classList.remove(\"waiting-section--hide\");\n  let onCallUserBoxSliderHtml = `\n     <div class=\"on-call-user-box-slider-btn on-call-user-box-slider-btn--unselected\">\n           <div class=\"on-call-user-box-slider-btn__icon on-call-user-box-slider-btn__icon--unselected\">\n           ${svg_callRightArrowIcon}\n           </div>\n           <div class=\"on-call-user-box-slider-btn__icon on-call-user-box-slider-btn__icon--selected\">\n           ${svg_callLeftArrowIcon}\n           </div>\n     </div>\n`;\n  onCallUserBoxSlider.insertAdjacentHTML(\"beforeend\", onCallUserBoxSliderHtml);\n  let onCallMainBtnContainerHtml;\n\n  if (callRoom.isChatRoom) {\n    if (callRoom.roomChat.isGroupChat) {\n      let {\n        groupChatCallRoomBtns\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallSectionBtns_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallSectionBtns.dev */ \"./dev-javascripts/call/js/onCallSectionBtns.dev.js\"));\n      onCallMainBtnContainerHtml = groupChatCallRoomBtns;\n    } else {\n      let {\n        nonGroupChatCallRoomBtns\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallSectionBtns_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallSectionBtns.dev */ \"./dev-javascripts/call/js/onCallSectionBtns.dev.js\"));\n      onCallMainBtnContainerHtml = nonGroupChatCallRoomBtns;\n    }\n  } else {\n    let {\n      nonChatCallRoomBtns\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallSectionBtns_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallSectionBtns.dev */ \"./dev-javascripts/call/js/onCallSectionBtns.dev.js\"));\n    onCallMainBtnContainerHtml = nonChatCallRoomBtns;\n  }\n\n  onCallMainBtnContainer.insertAdjacentHTML(\"beforeend\", onCallMainBtnContainerHtml);\n\n  if (isScreenShareOn) {\n    let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n    if (cameraBtn) cameraBtn.classList.add(\"on-call-btn--disable\");\n  }\n\n  if (callRoom.hasOwnProperty(\"members\")) {\n    console.log(\"Members count:\", callRoom.members.length);\n    ownCallRoomMemberData = callRoom.members.find(member => {\n      return member.user._id.toString() === callRoom.ownMemberUserId.toString();\n    });\n\n    if (callRoom.members.length > 1) {\n      callRoom.members.forEach(member => {\n        if (member.user._id.toString() === callRoom.ownMemberUserId.toString()) {\n          let onCallUserBox = createOnCallUserBox(member);\n          changeOnCallUserBoxBtn(onCallUserBox, \"main-view\");\n          onCallMainViewUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        } else {\n          let onCallUserBox = createOnCallUserBox(member);\n          changeOnCallUserBoxBtn(onCallUserBox, \"slider\");\n          onCallSliderUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        }\n      });\n      showOnCallMainViewUserBoxContainer();\n      changeHeightAndWidthOfOnCallUserBoxInMainView();\n    } else {\n      if (callRoom.members.length === 1) {\n        let onCallUserBox = createOnCallUserBox(callRoom.members[0]);\n        changeOnCallUserBoxBtn(onCallUserBox, \"slider\");\n        onCallSliderUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n      }\n\n      if (callRoom.isChatRoom) {\n        if (callRoom.roomChat.isGroupChat === false) {\n          isNonGroupChatCall = true;\n          createOnCallCallStatus(\"Connecting\");\n          onCallSection.insertAdjacentHTML(\"afterbegin\", `<audio class=\"on-call-section-audio\" id=\"onCallCreatingCallAudio\" loop>\n                   <source src=\"/assets/audios/creatingCallAudio.mp3\" type=\"audio/mpeg\">\n            </audio>`);\n        } else {\n          createOnCallCallStatus(\"Waiting for others to join\");\n        }\n      } else {\n        createOnCallCallStatus(\"Send this link to others so they can join\");\n      }\n    }\n  }\n\n  onCallSection.insertAdjacentHTML(\"afterbegin\", `<audio class=\"on-call-section-audio\" id=\"onCallJoinedNewCallRoomMemberAudio\" >\n           <source src=\"/assets/audios/joinedNewCallRoomMemberAudio.mp3\" type=\"audio/mpeg\">\n    </audio>`);\n  onCallSection.insertAdjacentHTML(\"afterbegin\", `<audio class=\"on-call-section-audio\" id=\"onCallEndingCallAudio\" >\n           <source src=\"/assets/audios/endingCallAudio.mp3\" type=\"audio/mpeg\">\n    </audio>`);\n  await initialiseCall();\n  initialiseOnCallMainViewResizeObserver();\n  initialiseEventForOnCallSection();\n  setTimeout(() => {\n    beforeCallSection.classList.add(\"before-call-section--hide\");\n    waitingSection.classList.add(\"waiting-section--hide\");\n    onCallSection.classList.remove(\"on-call-section--hide\");\n  }, 2000);\n}\n\nfunction initialiseOnCallMainViewResizeObserver() {\n  bestScreenWidth = parseFloat(mainViewCss.width);\n  const resizeObserverForMainView = new ResizeObserver(entries => {\n    let elementWidth = entries[0].contentBoxSize[0].inlineSize;\n    let elementHeight = entries[0].contentBoxSize[0].blockSize;\n\n    if (elementWidth > elementHeight * bestScreenWidthRatio) {\n      bestScreenWidth = elementHeight * bestScreenWidthRatio;\n    } else {\n      bestScreenWidth = parseFloat(mainViewCss.width);\n    }\n\n    changeHeightAndWidthOfOnCallUserBoxInMainView(entries[0].contentBoxSize[0].inlineSize, entries[0].contentBoxSize[0].blockSize);\n  });\n  resizeObserverForMainView.observe(onCallMainView);\n}\n\nasync function initialiseCall() {\n  try {\n    if (isCameraOn) {\n      onCallCameraOn();\n    } else {\n      onCallCameraOff();\n    }\n\n    if (isScreenShareOn) {\n      onCallSwitchCameraToScreenShare();\n    } else {\n      onCallSwitchScreenShareToCamera();\n    }\n\n    if (isAudioOn) {\n      onCallAudioOn();\n    } else {\n      onCallAudioOff();\n    }\n\n    myPeer = new peerjs__WEBPACK_IMPORTED_MODULE_1__.Peer((0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), {\n      debug: 0\n    });\n    fetch(\"/call-room-member/update-peer-id\", {\n      method: \"Put\",\n      // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: loginUser._id.toString(),\n        callRoomId: callRoom._id.toString(),\n        peerId: myPeer.id\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(response);\n    }).then(async data => {\n      if (data.isSuccess) {} else {\n        let {\n          createMainNotification\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n        createMainNotification(data.error, \"error\");\n      }\n    }).catch(async err => {\n      console.log(err);\n      let {\n        createMainNotification\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n      createMainNotification(\"Server error in updating peer,please refresh your page\", \"error\");\n    });\n    addStreamToOnCallUserBox(loginUser._id.toString(), myMediaStream);\n    myPeer.on(\"open\", id => {\n      let eventData = {\n        callRoomId: callRoom._id,\n        userId: loginUser._id,\n        peerId: myPeer.id\n      };\n      socket.emit(\"call:join-call-room\", eventData);\n    });\n    myPeer.on(\"call\", mediaConnection => {\n      mediaConnection.answer(myMediaStream);\n      mediaConnection.once(\"stream\", otherMediaStream => {\n        addStreamToOnCallUserBox(mediaConnection.metadata.userId, otherMediaStream);\n      });\n      allMediaConnections[mediaConnection.peer] = mediaConnection;\n    });\n    myPeer.on(\"error\", err => {\n      if (!myPeer.destroyed) myPeer.destroy();\n      console.log(\"Error in peer: \", err.type);\n    });\n    myPeer.on(\"disconnected\", () => {\n      myPeer.reconnect();\n    });\n    myPeer.on(\"close\", () => {\n      let data = {\n        callRoomId: callRoom._Id\n      };\n      fetch(\"/call/left-call-room\", {\n        method: \"POST\",\n        // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(response);\n      }).then(async data => {\n        if (data.isSuccess) {\n          onCallMainViewUserBoxContainer.innerHTML = \"\";\n          onCallSliderUserBoxContainer.innerHTML = \"\";\n          let {\n            createAfterCallSection\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n          createAfterCallSection(callRoom, data.isCallEnded);\n        } else {\n          myPeer.destroy();\n        }\n      }).catch(async err => {\n        console.log(err);\n        myPeer.destroy();\n      });\n\n      for (let peer in allMediaConnections) {\n        allMediaConnections[peer].close();\n        delete allMediaConnections.peer;\n      }\n    });\n\n    if (isNonGroupChatCall === true) {\n      setTimeout(() => {\n        if (isNonGroupChatCallConnected === false) {\n          onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-effect\")[0].classList.add(\"on-call-call-status__room-status-effect--hide\");\n          updateOnCallCallStatus(\"Time out\");\n          onCallMainBtnContainer.classList.add(\"on-call-main-btn-container--hide\");\n          onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\");\n          setTimeout(() => {\n            sendRequestToEndCall();\n          }, 3000);\n        }\n      }, 1000 * 90);\n    }\n  } catch (e) {\n    console.log(\"error in calling:\", e);\n  }\n}\n\nfunction initialiseEventForOnCallSection() {\n  onCallMainBtnContainer.addEventListener(\"click\", async e => {\n    let onCallBtn = e.target.closest(`.on-call-btn`);\n\n    if (onCallBtn && onCallMainBtnContainer.contains(onCallBtn)) {\n      if (onCallBtn.dataset.btnType === \"call-video\") {\n        if (isScreenShareOn === false) {\n          if (onCallBtn.dataset.btnWorkingState === \"call-video-off\") {\n            onCallCameraOff();\n          } else if (onCallBtn.dataset.btnWorkingState === \"call-video-on\") {\n            onCallCameraOn();\n          }\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-audio\") {\n        if (onCallBtn.dataset.btnWorkingState === \"call-audio-off\") {\n          onCallAudioOff();\n        } else if (onCallBtn.dataset.btnWorkingState === \"call-audio-on\") {\n          onCallAudioOn();\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-share-screen\") {\n        if (onCallBtn.dataset.btnWorkingState === \"call-share-screen-on\") {\n          let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n          if (cameraBtn) cameraBtn.classList.add(\"on-call-btn--disable\");\n          onCallSwitchCameraToScreenShare();\n        } else if (onCallBtn.dataset.btnWorkingState === \"call-share-screen-off\") {\n          let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n          if (cameraBtn) cameraBtn.classList.remove(\"on-call-btn--disable\");\n          onCallSwitchScreenShareToCamera();\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-share-room\") {\n        if (onCallBtn.dataset.btnWorkingState === \"open-modal\") {\n          onCallBtn.classList.remove(\"on-call-btn--unselected\");\n          onCallBtn.classList.add(\"on-call-btn--selected\");\n          onCallBtn.dataset.btnWorkingState = \"close-modal\";\n          let {\n            createOnCallRoomShareModal\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallRoomShareModal_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallRoomShareModal.dev */ \"./dev-javascripts/call/js/onCallRoomShareModal.dev.js\"));\n          createOnCallRoomShareModal();\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-room-info\") {\n        if (onCallBtn.dataset.btnWorkingState === \"open-modal\") {\n          onCallBtn.classList.remove(\"on-call-btn--unselected\");\n          onCallBtn.classList.add(\"on-call-btn--selected\");\n          onCallBtn.dataset.btnWorkingState = \"close-modal\";\n          let {\n            createOnCallRoomInfoModal\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_onCallRoomInfoModal_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./onCallRoomInfoModal.dev */ \"./dev-javascripts/call/js/onCallRoomInfoModal.dev.js\"));\n          createOnCallRoomInfoModal(callRoom);\n        }\n      }\n\n      if (onCallBtn.dataset.btnType === \"call-end\") {\n        if (onCallBtn.dataset.btnWorkingState === \"end-call\") {\n          sendRequestToEndCall();\n        }\n      }\n    }\n  });\n  let onCallUserBoxSliderBtn = onCallUserBoxSlider.getElementsByClassName(\"on-call-user-box-slider-btn\")[0];\n\n  if (onCallUserBoxSliderBtn) {\n    onCallUserBoxSliderBtn.addEventListener(\"click\", async e => {\n      if (!onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--slide\")) {\n        onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--slide\");\n        onCallUserBoxSliderBtn.classList.remove(\"on-call-user-box-slider-btn--unselected\");\n        onCallUserBoxSliderBtn.classList.add(\"on-call-user-box-slider-btn--selected\");\n      } else {\n        onCallUserBoxSlider.classList.remove(\"on-call-user-box-slider--slide\");\n        onCallUserBoxSliderBtn.classList.remove(\"on-call-user-box-slider-btn--selected\");\n        onCallUserBoxSliderBtn.classList.add(\"on-call-user-box-slider-btn--unselected\");\n      }\n    });\n  }\n\n  if (onCallMainView) onCallMainView.addEventListener(\"click\", e => {\n    if (!onCallMainViewUserBoxContainer.classList.contains(\"on-call-main-view-user-box-container--hide\")) {\n      let onCallUserBoxBtn = e.target.closest(`.on-call-user-box__btn`);\n\n      if (onCallUserBoxBtn && onCallMainView.contains(onCallUserBoxBtn)) {\n        let onCallUserBox = onCallUserBoxBtn.closest(\".on-call-user-box\");\n\n        if (onCallUserBoxBtn.dataset.btnType === \"user-pin-unpin\") {\n          if (onCallUserBoxBtn.dataset.btnWorkingState === \"pin-user-box\") {\n            if (onCallSliderUserBoxContainer.contains(onCallUserBox)) {\n              onCallMainViewUserBoxContainer.appendChild(onCallUserBox);\n              changeHeightAndWidthOfOnCallUserBoxInMainView();\n              let leftSliderUserBoxCount = onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length;\n\n              if (leftSliderUserBoxCount === 0) {\n                if (!onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")) onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\");\n              }\n\n              onCallUserBoxBtn.classList.remove(\"on-call-user-box__btn--main-view\");\n              onCallUserBoxBtn.classList.add(\"on-call-user-box__btn--slider\");\n              onCallUserBoxBtn.dataset.btnWorkingState = \"unpin-user-box\";\n            }\n          } else if (onCallUserBoxBtn.dataset.btnWorkingState === \"unpin-user-box\") {\n            if (onCallMainViewUserBoxContainer.contains(onCallUserBox)) {\n              let mainViewUserBoxCount = onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length;\n\n              if (mainViewUserBoxCount > 1) {\n                onCallSliderUserBoxContainer.appendChild(onCallUserBox);\n                let sliderUserBoxCount = onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length;\n\n                if (sliderUserBoxCount > 0) {\n                  if (onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")) onCallUserBoxSlider.classList.remove(\"on-call-user-box-slider--hide\");\n                }\n\n                resetHeightAndWidthOfOnCallUserBox();\n                changeHeightAndWidthOfOnCallUserBoxInMainView();\n                onCallUserBoxBtn.classList.remove(\"on-call-user-box__btn--slider\");\n                onCallUserBoxBtn.classList.add(\"on-call-user-box__btn--main-view\");\n                onCallUserBoxBtn.dataset.btnWorkingState = \"pin-user-box\";\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction connectToNewJoinedMember(otherUserId, otherPeerId, myStream) {\n  const mediaConnection = myPeer.call(otherPeerId, myStream, {\n    metadata: {\n      userId: loginUser._id.toString(),\n      callRoomId: callRoom._id\n    }\n  });\n  mediaConnection.once(\"stream\", otherMediaStream => {\n    fetchCallRoomMemberAndCreateUserBoxWithStream(mediaConnection.peer, callRoom._id, otherMediaStream);\n  });\n  mediaConnection.on(\"close\", () => {\n    removeOnCallUserBox(otherUserId);\n  });\n  mediaConnection.on(\"error\", function (err) {\n    console.log(\"Error in media connection:\", err.type);\n  });\n  allMediaConnections[mediaConnection.peer] = mediaConnection;\n}\n\nfunction createOnCallUserBox(member) {\n  let onCallUserBox = document.createElement(\"div\");\n  onCallUserBox.classList.add(\"on-call-user-box\");\n  onCallUserBox.dataset.userId = member.user._id;\n  let onCallUserBoxHtml = `\n          <div class=\"on-call-user-box__video\">\n                        </div>\n\n          <div class=\"on-call-user-box__audio\">\n             <div class=\"on-call-user-box__audio-icon on-call-user-box__audio-icon--on\">\n               ${svg_callAudioOnIcon}\n             </div>\n             <div class=\"on-call-user-box__audio-icon on-call-user-box__audio-icon--off\">\n               ${svg_callAudioOffIcon}\n             </div>\n         </div>\n\n   <div class=\"on-call-user-box__info\">\n       <div class='on-call-user-box__pic ${member.user.hasOwnProperty(\"profile\") && member.user.profile !== \"\" ? \"on-call-user-box__pic--img\" : \"on-call-user-box__pic--svg\"}'>\n\n         ${svg_callDefaultRoomUserPicIcon}\n         <img src='${member.user.hasOwnProperty(\"profile\") && member.user.profile !== \"\" ? member.user.profile : \"\"}' alt=\"\">   \n      </div>\n\n      <div class=\"on-call-user-box__name\"></div>\n    </div>\n\n\n    <div class=\"on-call-user-box__btn-container\">\n       <div class=\"on-call-user-box__btn\"\n       data-btn-type=\"user-pin-unpin\" data-btn-working-state=\"\"\n       >\n             <div class=\"on-call-user-box__btn-icon on-call-user-box__btn-icon--slider\">\n             ${svg_callPinUserBoxIcon}\n             </div>\n\n             <div class=\"on-call-user-box__btn-icon on-call-user-box__btn-icon--main-view\">\n             ${svg_callUnpinUserBoxIcon}\n             </div>\n         </div>\n    </div>\n    `;\n  onCallUserBox.insertAdjacentHTML(\"beforeend\", onCallUserBoxHtml);\n  let name;\n\n  if (member.user._id.toString() === loginUser._id.toString()) {\n    name = \"(You)\";\n  } else {\n    name = member.user.firstName + \" \" + member.user.lastName;\n  }\n\n  onCallUserBox.getElementsByClassName(\"on-call-user-box__name\")[0].textContent = name;\n\n  if (member.isAudioOn) {\n    onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0].classList.add(\"on-call-user-box__audio--on\");\n  } else {\n    onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0].classList.add(\"on-call-user-box__audio--off\");\n  }\n\n  if (!(member.isCameraOn || member.isScreenShareOn)) {\n    onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n  }\n\n  if (member.isCameraOn) {\n    onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0].classList.add(\"on-call-user-box__video--camera\");\n  }\n\n  return onCallUserBox;\n}\n\nfunction changeOnCallUserBoxBtn(userBox, position) {\n  let userBoxPinUnpinBtn = userBox.querySelector(`.on-call-user-box__btn[data-btn-type=\"user-pin-unpin\"]`);\n\n  if (userBoxPinUnpinBtn) {\n    if (position === \"main-view\") {\n      userBoxPinUnpinBtn.classList.add(\"on-call-user-box__btn--main-view\");\n      userBoxPinUnpinBtn.dataset.btnWorkingState = \"unpin-user-box\";\n    }\n\n    if (position === \"slider\") {\n      userBoxPinUnpinBtn.classList.add(\"on-call-user-box__btn--slider\");\n      userBoxPinUnpinBtn.dataset.btnWorkingState = \"pin-user-box\";\n    }\n  }\n}\n\nfunction fetchCallRoomMemberAndCreateUserBoxWithStream(peerId, callRoomId, stream) {\n  fetch(\"/call-room-member/data/member\", {\n    method: \"POST\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      peerId: peerId,\n      callRoomId: callRoomId\n    })\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response);\n  }).then(async data => {\n    if (data.isSuccess) {\n      let mainViewUserBoxCount = onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\").length; // let sliderUserBoxCount =\n      //   onCallSliderUserBoxContainer.getElementsByClassName(\n      //     \"on-call-user-box\"\n      //   ).length\n\n      let onCallUserBox = createOnCallUserBox(data.callRoomMember);\n\n      if (mainViewUserBoxCount === 0) {\n        changeOnCallUserBoxBtn(onCallUserBox, \"main-view\");\n        onCallMainViewUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        changeHeightAndWidthOfOnCallUserBoxInMainView();\n      } else {\n        changeOnCallUserBoxBtn(onCallUserBox, \"slider\");\n        onCallSliderUserBoxContainer.insertAdjacentElement(\"afterbegin\", onCallUserBox);\n        resetHeightAndWidthOfOnCallUserBox();\n        changeHeightAndWidthOfOnCallUserBoxInMainView();\n      }\n\n      addStreamToOnCallUserBox(data.callRoomMember.user._id, stream);\n    } else {\n      let {\n        createMainNotification\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n      createMainNotification(data.error, \"error\");\n    }\n  }).catch(async err => {\n    console.log(err);\n    let {\n      createMainNotification\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n    createMainNotification(\"Server error in fetching room member,please refresh your page\", \"error\");\n  });\n}\n\nfunction addStreamToOnCallUserBox(userId, stream) {\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${userId}\"]`);\n\n  if (onCallUserBox) {\n    // onCallUserBoxVideo.innerHTML = \"\"\n    let video = document.createElement(\"video\");\n\n    if (userId.toString() === loginUser._id.toString()) {\n      video.muted = true;\n    }\n\n    video.srcObject = stream;\n    video.addEventListener(\"loadedmetadata\", () => {\n      video.play();\n    });\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n    onCallUserBoxVideo.insertAdjacentElement(\"beforeend\", video);\n  }\n}\n\nfunction removeOnCallUserBox(userId) {\n  let onCallUserBoxs = [...document.querySelectorAll(`.on-call-user-box[data-user-id=\"${userId}\"]`)];\n\n  if (onCallUserBoxs.length > 0) {\n    onCallUserBoxs.forEach(userBox => {\n      userBox.remove();\n    });\n    changeHeightAndWidthOfOnCallUserBoxInMainView();\n  }\n}\n\nfunction createOnCallCallStatus(callStatus) {\n  onCallCallStatus.innerHTML = `\n        <div class='on-call-call-status__room-pic ${callRoom.hasOwnProperty(\"roomPic\") && callRoom.roomPic !== \"\" ? \"on-call-call-status__room-pic--img\" : \"on-call-call-status__room-pic--svg\"}'>\n      \n            ${svg_callDefaultRoomPicIcon}\n              <img src='${callRoom.hasOwnProperty(\"roomPic\") && callRoom.roomPic !== \"\" ? callRoom.roomPic : \"\"}'\n             alt=\"\">\n         </div>\n         \n         <div class=\"on-call-call-status__room-status\">\n         <div class=\"on-call-call-status__room-status-text\" id=\"onCallRoomStatusText\">\n         </div>\n         <div class=\"on-call-call-status__room-status-effect\">\n         </div>\n\n         </div>\n      `;\n  onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-effect\")[0].innerHTML = `<span>.</span> <span>.</span> <span>.</span>`;\n  updateOnCallCallStatus(callStatus);\n}\n\nfunction updateOnCallCallStatus(callStatus) {\n  let onCallCallStatus = document.getElementsByClassName(\"on-call-call-status\")[0];\n\n  if (onCallCallStatus) {\n    onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-text\")[0].textContent = callStatus;\n  }\n\n  if (onCallCallStatus.classList.contains(\"on-call-call-status--hide\")) onCallCallStatus.classList.remove(\"on-call-call-status--hide\");\n}\n\nfunction hideOnCallCallStatus() {\n  let onCallCallStatus = document.getElementsByClassName(\"on-call-call-status\")[0];\n  if (!onCallCallStatus.classList.contains(\"on-call-call-status--hide\")) onCallCallStatus.classList.add(\"on-call-call-status--hide\");\n}\n\nfunction changeHeightAndWidthOfOnCallUserBoxInMainView(mainViewWidth, mainViewHeight) {\n  let onCallUserBoxs = [...onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\")];\n  if (mainViewWidth === undefined) mainViewWidth = parseFloat(mainViewCss.width);\n  if (mainViewHeight === undefined) mainViewHeight = parseFloat(mainViewCss.height);\n  let noOfUsers = onCallUserBoxs.length;\n  let column = Math.ceil(Math.sqrt(noOfUsers));\n  let percent = 100 / column - 1;\n  let bestHeightPercent = mainViewWidth / mainViewHeight * (1 / bestScreenWidthRatio) * percent;\n\n  if (column <= 3) {\n    if (noOfUsers <= column * (column - 1)) {\n      onCallUserBoxs.forEach(userBox => {\n        userBox.style.width = percent + \"%\";\n        userBox.style.height = bestHeightPercent + \"%\";\n        userBox.style.maxHeight = 100 + \"%\";\n        userBox.style.maxWidth = percent + \"%\";\n      });\n    } else {\n      onCallUserBoxs.forEach(userBox => {\n        userBox.style.width = percent + \"%\";\n        userBox.style.height = bestHeightPercent + \"%\";\n        userBox.style.maxHeight = 100 + \"%\";\n        userBox.style.maxWidth = bestScreenWidth / column + \"px\";\n      });\n    }\n  } else {\n    onCallUserBoxs.forEach(userBox => {\n      userBox.style.width = percent + \"%\";\n      userBox.style.height = bestHeightPercent + \"%\";\n      userBox.style.maxHeight = 100 + \"%\";\n      userBox.style.maxWidth = bestScreenWidth / column + \"px\";\n    });\n  }\n}\n\nfunction resetHeightAndWidthOfOnCallUserBox() {\n  let onCallUserBoxs = [...document.getElementsByClassName(\"on-call-user-box\")];\n  onCallUserBoxs.forEach(userBox => {\n    userBox.style = \"\";\n  });\n}\n\nfunction onCallCameraOff() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--selected\");\n    onCallBtn.classList.remove(\"on-call-btn--unselected\");\n    onCallBtn.dataset.btnWorkingState = \"call-video-on\";\n  }\n\n  if (isCameraOn === true) {\n    isCameraOn = false;\n    changeCameraStream(false, loginUser._id.toString());\n  }\n}\n\nfunction onCallCameraOn() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--unselected\");\n    onCallBtn.classList.remove(\"on-call-btn--selected\");\n    onCallBtn.dataset.btnWorkingState = \"call-video-off\";\n  }\n\n  if (isCameraOn === false) {\n    isCameraOn = true;\n    changeCameraStream(true, loginUser._id.toString());\n  }\n}\n\nasync function changeCameraStream(isEnabled, userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    if (isScreenShareOn === false) {\n      if (isEnabled === true) {\n        let {\n          getCameraVideoTrack\n        } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../call.dev */ \"./dev-javascripts/call/call.dev.js\"));\n        let callVideoTrack = await getCameraVideoTrack();\n        let trackKind = \"video\";\n\n        if (callVideoTrack) {\n          isCameraOn = true;\n          trackKind = callVideoTrack.kind;\n          let videoTracks = myMediaStream.getVideoTracks();\n          videoTracks.forEach(track => {\n            track.stop();\n            myMediaStream.removeTrack(track);\n          });\n          myMediaStream.addTrack(callVideoTrack);\n          let peerId;\n\n          for (peerId in allMediaConnections) {\n            let otherUserConnection = allMediaConnections[peerId].peerConnection;\n            otherUserConnection.getSenders().forEach(function (sender) {\n              if (sender.track.kind === trackKind) {\n                sender.replaceTrack(callVideoTrack);\n              }\n            });\n          }\n        }\n      } else {\n        isCameraOn = false;\n        let videoTracks = myMediaStream.getVideoTracks();\n        videoTracks.forEach(track => {\n          track.stop();\n        });\n      }\n    } else {// myMediaStream.getVideoTracks()[0].isEnabled = isEnabled\n    }\n\n    let eventData = {\n      isEnabled: isEnabled,\n      callRoomId: callRoom._id,\n      userId: loginUser._id\n    };\n    socket.emit(\"call:toggle-camera-stream\", eventData);\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${userId.toString()}\"]`);\n\n  if (onCallUserBox) {\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n\n    if (isEnabled) {\n      if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n    } else {\n      if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n      if (onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.remove(\"on-call-user-box__video--camera\");\n    }\n  }\n}\n\nfunction onCallAudioOff() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-audio\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.remove(\"on-call-btn--unselected\");\n    onCallBtn.classList.add(\"on-call-btn--selected\");\n    onCallBtn.dataset.btnWorkingState = \"call-audio-on\";\n  }\n\n  if (isAudioOn === true) {\n    isAudioOn = false;\n    changeAudioStream(false, loginUser._id.toString());\n  }\n}\n\nfunction onCallAudioOn() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-audio\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.remove(\"on-call-btn--selected\");\n    onCallBtn.classList.add(\"on-call-btn--unselected\");\n    onCallBtn.dataset.btnWorkingState = \"call-audio-off\";\n  }\n\n  if (isAudioOn === false) {\n    isAudioOn = true;\n    changeAudioStream(true, loginUser._id.toString());\n  }\n}\n\nasync function changeAudioStream(isEnabled, userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    if (isEnabled === true) {\n      let {\n        getCallAudioTrack\n      } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../call.dev */ \"./dev-javascripts/call/call.dev.js\"));\n      let callAudioTrack = await getCallAudioTrack();\n      let trackKind = \"audio\";\n\n      if (callAudioTrack) {\n        trackKind = callAudioTrack.kind;\n        let audioTracks = myMediaStream.getAudioTracks();\n        audioTracks.forEach(track => {\n          track.stop();\n          myMediaStream.removeTrack(track);\n        });\n        myMediaStream.addTrack(callAudioTrack);\n        let peerId;\n\n        for (peerId in allMediaConnections) {\n          let otherUserConnection = allMediaConnections[peerId].peerConnection;\n          otherUserConnection.getSenders().forEach(function (sender) {\n            if (sender.track.kind === trackKind) {\n              sender.replaceTrack(callAudioTrack);\n            }\n          });\n        }\n      }\n    } else {\n      let audioTracks = myMediaStream.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.stop();\n      });\n    }\n\n    let eventData = {\n      isEnabled: isEnabled,\n      callRoomId: callRoom._id,\n      userId: loginUser._id\n    };\n    socket.emit(\"call:toggle-audio-stream\", eventData);\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${userId.toString()}\"]`);\n\n  if (onCallUserBox) {\n    if (isEnabled) {\n      let onCallUserBoxAudio = onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0];\n\n      while (onCallUserBoxAudio.classList.contains(\"on-call-user-box__audio--off\")) {\n        onCallUserBoxAudio.classList.remove(\"on-call-user-box__audio--off\");\n      }\n\n      onCallUserBoxAudio.classList.add(\"on-call-user-box__audio--on\");\n    } else {\n      let onCallUserBoxAudio = onCallUserBox.getElementsByClassName(\"on-call-user-box__audio\")[0];\n\n      while (onCallUserBoxAudio.classList.contains(\"on-call-user-box__audio--on\")) {\n        onCallUserBoxAudio.classList.remove(\"on-call-user-box__audio--on\");\n      }\n\n      onCallUserBoxAudio.classList.add(\"on-call-user-box__audio--off\");\n    }\n  }\n}\n\nfunction onCallSwitchCameraToScreenShare() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--selected\");\n    onCallBtn.classList.remove(\"on-call-btn--unselected\");\n    onCallBtn.dataset.btnWorkingState = \"call-share-screen-off\";\n  }\n\n  if (isScreenShareOn === false) {\n    isScreenShareOn = true;\n    switchCameraToScreenShareStream(loginUser._id.toString());\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n  if (onCallUserBox) {\n    if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n      onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n    }\n\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n    if (onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.remove(\"on-call-user-box__video--camera\");\n  }\n}\n\nasync function switchCameraToScreenShareStream(userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    let {\n      getScreenShareVideoTrack\n    } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../call.dev */ \"./dev-javascripts/call/call.dev.js\"));\n    let screenShareVideoTrack = await getScreenShareVideoTrack();\n    let trackKind = \"video\";\n\n    if (screenShareVideoTrack) {\n      isScreenShareOn = true;\n      trackKind = screenShareVideoTrack.kind;\n      let videoTracks = myMediaStream.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.stop();\n        myMediaStream.removeTrack(track);\n      });\n      myMediaStream.addTrack(screenShareVideoTrack);\n      let peerId;\n\n      for (peerId in allMediaConnections) {\n        let otherUserConnection = allMediaConnections[peerId].peerConnection;\n        otherUserConnection.getSenders().forEach(function (sender) {\n          if (sender.track.kind === trackKind) {\n            sender.replaceTrack(screenShareVideoTrack);\n          }\n        });\n      }\n\n      let eventData = {\n        isEnabled: true,\n        isCameraOn: isCameraOn,\n        callRoomId: callRoom._id,\n        userId: loginUser._id\n      };\n      socket.emit(\"call:toggle-screen-share-stream\", eventData);\n\n      screenShareVideoTrack.onended = () => {\n        isScreenShareOn = false;\n        let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n        if (cameraBtn) cameraBtn.classList.remove(\"on-call-btn--disable\");\n        let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n        if (onCallBtn) {\n          if (onCallBtn.dataset.btnWorkingState === \"call-share-screen-off\") {\n            onCallBtn.classList.add(\"on-call-btn--unselected\");\n            onCallBtn.classList.remove(\"on-call-btn--selected\");\n            onCallBtn.dataset.btnWorkingState = \"call-share-screen-on\";\n\n            if (isCameraOn) {\n              changeCameraStream(true, loginUser._id.toString());\n            } else {\n              changeCameraStream(false, loginUser._id.toString());\n            }\n          }\n        }\n\n        let eventData = {\n          isEnabled: false,\n          isCameraOn: isCameraOn,\n          callRoomId: callRoom._id,\n          userId: loginUser._id\n        };\n        socket.emit(\"call:toggle-screen-share-stream\", eventData);\n        let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n        if (onCallUserBox) {\n          if (isCameraOn) {\n            if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n              onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n            }\n          } else {\n            if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n              onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n            }\n          }\n\n          let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n          if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n        }\n      };\n\n      screenShareVideoTrack.onmute = () => {};\n\n      screenShareVideoTrack.onunmute = () => {};\n    } else {\n      isScreenShareOn = false;\n      let cameraBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-video\"]`);\n      if (cameraBtn) cameraBtn.classList.remove(\"on-call-btn--disable\");\n      let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n      if (onCallBtn) {\n        onCallBtn.classList.add(\"on-call-btn--unselected\");\n        onCallBtn.classList.remove(\"on-call-btn--selected\");\n        onCallBtn.dataset.btnWorkingState = \"call-share-screen-on\";\n      }\n\n      let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n      if (onCallUserBox) {\n        if (isCameraOn) {\n          if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n            onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n          }\n        } else {\n          if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n            onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n          }\n        }\n      }\n\n      let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n      if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n    }\n  }\n}\n\nfunction onCallSwitchScreenShareToCamera() {\n  let onCallBtn = document.querySelector(`.on-call-btn[data-btn-type=\"call-share-screen\"]`);\n\n  if (onCallBtn) {\n    onCallBtn.classList.add(\"on-call-btn--unselected\");\n    onCallBtn.classList.remove(\"on-call-btn--selected\");\n    onCallBtn.dataset.btnWorkingState = \"call-share-screen-on\";\n  }\n\n  if (isScreenShareOn === true) {\n    isScreenShareOn = false;\n    switchScreenShareToCameraStream(loginUser._id.toString());\n  }\n\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${loginUser._id.toString()}\"]`);\n\n  if (onCallUserBox) {\n    if (isCameraOn) {\n      if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n        onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      }\n    } else {\n      if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n        onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n      }\n    }\n\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n    if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n  }\n}\n\nasync function switchScreenShareToCameraStream(userId) {\n  if (loginUser._id.toString() === userId.toString()) {\n    isScreenShareOn = false;\n\n    if (isCameraOn) {\n      changeCameraStream(true, loginUser._id.toString());\n    } else {\n      changeCameraStream(false, loginUser._id.toString());\n    }\n\n    let eventData = {\n      isEnabled: false,\n      isCameraOn: isCameraOn,\n      callRoomId: callRoom._id,\n      userId: loginUser._id\n    };\n    socket.emit(\"call:toggle-screen-share-stream\", eventData);\n  }\n}\n\nfunction showOnCallMainViewUserBoxContainer() {\n  if (onCallMainViewUserBoxContainer.classList.contains(\"on-call-main-view-user-box-container--hide\")) {\n    let mainViewUserBoxs = onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\");\n    let sliderUserBoxs = onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\");\n\n    if (mainViewUserBoxs.length === 0) {\n      if (sliderUserBoxs.length > 1) {\n        onCallMainViewUserBoxContainer.appendChild(sliderUserBoxs[0]);\n      }\n    }\n\n    onCallMainViewUserBoxContainer.classList.remove(\"on-call-main-view-user-box-container--hide\");\n  }\n}\n\nfunction sendRequestToEndCall() {\n  let onCallCreatingCallAudio = document.getElementById(\"onCallCreatingCallAudio\");\n\n  if (onCallCreatingCallAudio) {\n    onCallCreatingCallAudio.pause();\n    onCallCreatingCallAudio.currentTime = 0;\n  }\n\n  let onCallEndingCallAudio = document.getElementById(\"onCallEndingCallAudio\");\n\n  if (onCallEndingCallAudio) {\n    onCallEndingCallAudio.play();\n  }\n\n  let data = {\n    callRoomId: callRoom._id\n  };\n  fetch(\"/call/left-call-room\", {\n    method: \"POST\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(response);\n  }).then(async data => {\n    if (data.isSuccess) {\n      onCallMainViewUserBoxContainer.innerHTML = \"\";\n      onCallSliderUserBoxContainer.innerHTML = \"\";\n      let videoTracks = myMediaStream.getVideoTracks();\n      videoTracks.forEach(track => track.stop());\n      let audioTrack = myMediaStream.getAudioTracks();\n      audioTrack.forEach(track => track.stop());\n      let {\n        createAfterCallSection\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n      createAfterCallSection(callRoom, data.isCallEnded);\n    } else {\n      let {\n        createMainNotification\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n      createMainNotification(data.error, \"error\");\n    }\n  }).catch(async err => {\n    console.log(err);\n    let {\n      createMainNotification\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n    createMainNotification(\"Server error, Please try again\", \"error\");\n  });\n}\n\nsocket.on(\"call:joined-new-member\", data => {\n  isNonGroupChatCallConnected = true;\n  let onCallCreatingCallAudio = document.getElementById(\"onCallCreatingCallAudio\");\n\n  if (onCallCreatingCallAudio) {\n    onCallCreatingCallAudio.pause();\n    onCallCreatingCallAudio.currentTime = 0;\n  }\n\n  let onCallJoinedNewCallRoomMemberAudio = document.getElementById(\"onCallJoinedNewCallRoomMemberAudio\");\n\n  if (onCallJoinedNewCallRoomMemberAudio) {\n    onCallJoinedNewCallRoomMemberAudio.play();\n  }\n\n  setTimeout(() => {\n    onCallJoinedNewCallRoomMemberAudio.currentTime = 0;\n  }, 2000);\n  hideOnCallCallStatus();\n  showOnCallMainViewUserBoxContainer();\n  connectToNewJoinedMember(data.userId, data.peerId, myMediaStream);\n});\nsocket.on(\"call:disconnect-call-room-member\", data => {\n  allMediaConnections[data.peerId.toString()].close();\n  delete allMediaConnections[data.peerId.toString()];\n  removeOnCallUserBox(data.userId.toString());\n});\nsocket.on(\"call:end-call-room\", async data => {\n  onCallMainViewUserBoxContainer.innerHTML = \"\";\n  onCallSliderUserBoxContainer.innerHTML = \"\";\n  let videoTracks = myMediaStream.getVideoTracks();\n  videoTracks.forEach(track => track.stop());\n  let audioTrack = myMediaStream.getAudioTracks();\n  audioTrack.forEach(track => track.stop());\n  let {\n    createAfterCallSection\n  } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n  createAfterCallSection(data.callRoom, true);\n});\nsocket.on(\"call:toggle-camera-stream\", data => {\n  changeCameraStream(data.isEnabled, data.userId);\n});\nsocket.on(\"call:toggle-audio-stream\", data => {\n  changeAudioStream(data.isEnabled, data.userId);\n});\nsocket.on(\"call:toggle-screen-share-stream\", data => {\n  let onCallUserBox = document.querySelector(`.on-call-user-box[data-user-id=\"${data.userId.toString()}\"]`);\n\n  if (onCallUserBox) {\n    let onCallUserBoxVideo = onCallUserBox.getElementsByClassName(\"on-call-user-box__video\")[0];\n\n    if (data.isEnabled) {\n      if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) {\n        onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      }\n\n      if (onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.remove(\"on-call-user-box__video--camera\");\n    } else {\n      if (data.isCameraOn) {\n        if (onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.remove(\"on-call-user-box--video-off\");\n      } else {\n        if (!onCallUserBox.classList.contains(\"on-call-user-box--video-off\")) onCallUserBox.classList.add(\"on-call-user-box--video-off\");\n      }\n\n      if (!onCallUserBoxVideo.classList.contains(\"on-call-user-box__video--camera\")) onCallUserBoxVideo.classList.add(\"on-call-user-box__video--camera\");\n    }\n  }\n});\nsocket.on(\"call:call-ringging\", async data => {\n  if (data.callRoomId === callRoom._id.toString()) {\n    updateOnCallCallStatus(\"Ringging\");\n    let onCallCreatingCallAudio = document.getElementById(\"onCallCreatingCallAudio\");\n\n    if (onCallCreatingCallAudio) {\n      onCallCreatingCallAudio.play();\n    }\n  }\n});\nsocket.on(\"call:call-cancelled\", async data => {\n  if (data.callRoomId === callRoom._id.toString()) {\n    let onCallCreatingCallAudio = document.getElementById(\"onCallCreatingCallAudio\");\n\n    if (onCallCreatingCallAudio) {\n      onCallCreatingCallAudio.pause();\n      onCallCreatingCallAudio.currentTime = 0;\n    }\n\n    let onCallEndingCallAudio = document.getElementById(\"onCallEndingCallAudio\");\n\n    if (onCallEndingCallAudio) {\n      onCallEndingCallAudio.play();\n    }\n\n    onCallCallStatus.getElementsByClassName(\"on-call-call-status__room-status-effect\")[0].classList.add(\"on-call-call-status__room-status-effect--hide\");\n    updateOnCallCallStatus(\"Call ended\");\n    onCallMainBtnContainer.classList.add(\"on-call-main-btn-container--hide\");\n    onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\");\n    onCallMainViewUserBoxContainer.innerHTML = \"\";\n    onCallSliderUserBoxContainer.innerHTML = \"\";\n    let videoTracks = myMediaStream.getVideoTracks();\n    videoTracks.forEach(track => track.stop());\n    let audioTrack = myMediaStream.getAudioTracks();\n    audioTrack.forEach(track => track.stop());\n    let {\n      createAfterCallSection\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_call_js_afterCallSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./afterCallSection.dev */ \"./dev-javascripts/call/js/afterCallSection.dev.js\"));\n    setTimeout(() => {\n      createAfterCallSection(callRoom, true);\n    }, 3000);\n  }\n}); // function switchViewToSingle() {\n//   let onCallUserBoxs = [\n//     ...onCallMainViewUserBoxContainer.getElementsByClassName(\"on-call-user-box\")\n//   ]\n//   let noOfOnCallUserBoxs = onCallUserBoxs.length\n//   if (noOfOnCallUserBoxs > 1) {\n//     // onCallUserBoxs[0].classList.add(\"on-call-user-box--main-view-info\")\n//     for (let i = 1; i < noOfOnCallUserBoxs; i++) {\n//       onCallSliderUserBoxContainer.appendChild(onCallUserBoxs[i])\n//     }\n//   } else {\n//     if (noOfOnCallUserBoxs === 1) {\n//       onCallSliderUserBoxContainer.appendChild(onCallUserBoxs[0])\n//     }\n//   }\n//   resetHeightAndWidthOfOnCallUserBox()\n//   changeHeightAndWidthOfOnCallUserBoxInMainView()\n//   if (onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")) {\n//     onCallUserBoxSlider.classList.remove(\"on-call-user-box-slider--hide\")\n//   }\n//   let onCallChangeViewBtn = document.getElementById(\"onCallChangeViewBtn\")\n//   if (onCallChangeViewBtn) {\n//     if (onCallChangeViewBtn.dataset.btnWorkingState === \"switch-to-single\") {\n//       onCallChangeViewBtn.classList.remove(\"on-call-btn--selected\")\n//       onCallChangeViewBtn.classList.add(\"on-call-btn--unselected\")\n//       onCallChangeViewBtn.dataset.btnWorkingState = \"switch-to-multiple\"\n//     }\n//   }\n// }\n// function switchViewToMultiple() {\n//   let onCallUserBoxs = [\n//     ...onCallSliderUserBoxContainer.getElementsByClassName(\"on-call-user-box\")\n//   ]\n//   for (let i = 0; i < onCallUserBoxs.length; i++) {\n//     onCallMainViewUserBoxContainer.appendChild(onCallUserBoxs[i])\n//   }\n//   changeHeightAndWidthOfOnCallUserBoxInMainView()\n//   if (\n//     !onCallUserBoxSlider.classList.contains(\"on-call-user-box-slider--hide\")\n//   ) {\n//     onCallUserBoxSlider.classList.add(\"on-call-user-box-slider--hide\")\n//   }\n//   let onCallChangeViewBtn = document.getElementById(\"onCallChangeViewBtn\")\n//   if (onCallChangeViewBtn) {\n//     if (onCallChangeViewBtn.dataset.btnWorkingState === \"switch-to-multiple\") {\n//       onCallChangeViewBtn.classList.remove(\"on-call-btn--unselected\")\n//       onCallChangeViewBtn.classList.add(\"on-call-btn--selected\")\n//       onCallChangeViewBtn.dataset.btnWorkingState = \"switch-to-single\"\n//     }\n//   }\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/call/js/onCallSection.dev.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css":
/*!**********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css ***!
  \**********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Rldi1qYXZhc2NyaXB0cy9jYWxsL2Nzcy9vbkNhbGxTZWN0aW9uLmRldi5jc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsaURBQWlELGtFQUFrRTtBQUNuSDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzPzBiMzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiXCIsXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css\n");

/***/ }),

/***/ "./dev-javascripts/call/css/onCallSection.dev.css":
/*!********************************************************!*\
  !*** ./dev-javascripts/call/css/onCallSection.dev.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./onCallSection.dev.css */ \"./node_modules/css-loader/dist/cjs.js!./dev-javascripts/call/css/onCallSection.dev.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_onCallSection_dev_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQXFHO0FBQ3JHLE1BQTJGO0FBQzNGLE1BQWtHO0FBQ2xHLE1BQXFIO0FBQ3JILE1BQThHO0FBQzlHLE1BQThHO0FBQzlHLE1BQXFIO0FBQ3JIO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7O0FBRXJDLHVCQUF1Qix1R0FBYTtBQUNwQztBQUNBLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMsa0dBQU87Ozs7QUFJK0Q7QUFDdkYsT0FBTyxpRUFBZSxrR0FBTyxJQUFJLHlHQUFjLEdBQUcseUdBQWMsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9kZXYtamF2YXNjcmlwdHMvY2FsbC9jc3Mvb25DYWxsU2VjdGlvbi5kZXYuY3NzPzIwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL29uQ2FsbFNlY3Rpb24uZGV2LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vb25DYWxsU2VjdGlvbi5kZXYuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./dev-javascripts/call/css/onCallSection.dev.css\n");

/***/ })

}]);