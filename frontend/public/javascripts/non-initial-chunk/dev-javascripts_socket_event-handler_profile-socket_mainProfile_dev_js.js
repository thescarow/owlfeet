"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_socket_event-handler_profile-socket_mainProfile_dev_js"],{

/***/ "./dev-javascripts/socket/event-handler/profile-socket/mainProfile.dev.js":
/*!********************************************************************************!*\
  !*** ./dev-javascripts/socket/event-handler/profile-socket/mainProfile.dev.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createProfileSocket\": () => (/* binding */ createProfileSocket)\n/* harmony export */ });\n///////////////////////////////////////\nconst profileUserReceivedFollowRequestCount = document.getElementById(\"profileUserReceivedFollowRequestCount\");\nconst profileUserFollowerCount = document.getElementById(\"profileUserFollowerCount\");\nconst profileUserFollowingCount = document.getElementById(\"profileUserFollowingCount\");\nfunction createProfileSocket(socket) {\n  console.log(\"inside profileSocket\");\n\n  if (isOwner && isOwner === true) {\n    console.log(\"inside owner profile socket\"); //send-follow-request\n\n    socket.on(\"add-follower\", async user => {\n      const followerUserBoxContainer = document.getElementById(\"followerUserBoxContainer\");\n\n      if (followerUserBoxContainer) {\n        let {\n          createUserBox\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_user_js_createUserBox_dev_js\"), __webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js-_81c91\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../user/js/createUserBox.dev.js */ \"./dev-javascripts/user/js/createUserBox.dev.js\"));\n        createUserBox(followerUserBoxContainer, \"follower\", user);\n        console.log(followerUserBoxContainer);\n      }\n\n      if (profileUserFollowerCount) {\n        profileUserFollowerCount.textContent = (parseInt(profileUserFollowerCount.textContent) + 1).toString();\n      }\n    }); //unfollow\n\n    socket.on(\"remove-follower\", userId => {\n      const followerUserBoxContainer = document.getElementById(\"followerUserBoxContainer\");\n\n      if (followerUserBoxContainer) {\n        let userBox = followerUserBoxContainer.querySelector(`.user-box[data-user-id=\"${userId}\"]`);\n\n        if (userBox) {\n          userBox.parentNode.removeChild(userBox);\n        }\n      }\n\n      if (profileUserFollowerCount) {\n        profileUserFollowerCount.textContent = (parseInt(profileUserFollowerCount.textContent) - 1).toString();\n      }\n    }); //accept-follow-request\n\n    socket.on(\"add-following\", async user => {\n      const followingUserBoxContainer = document.getElementById(\"followingUserBoxContainer\");\n\n      if (followingUserBoxContainer) {\n        let {\n          createUserBox\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_user_js_createUserBox_dev_js\"), __webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js-_81c91\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../user/js/createUserBox.dev.js */ \"./dev-javascripts/user/js/createUserBox.dev.js\"));\n        createUserBox(followingUserBoxContainer, \"following\", user);\n      }\n\n      if (profileUserFollowingCount) {\n        profileUserFollowingCount.textContent = (parseInt(profileUserFollowingCount.textContent) + 1).toString();\n      }\n    }); //remove-follower\n\n    socket.on(\"remove-following\", userId => {\n      const followingUserBoxContainer = document.getElementById(\"followingUserBoxContainer\");\n\n      if (followingUserBoxContainer) {\n        let userBox = followingUserBoxContainer.querySelector(`.user-box[data-user-id=\"${userId}\"]`);\n\n        if (userBox) {\n          userBox.parentNode.removeChild(userBox);\n        }\n      }\n\n      if (profileUserFollowingCount) {\n        profileUserFollowingCount.textContent = (parseInt(profileUserFollowingCount.textContent) - 1).toString();\n      }\n    }); ///cancel/delete-received-follow-request\n    //accept-received-follow-request\n\n    socket.on(\"remove-sent-follow-request\", userId => {\n      const sentFollowRequestUserBoxContainer = document.getElementById(\"sentFollowRequestUserBoxContainer\");\n\n      if (sentFollowRequestUserBoxContainer) {\n        let userBox = sentFollowRequestUserBoxContainer.querySelector(`.user-box[data-user-id=\"${userId}\"]`);\n\n        if (userBox) {\n          userBox.parentNode.removeChild(userBox);\n        }\n      }\n\n      const followingUserBoxContainer = document.getElementById(\"followingUserBoxContainer\");\n\n      if (followingUserBoxContainer) {\n        let userBoxs = [...followingUserBoxContainer.querySelectorAll(`.user-box[data-user-id=\"${userId}\"]`)];\n        userBoxs.forEach(userBox => {\n          if (userBox.querySelector(\".user-box__btn--cancel-sent-follow-request\")) {\n            userBox.parentNode.removeChild(userBox);\n          }\n        });\n      }\n    }); //send-follow-request\n\n    socket.on(\"add-received-follow-request\", async user => {\n      const receivedFollowRequestUserBoxContainer = document.getElementById(\"receivedFollowRequestUserBoxContainer\");\n\n      if (receivedFollowRequestUserBoxContainer) {\n        let {\n          createUserBox\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_user_js_createUserBox_dev_js\"), __webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js-_81c91\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../user/js/createUserBox.dev.js */ \"./dev-javascripts/user/js/createUserBox.dev.js\"));\n        createUserBox(receivedFollowRequestUserBoxContainer, \"received-follow-request\", user);\n      }\n\n      if (profileUserReceivedFollowRequestCount) {\n        profileUserReceivedFollowRequestCount.textContent = (parseInt(profileUserReceivedFollowRequestCount.textContent) + 1).toString();\n      }\n    }); //cancel-sent-follow-request\n\n    socket.on(\"remove-received-follow-request\", userId => {\n      if (receivedFollowRequestUserBoxContainer) {\n        let userBox = receivedFollowRequestUserBoxContainer.querySelector(`.user-box[data-user-id=\"${userId}\"]`);\n\n        if (userBox) {\n          userBox.parentNode.removeChild(userBox);\n        }\n      }\n\n      if (profileUserReceivedFollowRequestCount) {\n        profileUserReceivedFollowRequestCount.textContent = (parseInt(profileUserReceivedFollowRequestCount.textContent) - 1).toString();\n      }\n    });\n  }\n\n  socket.on(\"change-user-follow-status\", (userId, userFollowStatus) => {\n    let profileFollowActionBtn = document.getElementById(\"profileFollowActionBtn\");\n    console.log(userId, userFollowStatus);\n\n    if (profileFollowActionBtn) {\n      if (profileUser._id == userId) {\n        profileFollowActionBtn.setAttribute(\"data-user-follow-status\", userFollowStatus);\n\n        if (userFollowStatus === \"send-follow-request\") {\n          profileFollowActionBtn.textContent = \"FOLLOW\";\n          profileFollowActionBtn.classList.remove(\"profile-btn--cancel-sent-follow-request\", \"profile-btn--unfollow\");\n          profileFollowActionBtn.classList.add(\"profile-btn--follow\");\n        }\n\n        if (userFollowStatus === \"unfollow\") {\n          profileFollowActionBtn.textContent = \"UNFOLLOW\";\n          profileFollowActionBtn.classList.remove(\"profile-btn--follow\", \"profile-btn--cancel-sent-follow-request\");\n          profileFollowActionBtn.classList.add(\"profile-btn--unfollow\");\n        }\n\n        if (userFollowStatus === \"cancel-sent-follow-request\") {\n          profileFollowActionBtn.textContent = \"CANCEL REQUEST\";\n          profileFollowActionBtn.classList.remove(\"profile-btn--follow\", \"profile-btn--unfollow\");\n          profileFollowActionBtn.classList.add(\"profile-btn--cancel-sent-follow-request\");\n        }\n      }\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/socket/event-handler/profile-socket/mainProfile.dev.js\n");

/***/ })

}]);