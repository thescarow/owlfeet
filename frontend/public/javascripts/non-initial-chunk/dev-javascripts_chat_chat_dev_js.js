"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_chat_chat_dev_js"],{

/***/ "./dev-javascripts/chat/chat.dev.js":
/*!******************************************!*\
  !*** ./dev-javascripts/chat/chat.dev.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"adjustMessageContainerBottomPadding\": () => (/* binding */ adjustMessageContainerBottomPadding),\n/* harmony export */   \"openActiveChatInputBox\": () => (/* binding */ openActiveChatInputBox),\n/* harmony export */   \"openActivechatInputAttachmentBox\": () => (/* binding */ openActivechatInputAttachmentBox)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\nconst allChatSection = document.getElementById(\"allChatSection\");\nconst emptyChatSection = document.getElementById(\"emptyChatSection\");\nconst activeChatSection = document.getElementById(\"activeChatSection\");\nconst activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\nlet activeChatInputTextContent = document.getElementById(\"activeChatInputTextContent\");\nlet allChatChatBoxContainer = document.getElementById(\"allChatChatBoxContainer\");\nconst activeChatInputContainer = document.getElementById(\"activeChatInputContainer\");\nconst activeChatInputAttachmentBox = document.getElementById(\"activeChatInputAttachmentBox\");\nlet isUserTyping = false;\nlet lastActiveChatId = activeChatSection.dataset.chatId.toString();\n\n\n(async function () {\n  if (!IS_INIT_CHAT_MODULE) {\n    async function checkChatState() {\n      // console.log(location)\n      // console.log(history)\n      if (location.hash) {\n        let chatId = location.hash.replace(\"#\", \"\");\n        let {\n          fetchActiveChat\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_fetchActiveChat_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/fetchActiveChat.dev */ \"./dev-javascripts/chat/js/fetchActiveChat.dev.js\"));\n        fetchActiveChat(chatId);\n      } else {\n        // history.replaceState({}, \"\", \"\")\n        document.title = \"Chats\";\n        allChatSection.classList.remove(\"all-chat-section--open-active-chat\");\n        activeChatSection.classList.add(\"active-chat-section--hide\");\n        if (emptyChatSection.classList.contains(\"empty-chat-section--hide\")) emptyChatSection.classList.remove(\"empty-chat-section--hide\");\n      }\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", checkChatState);\n    window.addEventListener(\"popstate\", checkChatState); //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active chat message container\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active chat input container\n\n    activeChatInputTextContent.addEventListener(\"input\", () => {\n      if (activeChatInputTextContent.value === \"\") {\n        activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n      } else {\n        if (!activeChatInputAttachmentBox.classList.contains(\"active-chat-input-attachment-box--hide\")) {\n          activeChatInputAttachmentBox.classList.add(\"active-chat-input-attachment-box--hide\");\n        }\n      }\n\n      activeChatInputTextContent.style.height = \"auto\";\n      activeChatInputTextContent.style.height = activeChatInputTextContent.scrollHeight + \"px\";\n      adjustMessageContainerBottomPadding();\n    }, false); ///////////////////////////////////////////////////\n\n    const {\n      default: insertTextAtCursor\n    } = await __webpack_require__.e(/*! import() */ \"node_modules_insert-text-at-cursor_dist_index_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! insert-text-at-cursor */ \"./node_modules/insert-text-at-cursor/dist/index.esm.js\"));\n    const {\n      Picker\n    } = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_emoji-mart_dist_module_js\").then(__webpack_require__.bind(__webpack_require__, /*! emoji-mart */ \"./node_modules/emoji-mart/dist/module.js\"));\n\n    function getEmojiAndAddToInput(emoji) {\n      insertTextAtCursor(activeChatInputTextContent, emoji.native);\n    }\n\n    const activeChatInputEmojiBtn = document.getElementById(\"activeChatInputEmojiBtn\");\n    const activeChatEmojiContainer = document.getElementById(\"activeChatEmojiContainer\");\n    let emojiPickerOptions = {\n      parent: activeChatEmojiContainer,\n      data: async () => {\n        const data = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_emoji-mart_data_sets_14_native_json\").then(__webpack_require__.t.bind(__webpack_require__, /*! @emoji-mart/data */ \"./node_modules/@emoji-mart/data/sets/14/native.json\", 19));\n        return data;\n      },\n      onEmojiSelect: getEmojiAndAddToInput,\n      // onClickOutside: () => {\n      //   console.log(\"hello\")\n      // },\n      autoFocus: false,\n      emojiButtonColors: [\"rgba(155, 223, 88, 0.7)\", \"rgba(155, 40, 88, 0.7)\", \"rgba(40, 223, 88, 0.7)\", \"rgba(155, 223, 88, 0.7)\", \"rgba(40, 223, 223, 0.7)\", \"rgba(20, 150, 150, 0.7)\", \"rgba(150, 150, 20, 0.7)\", \"rgba(150, 20, 150, 0.7)\"],\n      emojiButtonSize: 40,\n      // emojiSize: 25,\n      emojiVersion: 14,\n      icons: \"auto\",\n      maxFrequentRows: 2,\n      navPosition: \"bottom\",\n      previewPosition: \"none\",\n      set: \"native\",\n      dynamicWidth: true\n    };\n    let emojiPicker = new Picker(emojiPickerOptions);\n    activeChatInputEmojiBtn.addEventListener(\"click\", () => {\n      activeChatEmojiContainer.classList.toggle(\"active-chat-emoji-container--hide\");\n    }); ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // ///////////////////////////////////////////////////////////// /////////////////////////////////////////////////////\n    // const { checkTimeAndCreateNewMessage } = await import(\"./js/message.dev\")\n    // const { updateAllChatSection } = await import(\n    //   \"./js/updateAllChatSection.dev\"\n    // )\n\n    const {\n      default: Uppy\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/core */ \"./node_modules/@uppy/core/lib/index.js\", 23));\n    const {\n      default: Dashboard\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/dashboard */ \"./node_modules/@uppy/dashboard/lib/index.js\", 23));\n    const {\n      default: Webcam\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/webcam */ \"./node_modules/@uppy/webcam/lib/index.js\", 23));\n    const {\n      default: ImageEditor\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/image-editor */ \"./node_modules/@uppy/image-editor/lib/index.js\", 23));\n    const {\n      default: Audio\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_audio_lib_index_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/audio */ \"./node_modules/@uppy/audio/lib/index.js\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_core_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de2\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/core/dist/style.css */ \"./node_modules/@uppy/core/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_dashboard_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-784fbd\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/dashboard/dist/style.css */ \"./node_modules/@uppy/dashboard/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_webcam_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_getUrl_js-no-6b1333\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/webcam/dist/style.css */ \"./node_modules/@uppy/webcam/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_image-editor_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_getUrl_js-no-f4d24e\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/image-editor/dist/style.css */ \"./node_modules/@uppy/image-editor/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_audio_dist_style_css\"), __webpack_require__.e(\"data_image_svg_xml_charset_US-ASCII_3Csvg_20xmlns_3D_22http_3A_2F_2Fwww_w3_org_2F2000_2Fsvg_2-cd289e\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/audio/dist/style.css */ \"./node_modules/@uppy/audio/dist/style.css\"));\n    const {\n      default: AwsS3Multipart\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_aws-s3-multipart_lib_index_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/aws-s3-multipart */ \"./node_modules/@uppy/aws-s3-multipart/lib/index.js\"));\n    const uppy = new Uppy({\n      id: \"chatMedia\",\n      autoProceed: false,\n      allowMultipleUploadBatches: true,\n      debug: false,\n      onBeforeFileAdded: (currentFile, files) => {\n        console.log(currentFile);\n\n        if (!currentFile.type) {\n          uppy.log(`Skipping file because it has no type`);\n          uppy.info(`Skipping file because it has no type`, \"error\", 500);\n          return false;\n        } else {\n          currentFile.name = \"\";\n          return currentFile;\n        }\n      },\n      onBeforeUpload: files => {// const updatedFiles = {}\n        // Object.keys(files).forEach(fileID => {\n        //   updatedFiles[fileID] = {\n        //     ...files[fileID],\n        //     meta: {\n        //       ...files[fileID].meta,\n        //       fileType: files[fileID].type\n        //     }\n        //   }\n        // })\n        // console.log(updatedFiles)\n        // return updatedFiles\n      },\n      restrictions: {\n        maxFileSize: 1024 * 1024 * 100,\n        minFileSize: null,\n        maxTotalFileSize: 1024 * 1024 * 100 * 10,\n        maxNumberOfFiles: 10,\n        minNumberOfFiles: 1,\n        allowedFileTypes: [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/svg+xml\", \"image/x-png\", \"audio/mpeg\", \"audio/wav\", \"audio/x-wav\", \"audio/ogg\", \"audio/webm\", // \"audio/*\",\n        \"video/mp4\", \"video/webm\", \"video/ogg\", \"video/quicktime\", \"video/x-matroska\"]\n      },\n      meta: {\n        mediaType: \"chat-media\"\n      },\n      infoTimeout: 5000\n    }).use(Dashboard, {\n      trigger: \"#activeChatInputAttachmentFileBtn\",\n      target: \"body\",\n      inline: false,\n      plugins: [\"Webcam\", \"ImageEditor\", \"Audio\"],\n      thumbnailWidth: 300,\n      // closeAfterFinish: false,\n      showRemoveButtonAfterComplete: false,\n      disablePageScrollWhenModalOpen: true,\n      closeModalOnClickOutside: true,\n      theme: \"light\",\n      locale: {\n        strings: {}\n      },\n      note: \"Images, Audios and videos only, up to 10 files, 1 file up to 100 MB\",\n      proudlyDisplayPoweredByUppy: false\n    }).use(Webcam, {\n      target: Dashboard,\n      title: \"Camera\",\n      mirror: true,\n      modes: [\"video-audio\", \"video-only\", \"picture\"],\n      preferredVideoMimeType: \"video/mp4\",\n      showRecordingLength: true\n    }).use(ImageEditor, {\n      target: Dashboard,\n      quality: 0.8\n    }).use(Audio, {\n      id: \"Audio\",\n      target: Dashboard,\n      showAudioSourceDropdown: false\n    }).use(AwsS3Multipart, {\n      limit: 4,\n      companionUrl: `${location.origin}/companion`\n    }); // uppy.on(\"complete\", result => {\n    //   console.log(\n    //     \"Upload complete! We’ve uploaded these files:\",\n    //     result.successful\n    //   )\n    // })\n\n    uppy.on(\"upload-success\", (file, response) => {\n      console.log(\"uppy file:\", file);\n      let userMessage = {};\n      userMessage.chat = activeChatSection.dataset.chatId;\n      userMessage.hasMediaContent = true;\n      userMessage.mediaContentType = file.type.split(\"/\")[0];\n      userMessage.mediaContentMimeType = file.type;\n      userMessage.mediaContentPath = file.s3Multipart.key;\n\n      if (activeChatInputContainer.dataset.repliedTo !== \"\") {\n        userMessage.isRepliedMessage = true;\n        userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n      } else {\n        userMessage.isRepliedMessage = false;\n      }\n\n      if (userMessage.mediaContentType === \"image\") {\n        userMessage.mediaContentImagePreview = file.preview;\n      }\n\n      sendAndCreateClientUserMessage(userMessage, \"media-content\"); // fetch(\"/message\", {\n      //   method: \"POST\", // or 'PUT'\n      //   headers: {\n      //     \"Content-Type\": \"application/json\"\n      //   },\n      //   body: JSON.stringify(userMessage)\n      // })\n      //   .then(response => {\n      //     if (response.ok) {\n      //       return response.json()\n      //     }\n      //     return Promise.reject(response)\n      //   })\n      //   .then(async data => {\n      //     if (data.isSuccess) {\n      //       checkTimeAndCreateNewMessage(data.message, true)\n      //       closeReplyMessageBox()\n      //       updateAllChatSection(data.message)\n      //     } else {\n      //       let { createMainNotification } = await import(\n      //         \"../common/mainNotification.dev\"\n      //       )\n      //       createMainNotification(data.error, \"error\")\n      //     }\n      //   })\n      //   .catch(async err => {\n      //     console.log(err)\n      //     let { createMainNotification } = await import(\n      //       \"../common/mainNotification.dev\"\n      //     )\n      //     createMainNotification(\n      //       \"Server Error In Sending Message, Please Try Again\",\n      //       \"error\"\n      //     )\n      //   })\n    }); // active chat input youtube send btn\n\n    const activeChatInputAttachmentYoutubeContentSendBtn = document.getElementById(\"activeChatInputAttachmentYoutubeContentSendBtn\");\n    const activeChatInputAttachmentYoutubeContent = document.getElementById(\"activeChatInputAttachmentYoutubeContent\");\n    activeChatInputAttachmentYoutubeContentSendBtn.addEventListener(\"click\", () => {\n      let userMessage = {};\n\n      if (activeChatInputAttachmentYoutubeContent.value !== \"\") {\n        userMessage.chat = activeChatSection.dataset.chatId;\n        userMessage.hasMediaContent = true;\n        userMessage.mediaContentType = \"youtube\";\n        userMessage.mediaContentMimeType = \"video/mp4\";\n        userMessage.mediaContentPath = activeChatInputAttachmentYoutubeContent.value;\n\n        if (activeChatInputContainer.dataset.repliedTo !== \"\") {\n          userMessage.isRepliedMessage = true;\n          userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n        } else {\n          userMessage.isRepliedMessage = false;\n        }\n\n        activeChatInputAttachmentYoutubeContent.value = \"\"; // createUserMessageSocket(userMessage)\n\n        sendAndCreateClientUserMessage(userMessage, \"youtube\"); // fetch(\"/message\", {\n        //   method: \"POST\", // or 'PUT'\n        //   headers: {\n        //     \"Content-Type\": \"application/json\"\n        //   },\n        //   body: JSON.stringify(userMessage)\n        // })\n        //   .then(response => {\n        //     if (response.ok) {\n        //       return response.json()\n        //     }\n        //     return Promise.reject(response)\n        //   })\n        //   .then(async data => {\n        //     if (data.isSuccess) {\n        //       checkTimeAndCreateNewMessage(data.message, true)\n        //       closeReplyMessageBox()\n        //       document\n        //         .getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\")\n        //         .classList.add(\"input-attachment-btn-box__input-box--hide\")\n        //       updateAllChatSection(data.message)\n        //     } else {\n        //       let { createMainNotification } = await import(\n        //         \"../common/mainNotification.dev\"\n        //       )\n        //       createMainNotification(data.error, \"error\")\n        //     }\n        //   })\n        //   .catch(async err => {\n        //     console.log(err)\n        //     let { createMainNotification } = await import(\n        //       \"../common/mainNotification.dev\"\n        //     )\n        //     createMainNotification(\n        //       \"Server Error In Sending Message, Please Try Again\",\n        //       \"error\"\n        //     )\n        //   })\n      }\n    }); /////////////////////////////////////////////////////////////\n    // active chat input send btn\n\n    const activeChatInputSendBtn = document.getElementById(\"activeChatInputSendBtn\");\n    if (activeChatInputSendBtn) activeChatInputSendBtn.addEventListener(\"click\", async () => {\n      sendTextMessage();\n    });\n    activeChatInputTextContent.addEventListener(\"keydown\", async event => {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        // Prevent the default behavior of the Enter key\n        event.preventDefault();\n        sendTextMessage();\n      } else if (event.key === \"Enter\" && event.shiftKey) {\n        // Simulate the press of the enter key\n        var enterKeyEvent = new KeyboardEvent(\"keydown\", {\n          key: \"Enter\",\n          keyCode: 13,\n          code: \"Enter\",\n          which: 13,\n          keyCodeVal: 13,\n          bubbles: true\n        });\n        this.dispatchEvent(enterKeyEvent); // // Insert a new line in the input field\n        // const inputText = activeChatInputTextContent.value\n        // const selectionStart = activeChatInputTextContent.selectionStart\n        // const selectionEnd = activeChatInputTextContent.selectionEnd\n        // // Insert a new line at the current cursor position\n        // const newText =\n        //   inputText.substring(0, selectionStart) +\n        //   \"\\n\" +\n        //   inputText.substring(selectionEnd)\n        // // Update the input field value and cursor position\n        // activeChatInputTextContent.value = newText\n        // activeChatInputTextContent.selectionStart = selectionStart + 1\n        // activeChatInputTextContent.selectionEnd = selectionStart + 1\n      }\n    });\n\n    async function sendTextMessage() {\n      let userMessage = {};\n\n      if (activeChatInputTextContent.value.trim() !== \"\" && activeChatSection.dataset.chatId !== \"\") {\n        userMessage.chat = activeChatSection.dataset.chatId;\n        userMessage.hasMediaContent = false;\n        userMessage.textContent = activeChatInputTextContent.value.trim();\n\n        if (activeChatInputContainer.dataset.repliedTo !== \"\") {\n          userMessage.isRepliedMessage = true;\n          userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n        } else {\n          userMessage.isRepliedMessage = false;\n        }\n\n        activeChatInputTextContent.value = \"\";\n\n        if (activeChatSection.dataset.chatId !== \"\") {\n          let {\n            sendChatMessageStopTypingSocket\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n          sendChatMessageStopTypingSocket(activeChatSection.dataset.chatId);\n          isUserTyping = false;\n        }\n\n        sendAndCreateClientUserMessage(userMessage, \"text\");\n      }\n    } ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active-chat-input-attachment-box\n\n\n    const activeChatInputAttachmentBoxBtn = document.getElementById(\"activeChatInputAttachmentBoxBtn\");\n    activeChatInputAttachmentBoxBtn.addEventListener(\"click\", () => {\n      if (activeChatInputAttachmentBoxBtn.classList.contains(\"active-chat-input-attachment-box-btn--selected\")) {\n        openActiveChatInputBox();\n      } else {\n        openActivechatInputAttachmentBox();\n      }\n    });\n    const activeChatInputAttachmentYoutubeBtn = document.getElementById(\"activeChatInputAttachmentYoutubeBtn\");\n    const activeChatInputAttachmentYoutubeBtnInputBox = document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\");\n    activeChatInputAttachmentYoutubeBtn.addEventListener(\"click\", () => {\n      activeChatInputAttachmentYoutubeBtnInputBox.classList.toggle(\"input-attachment-btn-box__input-box--hide\");\n    });\n    initialiseEventForChatModule();\n    IS_INIT_CHAT_MODULE = true;\n  }\n})();\n\nasync function sendAndCreateClientUserMessage(userMessage, type) {\n  let {\n    sendCreateUserMessageSocket\n  } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_message-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/message-socket */ \"./dev-javascripts/socket/event-emitter/message-socket/index.js\"));\n  userMessage.clientMessageId = (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n  let {\n    checkTimeAndCreateNewClientUserMessage\n  } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n  checkTimeAndCreateNewClientUserMessage(userMessage, true);\n  let {\n    closeReplyMessageBox\n  } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\"));\n  closeReplyMessageBox();\n\n  if (type === \"media-content\") {} else if (type === \"youtube\") {\n    document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\").classList.add(\"input-attachment-btn-box__input-box--hide\");\n  } else if (type === \"text\") {\n    activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n    activeChatInputTextContent.style.height = \"auto\";\n    activeChatInputTextContent.style.height = activeChatInputTextContent.scrollHeight + \"px\";\n\n    if (parseInt(activeChatInputTextContent.style.height.slice(0, -2)) <= 40) {\n      activeChatMessageContainer.style.paddingBottom = \"60px\";\n    } else {\n      activeChatMessageContainer.style.paddingBottom = activeChatInputTextContent.style.height;\n    }\n\n    activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight;\n  }\n\n  sendCreateUserMessageSocket(userMessage);\n}\n\nfunction openActivechatInputAttachmentBox() {\n  document.getElementById(\"activeChatInputAttachmentBoxBtn\").classList.add(\"active-chat-input-attachment-box-btn--selected\");\n  const activeChatInputAttachmentBox = document.getElementById(\"activeChatInputAttachmentBox\");\n  activeChatInputAttachmentBox.classList.add(\"active-chat-input-attachment-box--selected\");\n  activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n  document.getElementById(\"activeChatInputAttachmentBtnContainer\").classList.remove(\"input-attachment-btn-container--hide\");\n  document.getElementById(\"activeChatInputBox\").classList.add(\"active-chat-input-box--hide\");\n  document.getElementById(\"activeChatInputSendBox\").classList.add(\"active-chat-input-send-box--hide\");\n  document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\").classList.add(\"input-attachment-btn-box__input-box--hide\");\n  adjustMessageContainerBottomPadding();\n}\nfunction openActiveChatInputBox() {\n  document.getElementById(\"activeChatInputAttachmentBoxBtn\").classList.remove(\"active-chat-input-attachment-box-btn--selected\");\n  document.getElementById(\"activeChatInputAttachmentBox\").classList.remove(\"active-chat-input-attachment-box--selected\");\n  document.getElementById(\"activeChatInputAttachmentBtnContainer\").classList.add(\"input-attachment-btn-container--hide\");\n  document.getElementById(\"activeChatInputBox\").classList.remove(\"active-chat-input-box--hide\");\n  document.getElementById(\"activeChatInputSendBox\").classList.remove(\"active-chat-input-send-box--hide\");\n  adjustMessageContainerBottomPadding();\n}\nfunction adjustMessageContainerBottomPadding() {\n  activeChatMessageContainer.style.paddingBottom = activeChatInputContainer.clientHeight + 5 + \"px\";\n  activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight;\n}\n\nfunction initialiseEventForChatModule() {\n  // initialize event to active chat\n  let activeChatInnerModal = document.getElementById(\"activeChatInnerModal\");\n  let activeChatInnerModalCloseBtn = document.getElementById(\"activeChatInnerModalCloseBtn\");\n  activeChatInnerModalCloseBtn.addEventListener(\"click\", () => {\n    if (!activeChatInnerModal.classList.contains(\"hide\")) activeChatInnerModal.classList.add(\"hide\");\n  }); // active chat to all chat btn\n\n  const ActiveChatToAllChatBtn = document.getElementById(\"ActiveChatToAllChatBtn\");\n  ActiveChatToAllChatBtn.addEventListener(\"click\", async () => {\n    location.hash = \"\";\n\n    if (activeChatSection.dataset.chatId !== \"\") {\n      let {\n        sendChatMessageStopTypingSocket\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n      sendChatMessageStopTypingSocket(activeChatSection.dataset.chatId);\n      isUserTyping = false;\n    }\n  }); //active chat header pic and active chat header name\n\n  let activeChatHeaderPic = document.getElementById(\"activeChatHeaderPic\");\n  activeChatHeaderPic.addEventListener(\"click\", async () => {\n    let activeChatId = activeChatSection.dataset.chatId;\n\n    if (activeChatId != \"\") {\n      let {\n        createActiveChatInfoModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de3\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createActiveChatInfoModal.dev.js */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n      createActiveChatInfoModal(activeChatId);\n    }\n  });\n  let activeChatHeaderName = document.getElementById(\"activeChatHeaderName\");\n  activeChatHeaderName.addEventListener(\"click\", async () => {\n    let activeChatId = activeChatSection.dataset.chatId;\n\n    if (activeChatId != \"\") {\n      let {\n        createActiveChatInfoModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de3\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createActiveChatInfoModal.dev.js */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n      createActiveChatInfoModal(activeChatId);\n    }\n  });\n  let activeChatCallBtn = document.getElementById(\"activeChatCallBtn\");\n\n  if (activeChatCallBtn) {\n    activeChatCallBtn.addEventListener(\"click\", async () => {\n      let activeChatId = activeChatSection.dataset.chatId;\n\n      if (activeChatId.toString() !== \"\") {\n        openNewTab(`/call/?chat=${activeChatId}`);\n      }\n    });\n  }\n\n  let activeChatCallRoomBox = document.getElementById(\"activeChatCallRoomBox\");\n\n  if (activeChatCallRoomBox) {\n    activeChatCallRoomBox.addEventListener(\"click\", async () => {\n      let callRoomId = activeChatCallRoomBox.dataset.callRoomId;\n\n      if (callRoomId.toString() !== \"\") {\n        openNewTab(`/call/?room=${callRoomId}`);\n      }\n    });\n  } ////////////////////\n  // create new group chat btn\n  // group chat form Modal and assign event to btn\n\n\n  const createNewGroupChatBtn = document.getElementById(\"createNewGroupChatBtn\");\n  createNewGroupChatBtn.addEventListener(\"click\", async () => {\n    let {\n      createGroupChatFormModal\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_aws-s3-multipart_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_dist_style_css\"), __webpack_require__.e(\"dev-javascripts_chat_js_createGroupChatFormModal_dev_js-data_image_png_base64_iVBORw0KGgoAAAA-4573f1\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de4\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createGroupChatFormModal.dev */ \"./dev-javascripts/chat/js/createGroupChatFormModal.dev.js\"));\n    createGroupChatFormModal();\n  });\n  document.getElementById(\"activeChatInputReplyBoxCloseBtn\").addEventListener(\"click\", async () => {\n    let {\n      closeReplyMessageBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\"));\n    closeReplyMessageBox();\n  }); //send chat:message-typing event\n\n  activeChatInputTextContent.addEventListener(\"input\", async e => {\n    if (activeChatSection.dataset.chatId !== \"\") {\n      if (lastActiveChatId !== \"\" && lastActiveChatId !== activeChatSection.dataset.chatId) {\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(lastActiveChatId);\n        isUserTyping = false;\n        lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      }\n\n      lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      let chatId = activeChatSection.dataset.chatId.toString();\n      const inputValue = activeChatInputTextContent.value.trim();\n\n      if (inputValue && !isUserTyping) {\n        isUserTyping = true;\n        let {\n          sendChatMessageStartTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStartTypingSocket(chatId);\n      } else if (!inputValue && isUserTyping) {\n        isUserTyping = false;\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(chatId);\n      }\n    }\n  });\n  allChatChatBoxContainer.addEventListener(\"click\", async e => {\n    let chatBox = e.target.closest(`.chat-box`);\n\n    if (chatBox && allChatChatBoxContainer.contains(chatBox)) {\n      let chatId = chatBox.dataset.chatId;\n\n      if (chatId) {\n        let {\n          fetchActiveChat\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_fetchActiveChat_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/fetchActiveChat.dev */ \"./dev-javascripts/chat/js/fetchActiveChat.dev.js\"));\n        fetchActiveChat(chatId);\n      }\n    } else {\n      return;\n    }\n  });\n  let activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\n  activeChatMessageContainer.addEventListener(\"click\", async e => {\n    console.log(\"activeChatMessageContainer click\");\n    let userMessageBox = e.target.closest(`.active-chat-user-message-box`);\n    let userMessageBoxBtn = e.target.closest(`.active-chat-user-message-box__btn[data-message-box-btn =\"user\"]`);\n    let userMessageContentBox = e.target.closest(`.active-chat-user-message-box__content-box`);\n\n    if (userMessageBoxBtn && activeChatMessageContainer.contains(userMessageBoxBtn)) {\n      userMessageBox.classList.add(\"active-chat-user-message-box--selected\");\n      let {\n        createUserMessageOptionModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_userMessageOptionModal_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/userMessageOptionModal.dev */ \"./dev-javascripts/chat/js/userMessageOptionModal.dev.js\"));\n      createUserMessageOptionModal(userMessageBox);\n    } else if (userMessageContentBox && activeChatMessageContainer.contains(userMessageContentBox)) {\n      if (userMessageBox.classList.contains(\"active-chat-user-message-box--replied-message\")) {\n        let repliedMessageId = userMessageBox.dataset.repliedMessageId;\n        let repliedUserMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${repliedMessageId}\"]`);\n\n        if (repliedUserMessageBox) {\n          repliedUserMessageBox.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"nearest\"\n          });\n          repliedUserMessageBox.classList.add(\"active-chat-user-message-box--highlight\");\n          setTimeout(function () {\n            repliedUserMessageBox.classList.remove(\"active-chat-user-message-box--highlight\");\n          }, 1000);\n        }\n      }\n    } else {\n      return;\n    }\n  });\n  activeChatMessageContainer.addEventListener(\"dblclick\", async e => {\n    let userMessageBox = e.target.closest(`.active-chat-user-message-box`);\n\n    if (userMessageBox && activeChatMessageContainer.contains(userMessageBox)) {\n      let messageId = userMessageBox.dataset.messageId;\n      let {\n        openReplyMessageBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev.js */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\"));\n      openReplyMessageBox(messageId);\n    } else {\n      return;\n    }\n  });\n  window.addEventListener(\"click\", e => {\n    if (e.target === activeChatInnerModal) {\n      if (!activeChatInnerModal.classList.contains(\"hide\")) activeChatInnerModal.classList.add(\"hide\");\n    }\n  });\n}\n\nfunction openNewTab(url) {\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", url);\n  link.setAttribute(\"target\", \"_blank\");\n  link.setAttribute(\"rel\", \"noopener noreferrer\"); // simulate a click on the link to open the new tab\n\n  link.click();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/chat/chat.dev.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/native.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/native.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  randomUUID\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25hdGl2ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxpRUFBZTtBQUNmO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9uYXRpdmUuanM/MTkzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByYW5kb21VVUlEID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLnJhbmRvbVVVSUQgJiYgY3J5cHRvLnJhbmRvbVVVSUQuYmluZChjcnlwdG8pO1xuZXhwb3J0IGRlZmF1bHQge1xuICByYW5kb21VVUlEXG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/native.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxVQUFVLEdBQUcseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzPzQwZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/regex.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanM/ZDhmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbmxldCBnZXRSYW5kb21WYWx1ZXM7XG5jb25zdCBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJuZygpIHtcbiAgLy8gbGF6eSBsb2FkIHNvIHRoYXQgZW52aXJvbm1lbnRzIHRoYXQgbmVlZCB0byBwb2x5ZmlsbCBoYXZlIGEgY2hhbmNlIHRvIGRvIHNvXG4gIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgLy8gZ2V0UmFuZG9tVmFsdWVzIG5lZWRzIHRvIGJlIGludm9rZWQgaW4gYSBjb250ZXh0IHdoZXJlIFwidGhpc1wiIGlzIGEgQ3J5cHRvIGltcGxlbWVudGF0aW9uLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0byk7XG5cbiAgICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBnZXRSYW5kb21WYWx1ZXMocm5kczgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/rng.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"unsafeStringify\": () => (/* binding */ unsafeStringify)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sd0RBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9zdHJpbmdpZnkuanM/NThjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cblxuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnNsaWNlKDEpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHJldHVybiAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgY29uc3QgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/stringify.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ \"./node_modules/uuid/dist/esm-browser/native.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\n\nfunction v4(options, buf, offset) {\n  if (_native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID && !buf && !options) {\n    return _native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUM7QUFDTjtBQUNzQjs7QUFFakQ7QUFDQSxNQUFNLDZEQUFpQjtBQUN2QixXQUFXLDZEQUFpQjtBQUM1Qjs7QUFFQTtBQUNBLGlEQUFpRCwrQ0FBRyxLQUFLOztBQUV6RDtBQUNBLG1DQUFtQzs7QUFFbkM7QUFDQTs7QUFFQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUyw4REFBZTtBQUN4Qjs7QUFFQSxpRUFBZSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzP2VjMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5hdGl2ZSBmcm9tICcuL25hdGl2ZS5qcyc7XG5pbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCB7IHVuc2FmZVN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHVuc2FmZVN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v4.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCOztBQUUvQjtBQUNBLHFDQUFxQyxzREFBVTtBQUMvQzs7QUFFQSxpRUFBZSxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzPzA2ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/validate.js\n");

/***/ })

}]);