"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_chat_chat_dev_js"],{

/***/ "./dev-javascripts/chat/chat.dev.js":
/*!******************************************!*\
  !*** ./dev-javascripts/chat/chat.dev.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"adjustMessageContainerBottomPadding\": () => (/* binding */ adjustMessageContainerBottomPadding),\n/* harmony export */   \"openActiveChatInputBox\": () => (/* binding */ openActiveChatInputBox),\n/* harmony export */   \"openActivechatInputAttachmentBox\": () => (/* binding */ openActivechatInputAttachmentBox)\n/* harmony export */ });\nconst allChatSection = document.getElementById(\"allChatSection\");\nconst activeChatSection = document.getElementById(\"activeChatSection\");\nconst activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\nlet activeChatInputTextContent = document.getElementById(\"activeChatInputTextContent\");\nlet isUserTyping = false;\nlet lastActiveChatId = activeChatSection.dataset.chatId.toString();\n\n(async function () {\n  if (!IS_INIT_CHAT_MODULE) {\n    async function checkChatState() {\n      // console.log(location)\n      // console.log(history)\n      if (location.hash) {\n        let chatId = location.hash.replace(\"#\", \"\");\n        let {\n          fetchActiveChat\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_fetchActiveChat_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/fetchActiveChat.dev */ \"./dev-javascripts/chat/js/fetchActiveChat.dev.js\"));\n        fetchActiveChat(chatId);\n      } else {\n        // history.replaceState({}, \"\", \"\")\n        document.title = \"Chats\";\n        allChatSection.classList.remove(\"all-chat-section--hide\");\n        activeChatSection.classList.add(\"active-chat-section--hide\");\n      }\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", checkChatState);\n    window.addEventListener(\"popstate\", checkChatState); //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active chat message container\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active chat input container\n\n    const activeChatInputContainer = document.getElementById(\"activeChatInputContainer\");\n    const activeChatInputTextContent = document.getElementById(\"activeChatInputTextContent\");\n    const activeChatInputAttachmentBox = document.getElementById(\"activeChatInputAttachmentBox\");\n    activeChatInputTextContent.addEventListener(\"input\", () => {\n      if (activeChatInputTextContent.value === \"\") {\n        activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n      } else {\n        if (!activeChatInputAttachmentBox.classList.contains(\"active-chat-input-attachment-box--hide\")) {\n          activeChatInputAttachmentBox.classList.add(\"active-chat-input-attachment-box--hide\");\n        }\n      }\n\n      activeChatInputTextContent.style.height = \"auto\";\n      activeChatInputTextContent.style.height = activeChatInputTextContent.scrollHeight + \"px\";\n      adjustMessageContainerBottomPadding();\n    }, false); ///////////////////////////////////////////////////\n\n    const {\n      default: insertTextAtCursor\n    } = await __webpack_require__.e(/*! import() */ \"node_modules_insert-text-at-cursor_dist_index_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! insert-text-at-cursor */ \"./node_modules/insert-text-at-cursor/dist/index.esm.js\"));\n    const {\n      Picker\n    } = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_emoji-mart_dist_module_js\").then(__webpack_require__.bind(__webpack_require__, /*! emoji-mart */ \"./node_modules/emoji-mart/dist/module.js\"));\n\n    function getEmojiAndAddToInput(emoji) {\n      insertTextAtCursor(activeChatInputTextContent, emoji.native);\n    }\n\n    const activeChatInputEmojiBtn = document.getElementById(\"activeChatInputEmojiBtn\");\n    const activeChatInputEmojiContainer = document.getElementById(\"activeChatInputEmojiContainer\");\n    let emojiPickerOptions = {\n      parent: activeChatInputEmojiContainer,\n      data: async () => {\n        const data = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_emoji-mart_data_sets_14_native_json\").then(__webpack_require__.t.bind(__webpack_require__, /*! @emoji-mart/data */ \"./node_modules/@emoji-mart/data/sets/14/native.json\", 19));\n        return data;\n      },\n      onEmojiSelect: getEmojiAndAddToInput,\n      // onClickOutside: () => {\n      //   console.log(\"hello\")\n      // },\n      autoFocus: false,\n      emojiButtonColors: [\"rgba(155, 223, 88, 0.7)\", \"rgba(155, 40, 88, 0.7)\", \"rgba(40, 223, 88, 0.7)\", \"rgba(155, 223, 88, 0.7)\", \"rgba(40, 223, 223, 0.7)\", \"rgba(20, 150, 150, 0.7)\", \"rgba(150, 150, 20, 0.7)\", \"rgba(150, 20, 150, 0.7)\"],\n      emojiButtonSize: 40,\n      // emojiSize: 25,\n      emojiVersion: 14,\n      icons: \"auto\",\n      maxFrequentRows: 2,\n      navPosition: \"bottom\",\n      previewPosition: \"none\",\n      set: \"native\",\n      dynamicWidth: true\n    };\n    let emojiPicker = new Picker(emojiPickerOptions);\n    activeChatInputEmojiBtn.addEventListener(\"click\", () => {\n      activeChatInputEmojiContainer.classList.toggle(\"active-chat-input-box__emoji-container--hide\");\n    }); ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // input message creation\n\n    let {\n      closeReplyMessageBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev.js */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\")); // ///////////////////////////////////////////////////////////// /////////////////////////////////////////////////////\n\n    const {\n      checkTimeAndCreateNewMessage\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n    const {\n      updateAllChatSection\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    const {\n      default: Uppy\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/core */ \"./node_modules/@uppy/core/lib/index.js\", 23));\n    const {\n      default: Dashboard\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/dashboard */ \"./node_modules/@uppy/dashboard/lib/index.js\", 23));\n    const {\n      default: Webcam\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/webcam */ \"./node_modules/@uppy/webcam/lib/index.js\", 23));\n    const {\n      default: ImageEditor\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/image-editor */ \"./node_modules/@uppy/image-editor/lib/index.js\", 23));\n    const {\n      default: Audio\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_audio_lib_index_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/audio */ \"./node_modules/@uppy/audio/lib/index.js\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_core_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de0\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/core/dist/style.css */ \"./node_modules/@uppy/core/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_dashboard_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-784fbd\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/dashboard/dist/style.css */ \"./node_modules/@uppy/dashboard/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_webcam_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_getUrl_js-no-6b1333\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/webcam/dist/style.css */ \"./node_modules/@uppy/webcam/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_image-editor_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_getUrl_js-no-f4d24e\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/image-editor/dist/style.css */ \"./node_modules/@uppy/image-editor/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_audio_dist_style_css\"), __webpack_require__.e(\"data_image_svg_xml_charset_US-ASCII_3Csvg_20xmlns_3D_22http_3A_2F_2Fwww_w3_org_2F2000_2Fsvg_2-cd289e\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/audio/dist/style.css */ \"./node_modules/@uppy/audio/dist/style.css\"));\n    const {\n      default: AwsS3Multipart\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_aws-s3-multipart_lib_index_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/aws-s3-multipart */ \"./node_modules/@uppy/aws-s3-multipart/lib/index.js\"));\n    const uppy = new Uppy({\n      id: \"chatMedia\",\n      autoProceed: false,\n      allowMultipleUploadBatches: true,\n      debug: false,\n      onBeforeFileAdded: (currentFile, files) => {\n        console.log(currentFile);\n\n        if (!currentFile.type) {\n          uppy.log(`Skipping file because it has no type`);\n          uppy.info(`Skipping file because it has no type`, \"error\", 500);\n          return false;\n        } else {\n          currentFile.name = \"\";\n          return currentFile;\n        }\n      },\n      onBeforeUpload: files => {// const updatedFiles = {}\n        // Object.keys(files).forEach(fileID => {\n        //   updatedFiles[fileID] = {\n        //     ...files[fileID],\n        //     meta: {\n        //       ...files[fileID].meta,\n        //       fileType: files[fileID].type\n        //     }\n        //   }\n        // })\n        // console.log(updatedFiles)\n        // return updatedFiles\n      },\n      restrictions: {\n        maxFileSize: 1024 * 1024 * 100,\n        minFileSize: null,\n        maxTotalFileSize: 1024 * 1024 * 100 * 10,\n        maxNumberOfFiles: 10,\n        minNumberOfFiles: 1,\n        allowedFileTypes: [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/svg+xml\", \"image/x-png\", \"audio/mpeg\", \"audio/wav\", \"audio/x-wav\", \"audio/ogg\", \"audio/webm\", // \"audio/*\",\n        \"video/mp4\", \"video/webm\", \"video/ogg\", \"video/quicktime\", \"video/x-matroska\"]\n      },\n      meta: {\n        mediaType: \"chat-media\"\n      },\n      infoTimeout: 5000\n    }).use(Dashboard, {\n      trigger: \"#activeChatInputAttachmentFileBtn\",\n      target: \"body\",\n      inline: false,\n      plugins: [\"Webcam\", \"ImageEditor\", \"Audio\"],\n      thumbnailWidth: 300,\n      // closeAfterFinish: false,\n      showRemoveButtonAfterComplete: false,\n      disablePageScrollWhenModalOpen: true,\n      closeModalOnClickOutside: true,\n      theme: \"light\",\n      locale: {\n        strings: {}\n      },\n      note: \"Images, Audios and videos only, up to 10 files, 1 file up to 100 MB\",\n      proudlyDisplayPoweredByUppy: false\n    }).use(Webcam, {\n      target: Dashboard,\n      title: \"Camera\",\n      mirror: true,\n      modes: [\"video-audio\", \"video-only\", \"picture\"],\n      preferredVideoMimeType: \"video/mp4\",\n      showRecordingLength: true\n    }).use(ImageEditor, {\n      target: Dashboard,\n      quality: 0.8\n    }).use(Audio, {\n      id: \"Audio\",\n      target: Dashboard,\n      showAudioSourceDropdown: false\n    }).use(AwsS3Multipart, {\n      limit: 4,\n      companionUrl: \"http://localhost:5000/companion\"\n    }); // uppy.on(\"complete\", result => {\n    //   console.log(\n    //     \"Upload complete! We’ve uploaded these files:\",\n    //     result.successful\n    //   )\n    // })\n\n    uppy.on(\"upload-success\", (file, response) => {\n      let userMessage = {};\n      userMessage.chat = activeChatSection.dataset.chatId;\n      userMessage.hasMediaContent = true;\n      userMessage.mediaContentType = file.type.split(\"/\")[0];\n      userMessage.mediaContentMimeType = file.type;\n      userMessage.mediaContentPath = file.s3Multipart.key;\n      userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n      fetch(\"/message\", {\n        method: \"POST\",\n        // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userMessage)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(response);\n      }).then(async data => {\n        if (data.isSuccess) {\n          checkTimeAndCreateNewMessage(data.message, activeChatMessageContainer);\n          closeReplyMessageBox();\n          updateAllChatSection(data.message);\n        } else {\n          let {\n            createMainNotification\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n          createMainNotification(data.error, \"error\");\n        }\n      }).catch(async err => {\n        console.log(err);\n        let {\n          createMainNotification\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n        createMainNotification(\"Server Error In Sending Message, Please Try Again\", \"error\");\n      });\n    }); // active chat input youtube send btn\n\n    const activeChatInputAttachmentYoutubeContentSendBtn = document.getElementById(\"activeChatInputAttachmentYoutubeContentSendBtn\");\n    const activeChatInputAttachmentYoutubeContent = document.getElementById(\"activeChatInputAttachmentYoutubeContent\");\n    activeChatInputAttachmentYoutubeContentSendBtn.addEventListener(\"click\", () => {\n      let userMessage = {};\n\n      if (activeChatInputAttachmentYoutubeContent.value !== \"\") {\n        userMessage.chat = activeChatSection.dataset.chatId;\n        userMessage.hasMediaContent = true;\n        userMessage.mediaContentType = \"youtube\";\n        userMessage.mediaContentMimeType = \"video/mp4\";\n        userMessage.mediaContentPath = activeChatInputAttachmentYoutubeContent.value;\n        userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n        activeChatInputAttachmentYoutubeContent.value = \"\";\n        fetch(\"/message\", {\n          method: \"POST\",\n          // or 'PUT'\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userMessage)\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return Promise.reject(response);\n        }).then(async data => {\n          if (data.isSuccess) {\n            checkTimeAndCreateNewMessage(data.message, activeChatMessageContainer);\n            closeReplyMessageBox();\n            document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\").classList.add(\"input-attachment-btn-box__input-box--hide\");\n            updateAllChatSection(data.message);\n            activeChatInputAttachmentYoutubeBtnInputBox.classList.add(\"attachment-btn-box__input-box--hide\");\n          } else {\n            let {\n              createMainNotification\n            } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n            createMainNotification(data.error, \"error\");\n          }\n        }).catch(async err => {\n          console.log(err);\n          let {\n            createMainNotification\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n          createMainNotification(\"Server Error In Sending Message, Please Try Again\", \"error\");\n        });\n      }\n    }); /////////////////////////////////////////////////////////////\n    // active chat input send btn\n\n    const activeChatInputSendBtn = document.getElementById(\"activeChatInputSendBtn\");\n    activeChatInputSendBtn.addEventListener(\"click\", async () => {\n      let userMessage = {};\n\n      if (activeChatInputTextContent.value.trim() !== \"\" && activeChatSection.dataset.chatId !== \"\") {\n        userMessage.chat = activeChatSection.dataset.chatId;\n        userMessage.hasMediaContent = false;\n        userMessage.textContent = activeChatInputTextContent.value.trim();\n        userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n        activeChatInputTextContent.value = \"\";\n\n        if (activeChatSection.dataset.chatId !== \"\") {\n          let {\n            sendChatMessageStopTypingSocket\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n          sendChatMessageStopTypingSocket(activeChatSection.dataset.chatId);\n          isUserTyping = false;\n        }\n\n        fetch(\"/message\", {\n          method: \"POST\",\n          // or 'PUT'\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userMessage)\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return Promise.reject(response);\n        }).then(async data => {\n          if (data.isSuccess) {\n            activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n            activeChatInputTextContent.style.height = \"auto\";\n            activeChatInputTextContent.style.height = activeChatInputTextContent.scrollHeight + \"px\";\n\n            if (parseInt(activeChatInputTextContent.style.height.slice(0, -2)) <= 40) {\n              activeChatMessageContainer.style.paddingBottom = \"60px\";\n            } else {\n              activeChatMessageContainer.style.paddingBottom = activeChatInputTextContent.style.height;\n            }\n\n            checkTimeAndCreateNewMessage(data.message, activeChatMessageContainer);\n            closeReplyMessageBox();\n            updateAllChatSection(data.message);\n            activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n          } else {\n            let {\n              createMainNotification\n            } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n            createMainNotification(data.error, \"error\");\n          }\n        }).catch(async err => {\n          console.log(err);\n          let {\n            createMainNotification\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_common_mainNotification_dev_js-_81c90\").then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n          createMainNotification(\"Server Error In Sending Message, Please Try Again\", \"error\");\n        });\n      }\n    }); ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active-chat-input-attachment-box\n\n    const activeChatInputAttachmentBoxBtn = document.getElementById(\"activeChatInputAttachmentBoxBtn\");\n    activeChatInputAttachmentBoxBtn.addEventListener(\"click\", () => {\n      if (activeChatInputAttachmentBoxBtn.classList.contains(\"active-chat-input-attachment-box__btn--selected\")) {\n        openActiveChatInputBox();\n      } else {\n        openActivechatInputAttachmentBox();\n      }\n    });\n    const activeChatInputAttachmentYoutubeBtn = document.getElementById(\"activeChatInputAttachmentYoutubeBtn\");\n    const activeChatInputAttachmentYoutubeBtnInputBox = document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\");\n    activeChatInputAttachmentYoutubeBtn.addEventListener(\"click\", () => {\n      activeChatInputAttachmentYoutubeBtnInputBox.classList.toggle(\"input-attachment-btn-box__input-box--hide\");\n    }); // initialize event to active chat\n    ////////////////////\n    ///////////////////\n    // active chat to all chat btn\n\n    const ActiveChatToAllChatBtn = document.getElementById(\"ActiveChatToAllChatBtn\");\n    ActiveChatToAllChatBtn.addEventListener(\"click\", async () => {\n      location.hash = \"\";\n\n      if (activeChatSection.dataset.chatId !== \"\") {\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(activeChatSection.dataset.chatId);\n        isUserTyping = false;\n      }\n    }); //active chat header pic and active chat header name\n\n    let activeChatHeaderPic = document.getElementById(\"activeChatHeaderPic\");\n    activeChatHeaderPic.addEventListener(\"click\", async () => {\n      let activeChatId = activeChatSection.dataset.chatId;\n\n      if (activeChatId != \"\") {\n        let {\n          createActiveChatInfoModal\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createActiveChatInfoModal.dev.js */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n        createActiveChatInfoModal(activeChatId);\n      }\n    });\n    let activeChatHeaderName = document.getElementById(\"activeChatHeaderName\");\n    activeChatHeaderName.addEventListener(\"click\", async () => {\n      let activeChatId = activeChatSection.dataset.chatId;\n\n      if (activeChatId != \"\") {\n        let {\n          createActiveChatInfoModal\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createActiveChatInfoModal.dev.js */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n        createActiveChatInfoModal(activeChatId);\n      }\n    }); ////////////////////\n    // create new group chat btn\n    // group chat form Modal and assign event to btn\n\n    const createNewGroupChatBtn = document.getElementById(\"createNewGroupChatBtn\");\n    createNewGroupChatBtn.addEventListener(\"click\", async () => {\n      let {\n        createGroupChatFormModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_aws-s3-multipart_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_dist_style_css\"), __webpack_require__.e(\"dev-javascripts_chat_js_createGroupChatFormModal_dev_js-data_image_png_base64_iVBORw0KGgoAAAA-4573f1\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de2\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createGroupChatFormModal.dev */ \"./dev-javascripts/chat/js/createGroupChatFormModal.dev.js\"));\n      createGroupChatFormModal();\n    });\n    initialiseEventForChatModule();\n    IS_INIT_CHAT_MODULE = true;\n  }\n})();\n\nfunction openActivechatInputAttachmentBox() {\n  document.getElementById(\"activeChatInputAttachmentBoxBtn\").classList.add(\"active-chat-input-attachment-box__btn--selected\");\n  const activeChatInputAttachmentBox = document.getElementById(\"activeChatInputAttachmentBox\");\n  activeChatInputAttachmentBox.classList.add(\"active-chat-input-attachment-box--selected\");\n  activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n  document.getElementById(\"activeChatInputAttachmentBtnContainer\").classList.remove(\"input-attachment-btn-container--hide\");\n  document.getElementById(\"activeChatInputBox\").classList.add(\"active-chat-input-box--hide\");\n  document.getElementById(\"activeChatInputSendBox\").classList.add(\"active-chat-input-send-box--hide\");\n  document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\").classList.add(\"input-attachment-btn-box__input-box--hide\");\n  adjustMessageContainerBottomPadding();\n}\nfunction openActiveChatInputBox() {\n  document.getElementById(\"activeChatInputAttachmentBoxBtn\").classList.remove(\"active-chat-input-attachment-box__btn--selected\");\n  document.getElementById(\"activeChatInputAttachmentBox\").classList.remove(\"active-chat-input-attachment-box--selected\");\n  document.getElementById(\"activeChatInputAttachmentBtnContainer\").classList.add(\"input-attachment-btn-container--hide\");\n  document.getElementById(\"activeChatInputBox\").classList.remove(\"active-chat-input-box--hide\");\n  document.getElementById(\"activeChatInputSendBox\").classList.remove(\"active-chat-input-send-box--hide\");\n  adjustMessageContainerBottomPadding();\n}\nfunction adjustMessageContainerBottomPadding() {\n  activeChatMessageContainer.style.paddingBottom = activeChatInputContainer.clientHeight + 5 + \"px\";\n  activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n}\n\nfunction initialiseEventForChatModule() {\n  document.getElementById(\"activeChatInputReplyBoxCloseBtn\").addEventListener(\"click\", async () => {\n    let {\n      closeReplyMessageBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\"));\n    closeReplyMessageBox();\n  }); //send chat:message-typing event\n\n  activeChatInputTextContent.addEventListener(\"input\", async e => {\n    if (activeChatSection.dataset.chatId !== \"\") {\n      if (lastActiveChatId !== \"\" && lastActiveChatId !== activeChatSection.dataset.chatId) {\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(lastActiveChatId);\n        isUserTyping = false;\n        lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      }\n\n      lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      let chatId = activeChatSection.dataset.chatId.toString();\n      const inputValue = activeChatInputTextContent.value.trim();\n\n      if (inputValue && !isUserTyping) {\n        isUserTyping = true;\n        let {\n          sendChatMessageStartTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStartTypingSocket(chatId);\n      } else if (!inputValue && isUserTyping) {\n        isUserTyping = false;\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(chatId);\n      }\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/chat/chat.dev.js\n");

/***/ })

}]);