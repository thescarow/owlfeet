"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_socket_chat-socket_mainChatSocket_dev_js"],{

/***/ "./dev-javascripts/socket/chat-socket/mainChatSocket.dev.js":
/*!******************************************************************!*\
  !*** ./dev-javascripts/socket/chat-socket/mainChatSocket.dev.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMainChatSocket\": () => (/* binding */ createMainChatSocket)\n/* harmony export */ });\nfunction createMainChatSocket(socket) {\n  console.log(\"inside chatSocket\");\n  let activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\n  let activeChatSection = document.getElementById(\"activeChatSection\"); //send chat:message-typing event\n\n  let isUserTyping = false;\n  let lastActiveChatId = activeChatSection.dataset.chatId.toString();\n  let activeChatInputTextContent = document.getElementById(\"activeChatInputTextContent\");\n  activeChatInputTextContent.addEventListener(\"input\", () => {\n    if (activeChatSection.dataset.chatId !== \"\") {\n      if (lastActiveChatId !== \"\" && lastActiveChatId !== activeChatSection.dataset.chatId) {\n        let eventData = {\n          chatId: lastActiveChatId\n        };\n        socket.emit(\"chat:message-stop-typing\", eventData);\n        lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      }\n\n      lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      let eventData = {\n        chatId: activeChatSection.dataset.chatId.toString()\n      };\n      const inputValue = activeChatInputTextContent.value.trim();\n\n      if (inputValue && !isUserTyping) {\n        isUserTyping = true;\n        socket.emit(\"chat:message-start-typing\", eventData);\n      } else if (!inputValue && isUserTyping) {\n        isUserTyping = false;\n        socket.emit(\"chat:message-stop-typing\", eventData);\n      }\n    }\n  });\n  let activeChatHeaderStatus = document.getElementById(\"activeChatHeaderStatus\");\n  socket.on(\"chat:message-start-typing\", async data => {\n    if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n      activeChatHeaderStatus.innerHTML = `${data.user.firstName} typing<span class=\"active-chat-header__typing-effect\">.</span><span class=\"active-chat-header__typing-effect\">.</span><span class=\"active-chat-header__typing-effect\">.</span>`;\n    }\n\n    activeChatHeaderStatus.classList.remove(\"active-chat-header__chat-status--hide\");\n  });\n  socket.on(\"chat:message-stop-typing\", async data => {\n    if (activeChatSection.dataset.chatId.toString() === data.chatId.toString()) {\n      if (data.isGroupChat) {\n        activeChatHeaderStatus.textContent = \"\";\n      } else {\n        activeChatHeaderStatus.textContent = \"Active\";\n      }\n\n      activeChatHeaderStatus.classList.remove(\"active-chat-header__chat-status--hide\");\n    }\n  }); /////////////////////////////////////////////////////\n  // event listeners\n\n  socket.on(\"chat:new-message\", async message => {\n    let chatId = activeChatSection.dataset.chatId;\n    let {\n      updateAllChatSection\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    updateAllChatSection(message);\n\n    if (chatId !== \"\" && chatId === message.chat._id) {\n      let {\n        checkTimeAndCreateNewMessage\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n      checkTimeAndCreateNewMessage(message, activeChatMessageContainer);\n    }\n  }); ////////////////////////////////////////////\n\n  socket.on(\"chat:new-info-message\", async message => {\n    let chatId = activeChatSection.dataset.chatId;\n    let {\n      updateAllChatSection\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    updateAllChatSection(message);\n\n    if (chatId !== \"\" && chatId === message.chat._id) {\n      let {\n        createInfoMessage\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n      createInfoMessage(message, activeChatMessageContainer, \"beforeend\");\n    }\n  }); //////////////////////////////////////////\n\n  socket.on(\"chat:create-new-group-chat\", async chat => {\n    console.log(\"created-new-group-chat\");\n    let {\n      createChatBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    createChatBox(chat);\n  });\n  socket.on(\"chat:edit-group-chat\", async chat => {\n    console.log(\"edit-group-chat\");\n    activeChatData = { ...chat\n    };\n    let {\n      updateActiveChatInfoModal\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de0\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/createActiveChatInfoModal.dev */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n    let {\n      updateActiveChatSection\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_chat_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js-_2dc91\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n    let {\n      updateChatBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    updateActiveChatInfoModal();\n    updateActiveChatSection(activeChatData);\n    updateChatBox(activeChatData);\n  });\n  socket.on(\"chat:clear-chat-all-messages\", async chatId => {\n    let {\n      clearActiveChatMessageContainer\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_chat_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js-_2dc91\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n    let {\n      clearChatBoxLatestMessage\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    clearActiveChatMessageContainer();\n    clearChatBoxLatestMessage(chatId);\n  });\n  socket.on(\"chat:delete-chat\", async chatId => {\n    let {\n      clearActiveChatMessageContainer\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_chat_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js-_2dc91\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/showActiveChatSection.dev */ \"./dev-javascripts/chat/js/showActiveChatSection.dev.js\"));\n    let {\n      showAllChatSection,\n      deleteChatBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    showAllChatSection();\n    deleteChatBox(chatId);\n    clearActiveChatMessageContainer();\n  });\n  socket.on(\"chat:user-left-group-chat\", async (chatId, userId) => {\n    let {\n      removeChatInfoMember\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de0\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/createActiveChatInfoModal.dev */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n    removeChatInfoMember(chatId, userId);\n  });\n  socket.on(\"chat:delete-message-for-all\", async deletedMessage => {\n    let {\n      convertUserMessageToDeletedMessageForAll\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../chat/js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n    convertUserMessageToDeletedMessageForAll(deletedMessage);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/socket/chat-socket/mainChatSocket.dev.js\n");

/***/ })

}]);