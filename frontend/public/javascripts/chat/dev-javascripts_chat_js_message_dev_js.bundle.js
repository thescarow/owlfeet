"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["dev-javascripts_chat_js_message_dev_js"],{

/***/ "./dev-javascripts/chat/js/message.dev.js":
/*!************************************************!*\
  !*** ./dev-javascripts/chat/js/message.dev.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkTimeAndCreateNewMessage\": () => (/* binding */ checkTimeAndCreateNewMessage),\n/* harmony export */   \"checkTimeAndCreateOldMessage\": () => (/* binding */ checkTimeAndCreateOldMessage),\n/* harmony export */   \"createDateMessage\": () => (/* binding */ createDateMessage),\n/* harmony export */   \"createInfoMessage\": () => (/* binding */ createInfoMessage),\n/* harmony export */   \"createUserMessage\": () => (/* binding */ createUserMessage)\n/* harmony export */ });\n/* harmony import */ var plyr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! plyr */ \"./node_modules/plyr/dist/plyr.min.js\");\n/* harmony import */ var plyr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(plyr__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar svg_infoBlankBtn = \"<svg width=\\\"53\\\" height=\\\"104\\\" viewBox=\\\"0 0 53 104\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M38.6887 2C45.68 2 49.1756 6.56 49.1756 11.785C49.1756 18.31 43.1026 24.345 35.1983 24.345C28.5774 24.345 24.7165 20.595 24.8991 14.395C24.8991 9.18 29.4957 2 38.6887 2ZM17.1774 102C11.6574 102 7.61391 98.74 11.4748 84.38L17.8087 58.92C18.9096 54.85 19.0922 53.215 17.8087 53.215C16.1548 53.215 8.99652 56.025 4.75478 58.8L2 54.4C15.4191 43.47 30.8574 37.065 37.4835 37.065C42.9983 37.065 43.9165 43.43 41.1617 53.215L33.9043 79.975C32.6209 84.7 33.1687 86.33 34.4574 86.33C36.1113 86.33 41.5374 84.37 46.8696 80.295L50 84.365C36.9461 97.1 22.687 102 17.1774 102Z\\\"/>\\n</svg>\";\nvar svg_messageTick = \"<svg width=\\\"100\\\" height=\\\"100\\\" viewBox=\\\"0 0 100 75\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M35.5523 72.8954C34.3946 74.0434 32.7545 75 31.3073 75C29.8601 75 28.22 73.9955 27.014 72.8476L0 46.0619L8.58659 37.5478L31.3555 60.1244L91.5581 0L100 8.65752L35.5523 72.8954V72.8954Z\\\" />\\n</svg>\";\nvar svg_videoCallBlankIcon = \"<svg width=\\\"100\\\" height=\\\"63\\\" viewBox=\\\"0 0 100 66\\\"  xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M16.6636 0C7.46055 0 0 6.56645 0 14.6666V51.3334C0 59.433 7.46055 66 16.6636 66H58.3226C67.2118 66 74.4747 59.8738 74.9604 52.1577L93.7278 61.8362C95.0159 62.5005 96.6098 62.5072 97.9054 61.8538C99.201 61.2004 100 59.9867 100 58.6726V7.3275C100 6.01462 99.2026 4.80191 97.9087 4.148C96.6156 3.49409 95.0234 3.49879 93.7353 4.16032L74.9579 13.8005C74.4489 6.10357 67.1952 0 58.3226 0H16.6636ZM8.33181 14.6666C8.33181 10.6166 12.0621 7.33329 16.6636 7.33329H58.3226C62.9242 7.33329 66.6544 10.6166 66.6544 14.6666V51.3334C66.6544 55.3829 62.9242 58.6667 58.3226 58.6667H16.6636C12.0621 58.6667 8.33181 55.3829 8.33181 51.3334V14.6666ZM74.9871 43.6715V22.2753L91.6682 13.7111V52.2743L74.9871 43.6715Z\\\" />\\n</svg>\";\nvar svg_newGroupIcon = \"<svg width=\\\"100\\\" height=\\\"100\\\" viewBox=\\\"0 0 100 100\\\"  xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M30.4688 71.875C38.6667 71.875 45.3125 65.2292 45.3125 57.0312C45.3125 48.8333 38.6667 42.1875 30.4688 42.1875C22.2708 42.1875 15.625 48.8333 15.625 57.0312C15.625 65.2292 22.2708 71.875 30.4688 71.875Z\\\" stroke=\\\"#010101\\\" stroke-width=\\\"4\\\" stroke-miterlimit=\\\"10\\\"/>\\n<path d=\\\"M9.375 95.3125C9.375 89.0965 11.8443 83.1351 16.2397 78.7397C20.6351 74.3443 26.5965 71.875 32.8125 71.875M54.6875 95.3125C54.6875 92.2346 54.0813 89.1869 52.9034 86.3434C51.7256 83.4998 49.9992 80.9161 47.8228 78.7397C45.6464 76.5633 43.0627 74.8369 40.2191 73.6591C37.3756 72.4812 34.3279 71.875 31.25 71.875\\\" stroke=\\\"#010101\\\" stroke-width=\\\"4\\\" stroke-miterlimit=\\\"10\\\"/>\\n<path d=\\\"M66.4062 34.375C74.6042 34.375 81.25 27.7292 81.25 19.5312C81.25 11.3333 74.6042 4.6875 66.4062 4.6875C58.2083 4.6875 51.5625 11.3333 51.5625 19.5312C51.5625 27.7292 58.2083 34.375 66.4062 34.375Z\\\" stroke=\\\"#010101\\\" stroke-width=\\\"4\\\" stroke-miterlimit=\\\"10\\\"/>\\n<path d=\\\"M45.3125 56.25C45.3125 44.1563 55.7969 34.375 68.75 34.375M90.625 56.25C90.625 44.1563 80.1406 34.375 67.1875 34.375\\\" stroke=\\\"#010101\\\" stroke-width=\\\"4\\\" stroke-miterlimit=\\\"10\\\"/>\\n</svg>\\n\";\n\n\nfunction createPlyr(_x, _x2) {\n  return _createPlyr.apply(this, arguments);\n}\n\nfunction _createPlyr() {\n  _createPlyr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(element, type) {\n    var player;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            player = new (plyr__WEBPACK_IMPORTED_MODULE_0___default())(element, {\n              controls: [\"play-large\", \"play\", \"progress\", \"current-time\", \"settings\", \"pip\", \"airplay\", \"fullscreen\"],\n              debug: false,\n              settings: [\"captions\", \"quality\", \"speed\", \"loop\"],\n              clickToPlay: true,\n              resetOnEnd: true,\n              invertTime: true,\n              ratio: \"16:9\",\n              youtube: {\n                origin: \"http://localhost:5000\"\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createPlyr.apply(this, arguments);\n}\n\nvar weekDaysArray = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\nvar firstMessageTimePointer = \"\";\nvar lastMessageTimePointer = \"\";\n\nfunction getTimeString(date) {\n  var dateObj = typeof date === \"string\" ? new Date(date) : date;\n  var dateHour = dateObj.getHours();\n  var dateMin = dateObj.getMinutes();\n  var dateStr1 = dateHour < 10 ? \"0\" + dateHour : dateHour;\n  var dateStr2 = dateMin < 10 ? \"0\" + dateMin : dateMin;\n  var dateStr3 = dateHour < 12 ? \"AM\" : \"PM\";\n  var dateString = dateStr1 + \":\" + dateStr2 + \" \" + dateStr3;\n  return dateString;\n}\n\nfunction getDateString(date) {\n  var currentDate = new Date();\n  date = typeof date === \"string\" ? new Date(date) : date;\n\n  if (currentDate.getFullYear() === date.getFullYear() && currentDate.getMonth() === date.getMonth()) {\n    if (currentDate.getDate() - date.getDate() === 0) {\n      return \"Today\";\n    } else if (currentDate.getDate() - date.getDate() === 1) {\n      return \"Yesterday\";\n    } else if (currentDate.getDate() - date.getDate() === 2) {\n      return weekDaysArray[date.getDay()];\n    } else {\n      return weekDaysArray[date.getDay()] + \", \" + date.getDate() + \"-\" + date.getMonth() + \"-\" + date.getFullYear();\n    }\n  } else {\n    return weekDaysArray[date.getDay()] + \", \" + date.getDate() + \"-\" + date.getMonth() + \"-\" + date.getFullYear();\n  }\n}\n\nfunction isMessageDateChanged(messageDate, fromCheckingDate) {\n  // convert to date object if it is not\n  messageDate = typeof messageDate === \"string\" ? new Date(messageDate) : messageDate;\n  fromCheckingDate = typeof fromCheckingDate === \"string\" ? new Date(fromCheckingDate) : fromCheckingDate;\n\n  if (fromCheckingDate.getDate() !== messageDate.getDate()) {\n    return true;\n  } else if (fromCheckingDate.getMonth() !== messageDate.getMonth()) {\n    return true;\n  } else if (fromCheckingDate.getFullYear() !== messageDate.getFullYear()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction checkTimeAndCreateOldMessage(_x3, _x4) {\n  return _checkTimeAndCreateOldMessage.apply(this, arguments);\n}\n\nfunction _checkTimeAndCreateOldMessage() {\n  _checkTimeAndCreateOldMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(allMessages, activeChatMessageContainer) {\n    var i;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (allMessages.length > 0) {\n              if (activeChatMessageContainer.children.length == 0) {\n                firstMessageTimePointer = allMessages[0].createdAt;\n                lastMessageTimePointer = allMessages[0].createdAt;\n              }\n\n              for (i = 0; i < allMessages.length; i++) {\n                if (isMessageDateChanged(allMessages[i].createdAt, lastMessageTimePointer)) {\n                  createDateMessage(lastMessageTimePointer, activeChatMessageContainer, \"afterbegin\");\n                  lastMessageTimePointer = allMessages[i].createdAt;\n                }\n\n                createUserMessage(allMessages[i], activeChatMessageContainer, \"afterbegin\");\n              }\n            } else {\n              if (lastMessageTimePointer !== \"\") {\n                createDateMessage(lastMessageTimePointer, activeChatMessageContainer, \"afterbegin\");\n              } else {\n                firstMessageTimePointer = \"\";\n                lastMessageTimePointer = \"\";\n              }\n            }\n\n            activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _checkTimeAndCreateOldMessage.apply(this, arguments);\n}\n\nfunction checkTimeAndCreateNewMessage(_x5, _x6) {\n  return _checkTimeAndCreateNewMessage.apply(this, arguments);\n}\n\nfunction _checkTimeAndCreateNewMessage() {\n  _checkTimeAndCreateNewMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(message, activeChatMessageContainer) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (activeChatMessageContainer.children.length == 0) {\n              firstMessageTimePointer = lastMessageTimePointer = message.createdAt;\n            }\n\n            if (isMessageDateChanged(message.createdAt, firstMessageTimePointer)) {\n              createDateMessage(lastMessageTimePointer, activeChatMessageContainer, \"beforeend\");\n              firstMessageTimePointer = message.createdAt;\n            }\n\n            createUserMessage(message, activeChatMessageContainer, \"beforeend\");\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _checkTimeAndCreateNewMessage.apply(this, arguments);\n}\n\nfunction createUserMessage(message, activeChatMessageContainer) {\n  var addPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"beforeend\";\n  console.log(\"=>>>>>\", new Date(firstMessageTimePointer).getDate(), \"------\", new Date(lastMessageTimePointer).getDate());\n  console.log(\"---->\", new Date(message.createdAt).getDate());\n  var messageBox = document.createElement(\"div\");\n  messageBox.classList.add(\"active-chat-message-box\");\n  messageBox.setAttribute(\"data-message-id\", message._id);\n  var messageBoxInnerHtml = \"\\n        <div class=\\\"active-chat-message-box__content-box\\\">\\n           <div class=\\\"active-chat-message-box__content-info\\\">\\n               <div class=\\\"active-chat-message-box__content-time\\\">\".concat(getTimeString(message.createdAt), \"\\n               </div>\\n           </div>\\n       </div>\\n       <div class=\\\"active-chat-message-box__btn\\\">\").concat(svg_infoBlankBtn, \"\\n       </div>\\n        \");\n  messageBox.insertAdjacentHTML(\"beforeend\", messageBoxInnerHtml);\n  var messageContentBox = messageBox.getElementsByClassName(\"active-chat-message-box__content-box\")[0];\n  var messageContentInfo = messageBox.getElementsByClassName(\"active-chat-message-box__content-info\")[0];\n\n  if (message.hasMediaContent) {\n    if (message.mediaContentType === \"video\") {\n      messageBox.classList.add(\"active-chat-message-box--video\");\n      messageContentBox.classList.add(\"active-chat-message-box__content-box--video\");\n      messageContentInfo.classList.add(\"active-chat-message-box__content-info--video\");\n      var video = document.createElement(\"video\");\n      video.classList.add(\"active-chat-message-box__video-content\");\n      var videoSource = document.createElement(\"source\");\n      videoSource.src = message.mediaContentPath; //   videoSource.type = message.mediaContentMimeType.split(\";\")[0]\n\n      video.insertAdjacentElement(\"beforeend\", videoSource);\n      messageContentBox.insertAdjacentElement(\"afterbegin\", video);\n      createPlyr(video, \"video\");\n    }\n\n    if (message.mediaContentType === \"audio\") {\n      messageBox.classList.add(\"active-chat-message-box--audio\");\n      messageContentBox.classList.add(\"active-chat-message-box__content-box--audio\");\n      messageContentInfo.classList.add(\"active-chat-message-box__content-info--audio\");\n      var audio = document.createElement(\"audio\");\n      audio.classList.add(\"active-chat-message-box__audio-content\");\n      var audioSource = document.createElement(\"source\");\n      audioSource.src = message.mediaContentPath;\n      audioSource.type = message.mediaContentMimeType;\n      audio.insertAdjacentElement(\"beforeend\", audioSource);\n      messageContentBox.insertAdjacentElement(\"afterbegin\", audio);\n      createPlyr(audio, \"audio\");\n    }\n\n    if (message.mediaContentType === \"youtube\") {\n      messageBox.classList.add(\"active-chat-message-box--youtube\");\n      messageContentBox.classList.add(\"active-chat-message-box__content-box--youtube\");\n      messageContentInfo.classList.add(\"active-chat-message-box__content-info--youtube\");\n      var youtube = document.createElement(\"div\");\n      youtube.classList.add(\"active-chat-message-box__youtube-content\");\n      youtube.setAttribute(\"data-plyr-provider\", \"youtube\");\n      youtube.setAttribute(\"data-plyr-embed-id\", message.mediaContentPath);\n      messageContentBox.insertAdjacentElement(\"afterbegin\", youtube);\n      createPlyr(youtube, \"youtube\");\n    }\n\n    if (message.mediaContentType === \"image\") {\n      messageBox.classList.add(\"active-chat-message-box--image\");\n      messageContentBox.classList.add(\"active-chat-message-box__content-box--image\");\n      messageContentInfo.classList.add(\"active-chat-message-box__content-info--image\");\n      var image = document.createElement(\"img\");\n      image.classList.add(\"active-chat-message-box__image-content\");\n      image.setAttribute(\"src\", message.mediaContentPath);\n      image.setAttribute(\"alt\", \"Image\");\n      messageContentBox.insertAdjacentElement(\"afterbegin\", image);\n    }\n  } else {\n    messageBox.classList.add(\"active-chat-message-box--text\");\n    messageContentBox.classList.add(\"active-chat-message-box__content-box--text\");\n    messageContentInfo.classList.add(\"active-chat-message-box__content-info--text\");\n    var textMessage = document.createElement(\"div\");\n    textMessage.classList.add(\"active-chat-message-box__text-content\");\n    textMessage.textContent = message.textContent;\n    messageContentBox.insertAdjacentElement(\"afterbegin\", textMessage);\n  }\n\n  if (message.sender._id === loginUser._id) {\n    messageBox.classList.add(\"active-chat-message-box--right\");\n    messageContentInfo.insertAdjacentHTML(\"beforeend\", \"<div class=\\\"active-chat-message-box__content-status-container \\\">\\n               <div class=\\\"active-chat-message-box__content-status\\\">\".concat(svg_messageTick, \"\\n                </div>\\n               <div class=\\\"active-chat-message-box__content-status active-chat-message-box__content-status--second \\\">\").concat(svg_messageTick, \"\\n               </div>\\n      </div>\"));\n  }\n\n  activeChatMessageContainer.insertAdjacentElement(addPosition, messageBox);\n  activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight + 1000;\n  var activeChatMessageBoxBtn = messageBox.getElementsByClassName(\"active-chat-message-box__btn\")[0];\n  activeChatMessageBoxBtn.addEventListener(\"click\", function () {// activeChatMessageInfoModal.classList.remove(\"chat-modal--hide\")\n  });\n}\nfunction createInfoMessage(message, activeChatMessageContainer) {\n  var addPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"beforeend\";\n\n  if (message.hasOwnProperty(\"isInfoMessage\") && message.isInfoMessage === true) {\n    var infoMessageBox = document.createElement(\"div\");\n    infoMessageBox.classList.add(\"active-chat-info-message\");\n    infoMessageBox.setAttribute(\"data-message-id\", message._id);\n    var infoMessageBoxInnerHtml = \"<div class=\\\"active-chat-info-message__content\\\">\\n  </div>\";\n    infoMessageBox.insertAdjacentHTML(\"beforeend\", infoMessageBoxInnerHtml);\n    var infoMessageBoxContent = infoMessageBox.getElementsByClassName(\"active-chat-info-message__content\")[0];\n\n    if (message.infoMessageType === \"video-call\") {\n      infoMessageBoxContent.insertAdjacentHTML(\"afterbegin\", svg_videoCallBlankIcon);\n    }\n\n    if (message.infoMessageType === \"new-group\") {\n      infoMessageBoxContent.insertAdjacentHTML(\"afterbegin\", svg_newGroupIcon);\n    }\n\n    infoMessageBoxContent.textContent = message.infoMessage;\n    activeChatMessageContainer.insertAdjacentElement(addPosition, infoMessageBox);\n  }\n}\nfunction createDateMessage(messageDate, activeChatMessageContainer) {\n  var addPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"beforeend\";\n  var dateMessageBox = document.createElement(\"div\");\n  dateMessageBox.classList.add(\"active-chat-date-message-box\");\n  var dateMessageBoxInnerHtml = \"<div class=\\\"active-chat-date-message-box__content\\\">\\n  </div>\";\n  dateMessageBox.insertAdjacentHTML(\"beforeend\", dateMessageBoxInnerHtml);\n  dateMessageBox.getElementsByClassName(\"active-chat-date-message-box__content\")[0].textContent = getDateString(messageDate);\n  activeChatMessageContainer.insertAdjacentElement(addPosition, dateMessageBox);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/chat/js/message.dev.js\n");

/***/ })

}]);