/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dev-javascripts/chat/chat.dev.js":
/*!******************************************!*\
  !*** ./dev-javascripts/chat/chat.dev.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"adjustMessageContainerBottomPadding\": () => (/* binding */ adjustMessageContainerBottomPadding),\n/* harmony export */   \"openActiveChatInputBox\": () => (/* binding */ openActiveChatInputBox),\n/* harmony export */   \"openActivechatInputAttachmentBox\": () => (/* binding */ openActivechatInputAttachmentBox)\n/* harmony export */ });\nconst allChatSection = document.getElementById(\"allChatSection\");\nconst emptyChatSection = document.getElementById(\"emptyChatSection\");\nconst activeChatSection = document.getElementById(\"activeChatSection\");\nconst activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\nlet activeChatInputTextContent = document.getElementById(\"activeChatInputTextContent\");\nlet allChatChatBoxContainer = document.getElementById(\"allChatChatBoxContainer\");\nlet isUserTyping = false;\nlet lastActiveChatId = activeChatSection.dataset.chatId.toString();\n\n(async function () {\n  if (!IS_INIT_CHAT_MODULE) {\n    async function checkChatState() {\n      // console.log(location)\n      // console.log(history)\n      if (location.hash) {\n        let chatId = location.hash.replace(\"#\", \"\");\n        let {\n          fetchActiveChat\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_fetchActiveChat_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/fetchActiveChat.dev */ \"./dev-javascripts/chat/js/fetchActiveChat.dev.js\"));\n        fetchActiveChat(chatId);\n      } else {\n        // history.replaceState({}, \"\", \"\")\n        document.title = \"Chats\";\n        allChatSection.classList.remove(\"all-chat-section--open-active-chat\");\n        activeChatSection.classList.add(\"active-chat-section--hide\");\n        if (emptyChatSection.classList.contains(\"empty-chat-section--hide\")) emptyChatSection.classList.remove(\"empty-chat-section--hide\");\n      }\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", checkChatState);\n    window.addEventListener(\"popstate\", checkChatState); //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active chat message container\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active chat input container\n\n    const activeChatInputContainer = document.getElementById(\"activeChatInputContainer\");\n    const activeChatInputTextContent = document.getElementById(\"activeChatInputTextContent\");\n    const activeChatInputAttachmentBox = document.getElementById(\"activeChatInputAttachmentBox\");\n    activeChatInputTextContent.addEventListener(\"input\", () => {\n      if (activeChatInputTextContent.value === \"\") {\n        activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n      } else {\n        if (!activeChatInputAttachmentBox.classList.contains(\"active-chat-input-attachment-box--hide\")) {\n          activeChatInputAttachmentBox.classList.add(\"active-chat-input-attachment-box--hide\");\n        }\n      }\n\n      activeChatInputTextContent.style.height = \"auto\";\n      activeChatInputTextContent.style.height = activeChatInputTextContent.scrollHeight + \"px\";\n      adjustMessageContainerBottomPadding();\n    }, false); ///////////////////////////////////////////////////\n\n    const {\n      default: insertTextAtCursor\n    } = await __webpack_require__.e(/*! import() */ \"node_modules_insert-text-at-cursor_dist_index_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! insert-text-at-cursor */ \"./node_modules/insert-text-at-cursor/dist/index.esm.js\"));\n    const {\n      Picker\n    } = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_emoji-mart_dist_module_js\").then(__webpack_require__.bind(__webpack_require__, /*! emoji-mart */ \"./node_modules/emoji-mart/dist/module.js\"));\n\n    function getEmojiAndAddToInput(emoji) {\n      insertTextAtCursor(activeChatInputTextContent, emoji.native);\n    }\n\n    const activeChatInputEmojiBtn = document.getElementById(\"activeChatInputEmojiBtn\");\n    const activeChatEmojiContainer = document.getElementById(\"activeChatEmojiContainer\");\n    let emojiPickerOptions = {\n      parent: activeChatEmojiContainer,\n      data: async () => {\n        const data = await __webpack_require__.e(/*! import() */ \"vendors-node_modules_emoji-mart_data_sets_14_native_json\").then(__webpack_require__.t.bind(__webpack_require__, /*! @emoji-mart/data */ \"./node_modules/@emoji-mart/data/sets/14/native.json\", 19));\n        return data;\n      },\n      onEmojiSelect: getEmojiAndAddToInput,\n      // onClickOutside: () => {\n      //   console.log(\"hello\")\n      // },\n      autoFocus: false,\n      emojiButtonColors: [\"rgba(155, 223, 88, 0.7)\", \"rgba(155, 40, 88, 0.7)\", \"rgba(40, 223, 88, 0.7)\", \"rgba(155, 223, 88, 0.7)\", \"rgba(40, 223, 223, 0.7)\", \"rgba(20, 150, 150, 0.7)\", \"rgba(150, 150, 20, 0.7)\", \"rgba(150, 20, 150, 0.7)\"],\n      emojiButtonSize: 40,\n      // emojiSize: 25,\n      emojiVersion: 14,\n      icons: \"auto\",\n      maxFrequentRows: 2,\n      navPosition: \"bottom\",\n      previewPosition: \"none\",\n      set: \"native\",\n      dynamicWidth: true\n    };\n    let emojiPicker = new Picker(emojiPickerOptions);\n    activeChatInputEmojiBtn.addEventListener(\"click\", () => {\n      activeChatEmojiContainer.classList.toggle(\"active-chat-emoji-container--hide\");\n    }); ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // input message creation\n\n    let {\n      closeReplyMessageBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev.js */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\")); // ///////////////////////////////////////////////////////////// /////////////////////////////////////////////////////\n\n    const {\n      checkTimeAndCreateNewMessage\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/message.dev */ \"./dev-javascripts/chat/js/message.dev.js\"));\n    const {\n      updateAllChatSection\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_updateAllChatSection_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/updateAllChatSection.dev */ \"./dev-javascripts/chat/js/updateAllChatSection.dev.js\"));\n    const {\n      default: Uppy\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/core */ \"./node_modules/@uppy/core/lib/index.js\", 23));\n    const {\n      default: Dashboard\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/dashboard */ \"./node_modules/@uppy/dashboard/lib/index.js\", 23));\n    const {\n      default: Webcam\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/webcam */ \"./node_modules/@uppy/webcam/lib/index.js\", 23));\n    const {\n      default: ImageEditor\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_lib_index_js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @uppy/image-editor */ \"./node_modules/@uppy/image-editor/lib/index.js\", 23));\n    const {\n      default: Audio\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_audio_lib_index_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/audio */ \"./node_modules/@uppy/audio/lib/index.js\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_core_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de2\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/core/dist/style.css */ \"./node_modules/@uppy/core/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_dashboard_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-784fbd\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/dashboard/dist/style.css */ \"./node_modules/@uppy/dashboard/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_webcam_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_getUrl_js-no-6b1333\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/webcam/dist/style.css */ \"./node_modules/@uppy/webcam/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_image-editor_dist_style_css\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_getUrl_js-no-f4d24e\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/image-editor/dist/style.css */ \"./node_modules/@uppy/image-editor/dist/style.css\"));\n    await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_uppy_audio_dist_style_css\"), __webpack_require__.e(\"data_image_svg_xml_charset_US-ASCII_3Csvg_20xmlns_3D_22http_3A_2F_2Fwww_w3_org_2F2000_2Fsvg_2-cd289e\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/audio/dist/style.css */ \"./node_modules/@uppy/audio/dist/style.css\"));\n    const {\n      default: AwsS3Multipart\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_aws-s3-multipart_lib_index_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! @uppy/aws-s3-multipart */ \"./node_modules/@uppy/aws-s3-multipart/lib/index.js\"));\n    const uppy = new Uppy({\n      id: \"chatMedia\",\n      autoProceed: false,\n      allowMultipleUploadBatches: true,\n      debug: false,\n      onBeforeFileAdded: (currentFile, files) => {\n        console.log(currentFile);\n\n        if (!currentFile.type) {\n          uppy.log(`Skipping file because it has no type`);\n          uppy.info(`Skipping file because it has no type`, \"error\", 500);\n          return false;\n        } else {\n          currentFile.name = \"\";\n          return currentFile;\n        }\n      },\n      onBeforeUpload: files => {// const updatedFiles = {}\n        // Object.keys(files).forEach(fileID => {\n        //   updatedFiles[fileID] = {\n        //     ...files[fileID],\n        //     meta: {\n        //       ...files[fileID].meta,\n        //       fileType: files[fileID].type\n        //     }\n        //   }\n        // })\n        // console.log(updatedFiles)\n        // return updatedFiles\n      },\n      restrictions: {\n        maxFileSize: 1024 * 1024 * 100,\n        minFileSize: null,\n        maxTotalFileSize: 1024 * 1024 * 100 * 10,\n        maxNumberOfFiles: 10,\n        minNumberOfFiles: 1,\n        allowedFileTypes: [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/svg+xml\", \"image/x-png\", \"audio/mpeg\", \"audio/wav\", \"audio/x-wav\", \"audio/ogg\", \"audio/webm\", // \"audio/*\",\n        \"video/mp4\", \"video/webm\", \"video/ogg\", \"video/quicktime\", \"video/x-matroska\"]\n      },\n      meta: {\n        mediaType: \"chat-media\"\n      },\n      infoTimeout: 5000\n    }).use(Dashboard, {\n      trigger: \"#activeChatInputAttachmentFileBtn\",\n      target: \"body\",\n      inline: false,\n      plugins: [\"Webcam\", \"ImageEditor\", \"Audio\"],\n      thumbnailWidth: 300,\n      // closeAfterFinish: false,\n      showRemoveButtonAfterComplete: false,\n      disablePageScrollWhenModalOpen: true,\n      closeModalOnClickOutside: true,\n      theme: \"light\",\n      locale: {\n        strings: {}\n      },\n      note: \"Images, Audios and videos only, up to 10 files, 1 file up to 100 MB\",\n      proudlyDisplayPoweredByUppy: false\n    }).use(Webcam, {\n      target: Dashboard,\n      title: \"Camera\",\n      mirror: true,\n      modes: [\"video-audio\", \"video-only\", \"picture\"],\n      preferredVideoMimeType: \"video/mp4\",\n      showRecordingLength: true\n    }).use(ImageEditor, {\n      target: Dashboard,\n      quality: 0.8\n    }).use(Audio, {\n      id: \"Audio\",\n      target: Dashboard,\n      showAudioSourceDropdown: false\n    }).use(AwsS3Multipart, {\n      limit: 4,\n      companionUrl: `${location.origin}/companion`\n    }); // uppy.on(\"complete\", result => {\n    //   console.log(\n    //     \"Upload complete! We’ve uploaded these files:\",\n    //     result.successful\n    //   )\n    // })\n\n    uppy.on(\"upload-success\", (file, response) => {\n      console.log(\"uppy file:\", file);\n      let userMessage = {};\n      userMessage.chat = activeChatSection.dataset.chatId;\n      userMessage.hasMediaContent = true;\n      userMessage.mediaContentType = file.type.split(\"/\")[0];\n      userMessage.mediaContentMimeType = file.type;\n      userMessage.mediaContentPath = file.s3Multipart.key;\n      userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n      fetch(\"/message\", {\n        method: \"POST\",\n        // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userMessage)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(response);\n      }).then(async data => {\n        if (data.isSuccess) {\n          checkTimeAndCreateNewMessage(data.message, true);\n          closeReplyMessageBox();\n          updateAllChatSection(data.message);\n        } else {\n          let {\n            createMainNotification\n          } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n          createMainNotification(data.error, \"error\");\n        }\n      }).catch(async err => {\n        console.log(err);\n        let {\n          createMainNotification\n        } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n        createMainNotification(\"Server Error In Sending Message, Please Try Again\", \"error\");\n      });\n    }); // active chat input youtube send btn\n\n    const activeChatInputAttachmentYoutubeContentSendBtn = document.getElementById(\"activeChatInputAttachmentYoutubeContentSendBtn\");\n    const activeChatInputAttachmentYoutubeContent = document.getElementById(\"activeChatInputAttachmentYoutubeContent\");\n    activeChatInputAttachmentYoutubeContentSendBtn.addEventListener(\"click\", () => {\n      let userMessage = {};\n\n      if (activeChatInputAttachmentYoutubeContent.value !== \"\") {\n        userMessage.chat = activeChatSection.dataset.chatId;\n        userMessage.hasMediaContent = true;\n        userMessage.mediaContentType = \"youtube\";\n        userMessage.mediaContentMimeType = \"video/mp4\";\n        userMessage.mediaContentPath = activeChatInputAttachmentYoutubeContent.value;\n        userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n        activeChatInputAttachmentYoutubeContent.value = \"\";\n        fetch(\"/message\", {\n          method: \"POST\",\n          // or 'PUT'\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userMessage)\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return Promise.reject(response);\n        }).then(async data => {\n          if (data.isSuccess) {\n            checkTimeAndCreateNewMessage(data.message, true);\n            closeReplyMessageBox();\n            document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\").classList.add(\"input-attachment-btn-box__input-box--hide\");\n            updateAllChatSection(data.message);\n            activeChatInputAttachmentYoutubeBtnInputBox.classList.add(\"attachment-btn-box__input-box--hide\");\n          } else {\n            let {\n              createMainNotification\n            } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n            createMainNotification(data.error, \"error\");\n          }\n        }).catch(async err => {\n          console.log(err);\n          let {\n            createMainNotification\n          } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n          createMainNotification(\"Server Error In Sending Message, Please Try Again\", \"error\");\n        });\n      }\n    }); /////////////////////////////////////////////////////////////\n    // active chat input send btn\n\n    const activeChatInputSendBtn = document.getElementById(\"activeChatInputSendBtn\");\n    activeChatInputSendBtn.addEventListener(\"click\", async () => {\n      let userMessage = {};\n\n      if (activeChatInputTextContent.value.trim() !== \"\" && activeChatSection.dataset.chatId !== \"\") {\n        userMessage.chat = activeChatSection.dataset.chatId;\n        userMessage.hasMediaContent = false;\n        userMessage.textContent = activeChatInputTextContent.value.trim();\n        userMessage.repliedTo = activeChatInputContainer.dataset.repliedTo;\n        activeChatInputTextContent.value = \"\";\n\n        if (activeChatSection.dataset.chatId !== \"\") {\n          let {\n            sendChatMessageStopTypingSocket\n          } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n          sendChatMessageStopTypingSocket(activeChatSection.dataset.chatId);\n          isUserTyping = false;\n        }\n\n        fetch(\"/message\", {\n          method: \"POST\",\n          // or 'PUT'\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userMessage)\n        }).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return Promise.reject(response);\n        }).then(async data => {\n          if (data.isSuccess) {\n            console.log(\"created message:\", data.message);\n            activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n            activeChatInputTextContent.style.height = \"auto\";\n            activeChatInputTextContent.style.height = activeChatInputTextContent.scrollHeight + \"px\";\n\n            if (parseInt(activeChatInputTextContent.style.height.slice(0, -2)) <= 40) {\n              activeChatMessageContainer.style.paddingBottom = \"60px\";\n            } else {\n              activeChatMessageContainer.style.paddingBottom = activeChatInputTextContent.style.height;\n            }\n\n            checkTimeAndCreateNewMessage(data.message, true);\n            closeReplyMessageBox();\n            updateAllChatSection(data.message);\n            activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight;\n          } else {\n            let {\n              createMainNotification\n            } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n            createMainNotification(data.error, \"error\");\n          }\n        }).catch(async err => {\n          console.log(err);\n          let {\n            createMainNotification\n          } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_common_mainNotification_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de1\")]).then(__webpack_require__.bind(__webpack_require__, /*! ../common/mainNotification.dev */ \"./dev-javascripts/common/mainNotification.dev.js\"));\n          createMainNotification(\"Server Error In Sending Message, Please Try Again\", \"error\");\n        });\n      }\n    }); ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // active-chat-input-attachment-box\n\n    const activeChatInputAttachmentBoxBtn = document.getElementById(\"activeChatInputAttachmentBoxBtn\");\n    activeChatInputAttachmentBoxBtn.addEventListener(\"click\", () => {\n      if (activeChatInputAttachmentBoxBtn.classList.contains(\"active-chat-input-attachment-box-btn--selected\")) {\n        openActiveChatInputBox();\n      } else {\n        openActivechatInputAttachmentBox();\n      }\n    });\n    const activeChatInputAttachmentYoutubeBtn = document.getElementById(\"activeChatInputAttachmentYoutubeBtn\");\n    const activeChatInputAttachmentYoutubeBtnInputBox = document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\");\n    activeChatInputAttachmentYoutubeBtn.addEventListener(\"click\", () => {\n      activeChatInputAttachmentYoutubeBtnInputBox.classList.toggle(\"input-attachment-btn-box__input-box--hide\");\n    });\n    initialiseEventForChatModule();\n    IS_INIT_CHAT_MODULE = true;\n  }\n})();\n\nfunction openActivechatInputAttachmentBox() {\n  document.getElementById(\"activeChatInputAttachmentBoxBtn\").classList.add(\"active-chat-input-attachment-box-btn--selected\");\n  const activeChatInputAttachmentBox = document.getElementById(\"activeChatInputAttachmentBox\");\n  activeChatInputAttachmentBox.classList.add(\"active-chat-input-attachment-box--selected\");\n  activeChatInputAttachmentBox.classList.remove(\"active-chat-input-attachment-box--hide\");\n  document.getElementById(\"activeChatInputAttachmentBtnContainer\").classList.remove(\"input-attachment-btn-container--hide\");\n  document.getElementById(\"activeChatInputBox\").classList.add(\"active-chat-input-box--hide\");\n  document.getElementById(\"activeChatInputSendBox\").classList.add(\"active-chat-input-send-box--hide\");\n  document.getElementById(\"activeChatInputAttachmentYoutubeBtnInputBox\").classList.add(\"input-attachment-btn-box__input-box--hide\");\n  adjustMessageContainerBottomPadding();\n}\nfunction openActiveChatInputBox() {\n  document.getElementById(\"activeChatInputAttachmentBoxBtn\").classList.remove(\"active-chat-input-attachment-box-btn--selected\");\n  document.getElementById(\"activeChatInputAttachmentBox\").classList.remove(\"active-chat-input-attachment-box--selected\");\n  document.getElementById(\"activeChatInputAttachmentBtnContainer\").classList.add(\"input-attachment-btn-container--hide\");\n  document.getElementById(\"activeChatInputBox\").classList.remove(\"active-chat-input-box--hide\");\n  document.getElementById(\"activeChatInputSendBox\").classList.remove(\"active-chat-input-send-box--hide\");\n  adjustMessageContainerBottomPadding();\n}\nfunction adjustMessageContainerBottomPadding() {\n  activeChatMessageContainer.style.paddingBottom = activeChatInputContainer.clientHeight + 5 + \"px\";\n  activeChatMessageContainer.scrollTop = activeChatMessageContainer.scrollHeight;\n}\n\nfunction initialiseEventForChatModule() {\n  // initialize event to active chat\n  let activeChatInnerModal = document.getElementById(\"activeChatInnerModal\");\n  let activeChatInnerModalCloseBtn = document.getElementById(\"activeChatInnerModalCloseBtn\");\n  activeChatInnerModalCloseBtn.addEventListener(\"click\", () => {\n    if (!activeChatInnerModal.classList.contains(\"hide\")) activeChatInnerModal.classList.add(\"hide\");\n  }); // active chat to all chat btn\n\n  const ActiveChatToAllChatBtn = document.getElementById(\"ActiveChatToAllChatBtn\");\n  ActiveChatToAllChatBtn.addEventListener(\"click\", async () => {\n    location.hash = \"\";\n\n    if (activeChatSection.dataset.chatId !== \"\") {\n      let {\n        sendChatMessageStopTypingSocket\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n      sendChatMessageStopTypingSocket(activeChatSection.dataset.chatId);\n      isUserTyping = false;\n    }\n  }); //active chat header pic and active chat header name\n\n  let activeChatHeaderPic = document.getElementById(\"activeChatHeaderPic\");\n  activeChatHeaderPic.addEventListener(\"click\", async () => {\n    let activeChatId = activeChatSection.dataset.chatId;\n\n    if (activeChatId != \"\") {\n      let {\n        createActiveChatInfoModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de3\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createActiveChatInfoModal.dev.js */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n      createActiveChatInfoModal(activeChatId);\n    }\n  });\n  let activeChatHeaderName = document.getElementById(\"activeChatHeaderName\");\n  activeChatHeaderName.addEventListener(\"click\", async () => {\n    let activeChatId = activeChatSection.dataset.chatId;\n\n    if (activeChatId != \"\") {\n      let {\n        createActiveChatInfoModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"dev-javascripts_chat_js_createActiveChatInfoModal_dev_js\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de3\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createActiveChatInfoModal.dev.js */ \"./dev-javascripts/chat/js/createActiveChatInfoModal.dev.js\"));\n      createActiveChatInfoModal(activeChatId);\n    }\n  });\n  let activeChatCallBtn = document.getElementById(\"activeChatCallBtn\");\n\n  if (activeChatCallBtn) {\n    activeChatCallBtn.addEventListener(\"click\", async () => {\n      let activeChatId = activeChatSection.dataset.chatId;\n\n      if (activeChatId.toString() !== \"\") {\n        openNewTab(`/call/?chat=${activeChatId}`);\n      }\n    });\n  }\n\n  let activeChatCallRoomBox = document.getElementById(\"activeChatCallRoomBox\");\n\n  if (activeChatCallRoomBox) {\n    activeChatCallRoomBox.addEventListener(\"click\", async () => {\n      let callRoomId = activeChatCallRoomBox.dataset.callRoomId;\n\n      if (callRoomId.toString() !== \"\") {\n        openNewTab(`/call/?room=${callRoomId}`);\n      }\n    });\n  } ////////////////////\n  // create new group chat btn\n  // group chat form Modal and assign event to btn\n\n\n  const createNewGroupChatBtn = document.getElementById(\"createNewGroupChatBtn\");\n  createNewGroupChatBtn.addEventListener(\"click\", async () => {\n    let {\n      createGroupChatFormModal\n    } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lodash_throttle_index_js-node_modules_namespace-emitter_index_js-node_mo-fa5147\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_dashboard_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_aws-s3-multipart_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_lib_index_js\"), __webpack_require__.e(\"vendors-node_modules_uppy_image-editor_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_core_dist_style_css\"), __webpack_require__.e(\"vendors-node_modules_uppy_webcam_dist_style_css\"), __webpack_require__.e(\"dev-javascripts_chat_js_createGroupChatFormModal_dev_js-data_image_png_base64_iVBORw0KGgoAAAA-4573f1\"), __webpack_require__.e(\"node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sourceMaps_j-d9b4de4\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/createGroupChatFormModal.dev */ \"./dev-javascripts/chat/js/createGroupChatFormModal.dev.js\"));\n    createGroupChatFormModal();\n  });\n  document.getElementById(\"activeChatInputReplyBoxCloseBtn\").addEventListener(\"click\", async () => {\n    let {\n      closeReplyMessageBox\n    } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\"));\n    closeReplyMessageBox();\n  }); //send chat:message-typing event\n\n  activeChatInputTextContent.addEventListener(\"input\", async e => {\n    if (activeChatSection.dataset.chatId !== \"\") {\n      if (lastActiveChatId !== \"\" && lastActiveChatId !== activeChatSection.dataset.chatId) {\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(lastActiveChatId);\n        isUserTyping = false;\n        lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      }\n\n      lastActiveChatId = activeChatSection.dataset.chatId.toString();\n      let chatId = activeChatSection.dataset.chatId.toString();\n      const inputValue = activeChatInputTextContent.value.trim();\n\n      if (inputValue && !isUserTyping) {\n        isUserTyping = true;\n        let {\n          sendChatMessageStartTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStartTypingSocket(chatId);\n      } else if (!inputValue && isUserTyping) {\n        isUserTyping = false;\n        let {\n          sendChatMessageStopTypingSocket\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_socket_event-emitter_chat-socket_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../socket/event-emitter/chat-socket */ \"./dev-javascripts/socket/event-emitter/chat-socket/index.js\"));\n        sendChatMessageStopTypingSocket(chatId);\n      }\n    }\n  });\n  allChatChatBoxContainer.addEventListener(\"click\", async e => {\n    let chatBox = e.target.closest(`.chat-box`);\n\n    if (chatBox && allChatChatBoxContainer.contains(chatBox)) {\n      let chatId = chatBox.dataset.chatId;\n\n      if (chatId) {\n        let {\n          fetchActiveChat\n        } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_fetchActiveChat_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/fetchActiveChat.dev */ \"./dev-javascripts/chat/js/fetchActiveChat.dev.js\"));\n        fetchActiveChat(chatId);\n      }\n    } else {\n      return;\n    }\n  });\n  let activeChatMessageContainer = document.getElementById(\"activeChatMessageContainer\");\n  activeChatMessageContainer.addEventListener(\"click\", async e => {\n    console.log(\"activeChatMessageContainer click\");\n    let userMessageBox = e.target.closest(`.active-chat-user-message-box`);\n    let userMessageBoxBtn = e.target.closest(`.active-chat-user-message-box__btn[data-message-box-btn =\"user\"]`);\n    let userMessageContentBox = e.target.closest(`.active-chat-user-message-box__content-box`);\n\n    if (userMessageBoxBtn && activeChatMessageContainer.contains(userMessageBoxBtn)) {\n      userMessageBox.classList.add(\"active-chat-user-message-box--selected\");\n      let {\n        createUserMessageOptionModal\n      } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_plyr_dist_plyr_min_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_message_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_showActiveChatSection_dev_js\"), __webpack_require__.e(\"dev-javascripts_chat_js_userMessageOptionModal_dev_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./js/userMessageOptionModal.dev */ \"./dev-javascripts/chat/js/userMessageOptionModal.dev.js\"));\n      createUserMessageOptionModal(userMessageBox);\n    } else if (userMessageContentBox && activeChatMessageContainer.contains(userMessageContentBox)) {\n      if (userMessageBox.classList.contains(\"active-chat-user-message-box--replied-message\")) {\n        let repliedMessageId = userMessageBox.dataset.repliedMessageId;\n        let repliedUserMessageBox = document.querySelector(`.active-chat-user-message-box[data-message-id=\"${repliedMessageId}\"]`);\n\n        if (repliedUserMessageBox) {\n          repliedUserMessageBox.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"nearest\"\n          });\n          repliedUserMessageBox.classList.add(\"active-chat-user-message-box--highlight\");\n          setTimeout(function () {\n            repliedUserMessageBox.classList.remove(\"active-chat-user-message-box--highlight\");\n          }, 1000);\n        }\n      }\n    } else {\n      return;\n    }\n  });\n  activeChatMessageContainer.addEventListener(\"dblclick\", async e => {\n    let userMessageBox = e.target.closest(`.active-chat-user-message-box`);\n\n    if (userMessageBox && activeChatMessageContainer.contains(userMessageBox)) {\n      let messageId = userMessageBox.dataset.messageId;\n      let {\n        openReplyMessageBox\n      } = await __webpack_require__.e(/*! import() */ \"dev-javascripts_chat_js_replyMessageBox_dev_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./js/replyMessageBox.dev.js */ \"./dev-javascripts/chat/js/replyMessageBox.dev.js\"));\n      openReplyMessageBox(messageId);\n    } else {\n      return;\n    }\n  });\n  window.addEventListener(\"click\", e => {\n    if (e.target === activeChatInnerModal) {\n      if (!activeChatInnerModal.classList.contains(\"hide\")) activeChatInnerModal.classList.add(\"hide\");\n    }\n  });\n}\n\nfunction openNewTab(url) {\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", url);\n  link.setAttribute(\"target\", \"_blank\");\n  link.setAttribute(\"rel\", \"noopener noreferrer\"); // simulate a click on the link to open the new tab\n\n  link.click();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dev-javascripts/chat/chat.dev.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "non-initial-chunk/" + chunkId + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "frontend:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"chat": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./dev-javascripts/chat/chat.dev.js");
/******/ 	
/******/ })()
;